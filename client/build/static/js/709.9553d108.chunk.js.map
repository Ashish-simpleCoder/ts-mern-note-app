{"version":3,"file":"static/js/709.9553d108.chunk.js","mappings":"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","sources":["Components/HigherComponents/FormFields/FormField.tsx","Components/HigherComponents/FormFields/InputField.tsx","Components/HigherComponents/FormFields/LabelField.tsx","Pages/Login/Login.modal.tsx","Pages/Login/Login.page.tsx"],"sourcesContent":["import { Children, cloneElement, memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormField = memo(({children}:{children:JSX.Element[]})=>{\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    return(\r\n        <StyledFormField>\r\n            {\r\n                Children.map(children, (child:JSX.Element)=>{\r\n                    if(typeof child.type === 'string') return child\r\n                    return cloneElement(child, {focus, setFocus})\r\n                })\r\n            }\r\n        </StyledFormField>\r\n    )\r\n})\r\nexport default FormField\r\n\r\n\r\nconst StyledFormField = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    width:100%;\r\n    position:relative;\r\n    margin-top:5rem;\r\n    /* box-shadow:0 0.1rem 0.3rem rgba(0, 0, 0, 0.5); */\r\n\r\n    /* giving margin on email form field */\r\n    &:nth-of-type(1){\r\n        margin-top:3rem;\r\n    }\r\n\r\n    label{\r\n        position:absolute;\r\n        top:50%;\r\n        left:0;\r\n        transform:translate(4rem, -50%);\r\n        pointer-events:none;\r\n        transition:all 0.25s;\r\n    }\r\n    .transform{\r\n        color:var(--transform-label-clr);\r\n        transform:translate(1rem, -230%);\r\n        font-size:clamp(1.4rem, 1.5rem, 1.5vw);\r\n    }\r\n\r\n    >img{\r\n        height:2.5rem;\r\n        position:absolute;\r\n        top:50%;\r\n        left: 0.5rem;\r\n        transform:translateY(-50%);\r\n    }\r\n\r\n    >input{\r\n        width:100%;\r\n        padding:1rem 0.5rem 1rem 4rem;\r\n    }\r\n`","import { ChangeEvent, Dispatch, SetStateAction } from 'react'\r\nimport styled from 'styled-components'\r\nimport Img from '../../PureComponents/Img'\r\n\r\nconst InputField = (({props, setFocus}:{props:InputProps, setFocus?:Dispatch<SetStateAction<boolean>>})=>{\r\n    const {state, name, handleChange} = props\r\n    return(\r\n        <>\r\n        <Img src={`./imgs/${name}.avif`} alt={name}/>\r\n        <StyledInput type=\"text\" value={state} name={name} onChange={(e)=>handleChange(e)} onFocus={()=>setFocus && setFocus(true)}\r\n            onBlur={(e)=>{\r\n                setFocus && setFocus(e.target.value.length>0 )\r\n            }}\r\n            />\r\n        </>\r\n    )\r\n})\r\nexport default InputField\r\n\r\nconst StyledInput = styled.input`\r\n    border:none;\r\n    outline:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--focused) !important;\r\n    font-size:clamp(1.5rem, 1.6rem, 1.6vw);\r\n`\r\n\r\n\r\n\r\ntype InputProps = {\r\n    name:string,\r\n    state:string,\r\n    handleChange: (e: ChangeEvent<HTMLInputElement>) => void,\r\n}","import styled from \"styled-components\"\r\n\r\ntype LabelProps = { text:string, focus?:string  }\r\n\r\n\r\nconst LabelField = (props:LabelProps)=>{\r\n    return(\r\n        <StyledLabel className={props.focus && 'transform'}>{props.text}</StyledLabel>\r\n    )\r\n}\r\nexport default LabelField\r\n\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size:clamp(1.5rem, 1.6rem, 1.6vw);\r\n`","import { useCallback } from \"react\";\r\nimport { ChangeEvent, FormEvent, useEffect, useMemo, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormField from \"../../Components/HigherComponents/FormFields/FormField\";\r\nimport InputField from \"../../Components/HigherComponents/FormFields/InputField\";\r\nimport LabelField from \"../../Components/HigherComponents/FormFields/LabelField\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\";\r\nimport Form from \"../../Components/PureComponents/Form\";\r\nimport H3 from \"../../Components/PureComponents/H3\";\r\nimport UserStates from \"../../Context/UserContext\";\r\n\r\n\r\n\r\nconst LoginModal = ()=>{\r\n    const [state, setState] = useState({email:'', password:\"\"})\r\n    const [errors, setErrors] = useState({} as {email?:string, password?:string, err?:string})\r\n    const {setUser} = UserStates()\r\n    const history = useHistory()\r\n    const [login_loader, setLoginLoader] = useState(false)\r\n\r\n\r\n    const handleSubmit = useCallback(async(e:FormEvent<HTMLFormElement>)=>{\r\n        e.preventDefault()\r\n        setLoginLoader(true)       //making loader appear\r\n        const data = await loginUser(state.email, state.password)\r\n        if(data?._id){\r\n            setUser({_id:data._id,email:data.email_id})\r\n            history.push('/')\r\n        }\r\n        setLoginLoader(false)      //making loader disappear\r\n        data?.errors && setErrors(data.errors)\r\n        data?.error && setErrors({email:'', password:'', err:data.error})\r\n    },[state, setUser, history])\r\n\r\n    const handleChange = useCallback((e:ChangeEvent<HTMLInputElement>) =>{\r\n        setState(old=>({\r\n            ...old,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        const clr = errors &&  setTimeout(()=>setErrors({email:'', password:'', err:''}), 3000)\r\n        // errors &&  setTimeout(()=>setErrors({email:'', password:'', err:''}),3000)\r\n        return(()=>{\r\n            clearInterval(clr)\r\n        })\r\n    },[errors])      //resetting the errors or removig or cleaning\r\n\r\n\r\n\r\n    const EmailProps = useMemo(()=>({\r\n        state:state.email, handleChange, name:'email'\r\n    }),[state.email, handleChange])\r\n    const PasswordProps = useMemo(()=>({\r\n        state:state.password, handleChange, name:'password'\r\n    }),[state.password, handleChange])\r\n\r\n    return(\r\n        <>\r\n            <Form mode='login' handleSubmit={handleSubmit}>\r\n                <H3  text='Login'/>\r\n                <FormField>\r\n                    <LabelField text='email'/>\r\n                    <InputField props={EmailProps}/>\r\n                </FormField>\r\n                <FormField>\r\n                    <LabelField text='password'/>\r\n                    <InputField props={PasswordProps}/>\r\n                </FormField>\r\n                { errors.email &&  <ErrorDisplayer  error={errors.email}/> }\r\n                { errors.password &&  <ErrorDisplayer  error={errors.password}/> }\r\n                { errors.err &&  <ErrorDisplayer  error={errors.err}/> }\r\n                <Button  text='submit'  mode='login_btn' loader={login_loader} />\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nexport default LoginModal\r\n\r\n\r\n\r\nconst loginUser = async(email:string, password:string) =>{\r\n    try{\r\n        const res = await fetch('/api/v1/user/login',{\r\n            method:'POST',\r\n            body:JSON.stringify({email,password}),\r\n            headers:{ 'Content-Type':\"application/json\"},\r\n        })\r\n        const data:{errors:{email?:string, password?:string,}, error?:string, _id:string, email:string} = await res.json()\r\n        const {errors, error,  _id, email:email_id} =  data\r\n        return {errors, error, _id, email_id}\r\n    }catch(err){\r\n        console.log(err)\r\n    }\r\n}","import LoginModal from \"./Login.modal\";\r\n\r\nconst LoginPage = ()=>{\r\n    return(\r\n        <>\r\n        <LoginModal />\r\n        </>\r\n    )\r\n}\r\nexport default LoginPage"],"names":["FormField","memo","children","useState","focus","setFocus","StyledFormField","Children","child","type","cloneElement","styled","props","state","name","handleChange","src","alt","StyledInput","value","onChange","e","onFocus","onBlur","target","length","StyledLabel","className","text","email","password","setState","errors","setErrors","setUser","UserStates","history","useHistory","login_loader","setLoginLoader","handleSubmit","useCallback","preventDefault","loginUser","data","_id","email_id","push","error","err","old","useEffect","clr","setTimeout","clearInterval","EmailProps","useMemo","PasswordProps","Form","mode","H3","LabelField","InputField","Error","Button","loader","fetch","method","body","JSON","stringify","headers","res","json","console","log"],"sourceRoot":""}