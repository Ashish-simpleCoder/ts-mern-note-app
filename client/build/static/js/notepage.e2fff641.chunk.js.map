{"version":3,"file":"static/js/notepage.e2fff641.chunk.js","mappings":"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","sources":["Components/HigherComponents/LeftRightWrapper.tsx","Components/HigherComponents/Wrapper.tsx","Components/PureComponents/Caption.tsx","Components/PureComponents/Error.tsx","Components/PureComponents/Form.tsx","Components/PureComponents/H3.tsx","Pages/Home/hooks/useFetchUser.tsx","Pages/Note/CustomHooks/useHandleChange.tsx","Pages/Login/useEnableEditModal.tsx","Components/HigherComponents/Input.tsx","Components/PureComponents/Textarea.tsx","Pages/Note/CustomHooks/useNoteOperations.tsx","Pages/Note/Note.input.section.tsx","Components/HigherComponents/OverlayMenu.tsx","Components/PureComponents/ActionLink.tsx","Components/Svg/Clr.tsx","Pages/Note/Note.modal.tsx","Components/HigherComponents/Section.header.tsx","Pages/Note/Dummy.tsx","Components/PureComponents/RandomSpan.tsx","Pages/Note/Note.tsx","Pages/Note/CustomHooks/useNoteFetch.tsx","Pages/Note/Note.output.section.tsx","Pages/Note/useClickListener.tsx","Pages/Note/useEvent.tsx","Pages/Note/CustomHooks/useEnableMenu.tsx","utils/ColorArr.tsx","Components/HigherComponents/ColorList.tsx","Pages/Note/Note.page.tsx","modules/fetchNotes.ts","modules/updateNote.ts"],"sourcesContent":["import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\nconst LeftRightWrapper = memo(({children, styles, before_obj}:{children:ReactNode, styles?:CSSProperties, before_obj?:boolean})=>{\r\n    return(\r\n        <StyledLeftRightWrapper style={styles} before_obj={before_obj}>\r\n            {children}\r\n        </StyledLeftRightWrapper>\r\n    )\r\n})\r\nexport default LeftRightWrapper\r\n\r\nconst StyledLeftRightWrapper = styled.section<{before_obj?:boolean}>`\r\n    display:flex;\r\n    flex-direction:column;\r\n    flex-wrap:wrap;\r\n\r\n    @media (min-width:700px){\r\n        flex-direction:unset;\r\n    }\r\n`","import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\n\r\n\r\nconst Wrapper = memo(({children, styles, page, mode}:{\r\n    children:ReactNode, styles?:CSSProperties, page?:string\r\n    mode?:string\r\n})=>{\r\n    if(mode === 'edit_note'){\r\n        return (\r\n            <StyledEditModalWrapper className='edit_modal_wrapper'>\r\n                {children}\r\n            </StyledEditModalWrapper>\r\n        )\r\n    }\r\n    if(page === 'note_output'){\r\n        return(\r\n            <StyledNoteOutWrapper style={styles}>\r\n                {children}\r\n            </StyledNoteOutWrapper>\r\n        )\r\n    }\r\n    return (\r\n        <StyledWrapper mode={mode} style={styles} className={mode}>\r\n            {children}\r\n        </StyledWrapper>\r\n    )\r\n})\r\nexport default Wrapper\r\n\r\nconst StyledWrapper = styled.section<{mode?:string}>`\r\n    display:flex;\r\n    overflow:hidden;\r\n    position:relative;\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case 'hero': return css`\r\n                width:100%;\r\n                align-items:center;\r\n                justify-content:center;\r\n                transform-origin:center;\r\n                flex-direction:column;\r\n                text-align:center;\r\n                padding:2rem;\r\n\r\n                @media (min-width:700px){\r\n                    width:50%;\r\n                }\r\n            `\r\n\r\n            case \"create_note_container\": return css`\r\n                padding:2rem;\r\n                justify-content:center;\r\n                margin-bottom:3rem;\r\n                button{\r\n                    width:100%;\r\n                }\r\n\r\n                @media (min-width:700px){\r\n                    margin-bottom:0rem;\r\n                        border-right:var(--border);\r\n                        height:100%;\r\n                        position:fixed;\r\n                        width:var(--width);\r\n                    }\r\n            `\r\n\r\n            case 'notes_container_wrapper': return css`\r\n                flex-direction:column;\r\n                @media (min-width:700px){\r\n                    position:relative;\r\n                    left:var(--width);\r\n                    width:calc(100% - var(--width));\r\n                }\r\n            `\r\n\r\n            case 'notes_container': return css`\r\n                justify-content:center;\r\n                gap:3rem;\r\n                padding:2rem;\r\n                flex-wrap:wrap;\r\n                @media (min-width:700px){\r\n                    justify-content:space-around;\r\n                }\r\n            `\r\n            default: return css`\r\n            `\r\n        }\r\n    }}\r\n\r\n    img{\r\n        display:flex;\r\n        /* width:32rem; */\r\n        /* height:35rem; */\r\n        width:clamp(23rem, 28rem, 28vw);\r\n        height:clamp(28rem, 32rem, 32vw);\r\n        transform:rotate(-20deg) scale(0.8);\r\n        transform-origin:center;\r\n    }\r\n`\r\n\r\n\r\nconst StyledNoteOutWrapper = styled.section`\r\n    display:flex;\r\n    justify-content:center;\r\n    gap:2rem;\r\n    flex-wrap:wrap;\r\n    padding:2rem;\r\n\r\n\r\n    @media (min-width:700px){\r\n        position:relative;\r\n        left:var(--width);\r\n        width:calc(100% - var(--width));\r\n        justify-content:space-around;\r\n    }\r\n`\r\n\r\nconst StyledEditModalWrapper = styled.section`\r\n    width:100%;\r\n    height:100%;\r\n    top:0 !important;\r\n    inset:0;\r\n    position:fixed;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    background:var(--edit-modal-bg);\r\n    display:none;\r\n    border-radius:0.5rem;\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst Caption = memo(({text, styles}:{text?:string, styles?:CSSProperties | any})=>{\r\n    return(\r\n        <StyledCaption style={styles}>{text}</StyledCaption>\r\n    )\r\n})\r\nexport default Caption\r\n\r\nconst StyledCaption = styled.p`\r\n    font-size:clamp(1.8rem, 2rem ,2vw);\r\n    opacity:0.9;\r\n    white-space:pre-line;\r\n    word-break:break-all;\r\n    margin-top:1rem;\r\n    /* width:max-content; */\r\n`","import styled from \"styled-components\"\r\n\r\nconst ErrorDisplayer = (({error}:{error:string})=>{\r\n    return(\r\n        <Styled>{error}</Styled>\r\n    )\r\n})\r\nexport default ErrorDisplayer\r\n\r\nconst Styled = styled.p`\r\n    color:red;\r\n    font-size:clamp(1.5rem,1.6rem,1.6vw);\r\n`","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo(({children, no_bg, mode, handleSubmit, styles, animate}:{\r\n    children:ReactNode, no_bg?:boolean, mode?:string, handleSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?:boolean\r\n})=>{\r\n\r\n    return(\r\n        <StyledForm onSubmit={(e)=>{\r\n                e.preventDefault()\r\n                handleSubmit && handleSubmit(e)\r\n            }}\r\n            style={styles}\r\n            no_bg={no_bg}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default Form\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?:boolean, mode?:string, animate?:boolean}>`\r\n    height:45rem;\r\n    width:90%;\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    max-width:35rem;\r\n    background:var(--form-bg);\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                margin: auto;\r\n                max-width:40rem;\r\n                margin-top:5rem;\r\n                border-radius:0.5rem;\r\n                box-shadow:0 0.3rem 0.3rem rgba(0,0,0,0.3);\r\n                padding:0 2rem 2rem 2rem;\r\n                //heading of the form\r\n                >h3{\r\n                    padding:1rem 0 2rem 0;\r\n                }\r\n                //containers of input and label\r\n                .div{\r\n                    padding:0 2rem;\r\n                    margin-top:2rem;\r\n                    width:100%;\r\n                    display:flex;\r\n                    justify-content:space-between;\r\n                    align-items:center;\r\n                }\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top:auto   //button will be at the bottom of the form\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            opacity:0;\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H3 = memo(({text, styles, handleClick}:{text:string, styles?:CSSProperties, handleClick?:() =>void})=>{\r\n    return(\r\n        <StyledH3 style={styles} onClick={handleClick}>{text}</StyledH3>\r\n    )\r\n})\r\nexport default H3\r\n\r\nconst StyledH3 = styled.h3<{styles?:CSSProperties}>`\r\n    font-size:2.2rem;\r\n    font-weight:500;\r\n`","import { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useUserCtx } from \"../../../Context/UserContext\"\r\n\r\nconst useFetchUser = ({auth = false} : {auth?:boolean}) =>{\r\n    const {setUser} = useUserCtx()\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const res = await (await import(\"../../../utils/fetchUser\")).default()\r\n            if(auth && res?._id){\r\n                setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            }else{\r\n                res?._id && setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            }\r\n            auth && !res?._id && history.push('/login')\r\n        })()\r\n    },[setUser, history, auth])\r\n}\r\nexport default useFetchUser","import { ChangeEvent } from \"react\"\r\n\r\nconst useHandleChange = () =>{\r\n    const handleChange = (e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, handler:any)=>{\r\n        handler((old:any)=>({\r\n            ...old,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    }\r\n    return {handleChange}\r\n}\r\nexport default useHandleChange","import { useCallback, useEffect, useRef } from \"react\"\r\n\r\nconst useEnableEditModal = ({_id}:{_id:string}) => {\r\n    const ref_id = useRef(_id)\r\n    useEffect(()=>{\r\n        ref_id.current = _id\r\n    }, [_id])\r\n\r\n    const enableEditModal = useCallback((_id:string) =>{\r\n        if(_id){\r\n            const modal = document.getElementById('modal') as HTMLDivElement\r\n            const p = modal.parentElement as any\r\n            const element = document.getElementById(_id) as HTMLDivElement\r\n            const {top, left, width, height} = element.getBoundingClientRect()\r\n            modal.style.top = top+'px'\r\n            modal.style.left = left+'px'\r\n            modal.style.width = width+'px'\r\n            modal.style.height = height+'px'\r\n            p.style.display='flex'\r\n            modal.style.display='flex'\r\n            setTimeout(()=> document.body.classList.add('edit_mode'),20)\r\n        }\r\n    }, [ref_id])\r\n\r\n    useEffect(()=>{\r\n        //when the id changes then if it has value then enable editModal\r\n        enableEditModal(ref_id.current)\r\n    },[_id])\r\n\r\n    return {enableEditModal}\r\n}\r\nexport default useEnableEditModal","import { ChangeEvent, memo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport  { useUserCtx } from \"../../Context/UserContext\";\r\n\r\n\r\n\r\nconst Input = memo(({ placeholder, name, value, handleChange, mode, type}: InputProps)=>{\r\n    const {setSearch} = useUserCtx()\r\n\r\n    return <StyledInput\r\n        type={type === 'search' ? 'search' : 'text'} name={name} value={value}\r\n        mode={mode}\r\n        onChange={(e)=>{\r\n            if(name === 'search'){\r\n                setSearch(e.target.value)\r\n            }else{\r\n                handleChange && handleChange(e,)\r\n            }\r\n        }}\r\n        placeholder={placeholder}\r\n    />\r\n})\r\nexport default Input\r\n\r\n\r\ntype InputProps = {\r\n    type?:string\r\n    mode?:string\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name:string\r\n}\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?:string}>`\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0 1rem;\r\n    height:3.5rem;\r\n    background:var(--input-bg);\r\n    outline:none;\r\n\r\n    ${({mode})=>{\r\n        switch (mode){\r\n            case 'edit_note': return css`\r\n                background:inherit;\r\n                `\r\n            case 'note_title': return css`\r\n                width:100%;\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n                `\r\n            default : return css`\r\n            &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n    }}}\r\n    border-radius:0.3rem;\r\n    outline:var(--border);\r\n`\r\n\r\n","import { ChangeEvent } from \"react\"\r\nimport styled, { css, CSSProperties } from \"styled-components\"\r\n\r\nconst Textarea = ({value, handleChange, placeholder, name, styles, hover_bg}:TextareaProps)=>{\r\n    return(\r\n        <StyledTextArea\r\n            name={name}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            style={styles}\r\n            hover_bg={hover_bg}\r\n            onChange={(e)=>handleChange && handleChange(e)}\r\n        />\r\n    )\r\n}\r\nexport default Textarea\r\n\r\nconst StyledTextArea = styled.textarea<{hover_bg?:boolean}>`\r\n    width:100%;\r\n    height:15rem;\r\n    @media (min-width:700px){\r\n        flex:1;\r\n    }\r\n    margin-bottom:2rem;\r\n    resize:none;\r\n    margin-top:1rem;\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--input-bg);\r\n    outline:var(--border);\r\n    border-radius:0.3rem;\r\n    ${({hover_bg})=>{\r\n        if(hover_bg){\r\n            return css`\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n        }\r\n    }}\r\n\r\n`\r\n\r\n\r\n\r\ntype TextareaProps = {\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name?:string,\r\n    styles?:CSSProperties,\r\n    hover_bg?:boolean\r\n}","import { Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\nimport fetchNotes from '../../../modules/fetchNotes'\r\nimport { NoteInterface } from '../../../types'\r\n\r\nconst useNoteOperations = () => {\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(false)\r\n    const [error, setError] = useState({err:''})\r\n    const [refetch, setRefetch] = useState(false)\r\n\r\n    // console.log('note operations')\r\n    // useEffect(()=>{\r\n    //     console.log('note operations')\r\n    // }, [])\r\n\r\n    useEffect(()=>{\r\n        if(refetch){\r\n            fetchNotes('/api/v1/user/notes').then(res=>{\r\n                res?.notes && setUser(old=>({...old, notes:res.notes}))\r\n            })\r\n            setRefetch(false)\r\n        }\r\n    }, [refetch])\r\n\r\n    // useEffect(()=>{\r\n    //     if(error.err){\r\n    //         setTimeout(()=>setError({err:''}), 3000)\r\n    //     }\r\n    //     // const clr = error.err && setTimeout(()=>setError({err:''}), 3000)\r\n    //     // return(()=>{\r\n    //     //     clearInterval(clr)\r\n    //     // })\r\n    // },[error])\r\n\r\n    const handleDeleteNote = useCallback(async(_id:string, setEditNote?:Dispatch<SetStateAction<{title:'', content:'', _id:'', bg:[]}>>) =>{\r\n        setLoader(true)     //displaying the loader while deleting the note\r\n        const {default: deleteNote} = await import('../../../modules/deleteNote')\r\n        const data = await deleteNote(`/api/v1/user/notes/${_id}`)\r\n        if(data?.success){\r\n            // setLoader(false)\r\n            setRefetch(true)\r\n        }\r\n\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n    }, [])\r\n\r\n\r\n    const handleUpdateNote = useCallback(async(note:NoteInterface, setEditNote?:Dispatch<SetStateAction<NoteInterface>>)=>{\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n        const {default:updateNotes} = await import('../../../modules/updateNote')\r\n        const data = await updateNotes(`/api/v1/user/notes/${note._id}`,note)\r\n        data?.success && setRefetch(true)\r\n    }, [])\r\n\r\n    const handleNoteSubmit = useCallback(async(e:FormEvent<HTMLFormElement>, note:{title:string, content:string}, setNote:Dispatch<SetStateAction<{title:string, content:string}>>)=>{\r\n        e.preventDefault()\r\n        setLoader(true)\r\n        const {default:createNote} = await import('../../../modules/createNote')\r\n        const data = await createNote(note)\r\n        if(data?.error) setError({err:data.error})\r\n        if(data?.success){\r\n            setRefetch(true)\r\n            setNote({title:'', content:''})\r\n        }\r\n        setLoader(false)\r\n    },[])\r\n\r\n    return {loader, setLoader, handleDeleteNote, handleUpdateNote, handleNoteSubmit, error}\r\n}\r\nexport default useNoteOperations","import { useCallback} from \"react\";\r\nimport { ChangeEvent, memo, useState } from \"react\";\r\nimport Input from \"../../Components/HigherComponents/Input\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\";\r\nimport Form from \"../../Components/PureComponents/Form\";\r\nimport Textarea from \"../../Components/PureComponents/Textarea\";\r\nimport useDeleteNote from \"./CustomHooks/useNoteOperations\";\r\nimport useHandleChange from \"./CustomHooks/useHandleChange\";\r\n\r\n\r\nconst NoteInput = memo(()=>{\r\n    const [note, setNote] = useState({title:'', content:''})\r\n    const {loader, error, handleNoteSubmit} = useDeleteNote()\r\n    const {handleChange} = useHandleChange()\r\n\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setNote)\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <Form no_bg={true} handleSubmit={(e)=>handleNoteSubmit(e, note, setNote)} mode='create_note'>\r\n            <Input type='title' placeholder='note title...' name='title' value={note.title} handleChange={handleNoteChange} mode='note_title'/>\r\n\r\n            <Textarea name='content'  value={note.content} handleChange={handleNoteChange} placeholder=\"type your notes....\"   hover_bg={true}/>\r\n\r\n            <Button text='create a new note' mode='create_note_btn' loader={loader}/>\r\n\r\n            { error.err &&  <ErrorDisplayer error={error.err}/>}\r\n        </Form>\r\n    )\r\n})\r\nexport default NoteInput\r\n","import { ReactNode } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst OverlayMenu = ({children}:{children:ReactNode})=> {\r\n    return(\r\n        <StyledMenu className=\"overlay-menu\">\r\n            {children}\r\n        </StyledMenu>\r\n    )\r\n}\r\nexport default OverlayMenu\r\n\r\n\r\n\r\nconst StyledMenu = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    flex-direction:row;\r\n`","import { Children, cloneElement, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Caption from \"./Caption\"\r\n\r\nconst ActionLink = ({children, tooltip_text, handleClick}:{children:JSX.Element | JSX.Element[], tooltip_text?:string, handleClick?:any}) =>{\r\n\r\n    return(\r\n        <StyledLink onClick={handleClick}>\r\n            {children}\r\n            {/* { tooltip_text && <Caption text={tooltip_text} styles={{background:'var(--tooltip-bg)', padding:'0.5rem', borderRadius:'0.3rem'}}/>  } */}\r\n        </StyledLink>\r\n    )\r\n}\r\nexport default ActionLink\r\n\r\n\r\nconst StyledLink = styled.div<{tooltip_text?:string}>`\r\n    position:relative;\r\n    overflow:none;\r\n    cursor: pointer;\r\n\r\n    >p{\r\n        /* display:none; */\r\n        position:absolute;\r\n        top:100%;\r\n        pointer-events:none;\r\n        opacity:0;\r\n        pointer-events:none;\r\n        font-size:clamp(1.3rem, 1.4rem, 1.4vw);\r\n    }\r\n\r\n    &:hover{\r\n        >p{        //displaying tooltip text on hover\r\n            animation:show 3s ease both;\r\n        }\r\n    }\r\n    .clr-list{\r\n        opacity:0;\r\n        pointer-events:none;\r\n    }\r\n\r\n    &:focus-within, &:focus{\r\n        .clr-list{\r\n            opacity:1;\r\n            pointer-events:all;\r\n        }\r\n    }\r\n\r\n`","import UserStates, { ThemeCtx, useThemeStates } from \"../../Context/UserContext\"\r\n\r\nconst Clr = () =>{\r\n    const {dark_theme} = useThemeStates()\r\n\r\n    return (\r\n        <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill={dark_theme ? 'hsl(0, 0%, 80%)' : 'hsl(0, 0%, 10%)'}>\r\n                <path d=\"M12 22C6.49 22 2 17.51 2 12S6.49 2 12 2s10 4.04 10 9c0 3.31-2.69 6-6 6h-1.77c-.28 0-.5.22-.5.5 0 .12.05.23.13.33.41.47.64 1.06.64 1.67A2.5 2.5 0 0 1 12 22zm0-18c-4.41 0-8 3.59-8 8s3.59 8 8 8c.28 0 .5-.22.5-.5a.54.54 0 0 0-.14-.35c-.41-.46-.63-1.05-.63-1.65a2.5 2.5 0 0 1 2.5-2.5H16c2.21 0 4-1.79 4-4 0-3.86-3.59-7-8-7z\"/>\r\n                <circle cx=\"6.5\" cy=\"11.5\" r=\"1.5\"/>\r\n                <circle cx=\"9.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"14.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"17.5\" cy=\"11.5\" r=\"1.5\"/>\r\n            </svg>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Clr","import { ChangeEvent, memo, MouseEvent, ReactNode, useCallback, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/HigherComponents/Input\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport Textarea from \"../../Components/PureComponents/Textarea\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport { ThemeCtx } from \"../../Context/UserContext\";\r\nimport useHandleChange from \"./CustomHooks/useHandleChange\";\r\nimport useDeleteNote from \"./CustomHooks/useNoteOperations\";\r\nimport { useEditNoteCtx } from \"./Note.page\";\r\n\r\n\r\n\r\nconst NoteModal = memo(({children, mode}:{\r\n    children?:ReactNode\r\n    mode:string\r\n})=>{\r\n    const {note:edit_note , setEditNote} = useEditNoteCtx()\r\n    const {dark_theme} = useContext(ThemeCtx)\r\n    const {loader, handleDeleteNote, handleUpdateNote} = useDeleteNote()\r\n    const {handleChange} = useHandleChange()\r\n\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setEditNote)\r\n    }, [handleChange, setEditNote])\r\n\r\n    const {setMenuDetails} = useEditNoteCtx()\r\n\r\n\r\n\r\n    if(mode === 'edit_note'){\r\n      return (\r\n        <Wrapper mode={mode}>\r\n\r\n            <StyledEditModal  id='modal' className='edit_modal' style={{background:dark_theme ? edit_note.bg[1] : edit_note.bg[0]}} >\r\n                <Input  name='title' value={edit_note.title} handleChange={handleNoteChange} mode=\"edit_note\"/>\r\n                <Textarea  name='content' value={edit_note.content} handleChange={handleNoteChange} styles={{background:'inherit'}}/>\r\n                {/* <div className=\"btns\">\r\n                    <Button text='save' loader={loader}  handleClick={()=>handleUpdateNote(edit_note)} />\r\n                    <Button text='delete' loader={loader} handleClick={()=>handleDeleteNote(edit_note._id)}  />\r\n                </div> */}\r\n                {children}       {/* if any childens are send then they will be also rendered.*/}\r\n                <OverlayMenu>\r\n                        <ActionLink handleClick={(e:MouseEvent<HTMLDivElement , MouseEvent>)=>{setMenuDetails && setMenuDetails(e, edit_note)}}><Clr/></ActionLink>\r\n                        <Button   mode='delete_note_btn' handleClick={()=>handleDeleteNote(edit_note._id)} loader={loader}/>\r\n                    </OverlayMenu>\r\n            </StyledEditModal>\r\n\r\n        </Wrapper>\r\n      )\r\n    }\r\n    return(\r\n        <></>\r\n    )\r\n})\r\nexport default NoteModal\r\n\r\nconst StyledEditModal = styled.div`\r\n    height:40rem;\r\n    width:100%;\r\n    max-width:60%;\r\n    border-radius:0.5rem;\r\n    transition:all 0.3s linear;\r\n    background:var(--modal-bg);\r\n    position:fixed;\r\n    overflow:hidden;\r\n    box-shadow:0 0.3rem 1rem rgba(0, 0, 0, 0.4);\r\n    flex-direction:column;\r\n\r\n    textarea{\r\n        flex:1;\r\n    }\r\n\r\n    input,textarea{\r\n        margin-top:0;\r\n        border:none !important;\r\n        outline:none;\r\n        border-radius:0;\r\n        font-size:clamp(1.6rem,1.7rem, 1.7vw);\r\n        /* background:white; */\r\n        &:focus{\r\n            background:inherit;\r\n        }\r\n    }\r\n    input{\r\n        text-align:center ;\r\n        font-weight:500;\r\n    }\r\n\r\n    .btns{\r\n        margin-top:auto;\r\n        display:flex;\r\n        justify-content:space-between;\r\n        flex-direction:row;\r\n        padding:2rem;\r\n    }\r\n    .save_btn{\r\n        background:var(--save-btn-bg);\r\n    }\r\n    .delete_btn{\r\n        background:var(--delete-btn-bg);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionHeader = memo(({children})=>{\r\n    return(\r\n        <StyledSectionHeader>\r\n            {children}\r\n        </StyledSectionHeader>\r\n    )\r\n})\r\nexport default SectionHeader\r\n\r\nconst StyledSectionHeader = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    padding:1rem;\r\n    border-bottom:var(--border);\r\n`","import {ReactNode} from 'react'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\n\r\nconst Dummy = ({children}:{children:ReactNode}) =>{\r\n    return(\r\n       <Wrapper styles={{height:'90vh',display:'flex', alignItems:'center',justifyContent:'center', flexDirection:'column'}}>\r\n        { children }\r\n       </Wrapper>\r\n    )\r\n}\r\nexport default Dummy","import {memo} from 'react'\r\n\r\n\r\nconst RandomSpan = memo(({cls}:{cls?:string})=>{\r\n    const background = `#${Math.random().toString(16).slice(2,8)}`\r\n    return(\r\n        <span className={cls} style={{background}}></span>\r\n    )\r\n})\r\nexport default RandomSpan","import { CSSProperties, memo, MouseEvent, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport H3 from \"../../Components/PureComponents/H3\";\r\nimport RandomSpan from \"../../Components/PureComponents/RandomSpan\";\r\nimport { NoteInterface } from \"../../types\";\r\nimport {  useEditNoteCtx } from \"./Note.page\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport useNoteOperations from \"./CustomHooks/useNoteOperations\";\r\n\r\n\r\nconst Note = memo(({note, styles}:{note:NoteInterface, styles?:CSSProperties | any})=>{\r\n    const {setEditNote, note:edit_note,  setMenuDetails} = useEditNoteCtx()\r\n    const {loader, handleDeleteNote} = useNoteOperations()\r\n    const [opacity, setOpacity] = useState(1)      //opacity for each note. when edit-modal is opened then set it to 0\r\n\r\n    const handleClick = useCallback(() => {\r\n        setEditNote(note)\r\n        setOpacity(0)\r\n    }, [setEditNote, note])\r\n    // when the edit_modal closed then show the note again\r\n    useEffect(()=>{\r\n        !edit_note._id && setOpacity(1)\r\n    }, [edit_note])\r\n\r\n\r\n\r\n    return(\r\n        <StyledNote id={note._id}\r\n            style={{...styles, opacity, animation:!opacity && '' }}\r\n            className=\"note\"\r\n        >\r\n            <Wrapper>\r\n                <RandomSpan cls='random_span'/>\r\n                <H3 text={note.title} styles={{width:'100%'}} handleClick={handleClick}/>\r\n            </Wrapper>\r\n\r\n            <Wrapper styles={{overflow:'hidden',height:'60%'}}>\r\n                <p onClick={handleClick}>{note.content}</p>\r\n            </Wrapper>\r\n\r\n            <OverlayMenu>\r\n                <ActionLink handleClick={(e:MouseEvent<HTMLDivElement | MouseEvent>)=>{setMenuDetails && setMenuDetails(e, note)}}><Clr/></ActionLink>\r\n                <Button  mode='delete_note_btn' handleClick={()=>handleDeleteNote(note._id)} loader={loader}/>\r\n            </OverlayMenu>\r\n        </StyledNote>\r\n    )\r\n})\r\nexport default Note\r\n\r\n\r\n\r\nconst StyledNote = styled.div`\r\n    width:100%;\r\n    max-width:40rem;\r\n    height:20rem;\r\n    border-radius:1rem;\r\n    box-shadow:0 0.3rem 0.5rem rgba(0,0,0,0.1);\r\n    position:relative;\r\n    border:var(--note-border);\r\n    animation:animate_note calc(0.4s  * var(--note-order)) ease-in;\r\n\r\n\r\n    /* title and content */\r\n    h3,p{\r\n        font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n        padding:0.5rem;\r\n    }\r\n    h3{\r\n        border-bottom:var(--border);\r\n        font-weight:400;\r\n        text-align:center;\r\n        width:100%;\r\n    }\r\n    p{\r\n        opacity:0.8;\r\n        white-space:pre-line;\r\n        word-break:break-all;\r\n        text-overflow:ellipsis;\r\n        height:100%;\r\n        width:100%;\r\n    }\r\n\r\n    /* random span at the left top of the note */\r\n    span.random_span{\r\n        position:absolute;\r\n        top:0;left:0;\r\n        width:5rem;\r\n        height:5rem;\r\n        border-radius:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n\r\n    @media (max-width:700px){\r\n        .overlay-menu{\r\n            display:none;\r\n        }\r\n    }\r\n    @media (min-width:700px){\r\n        div.overlay-menu {\r\n            height:4rem;\r\n            width:100%;\r\n            display:flex;\r\n            opacity:0;\r\n            pointer-events:none;\r\n        }\r\n        &:hover{\r\n            div.overlay-menu{\r\n                opacity:1;\r\n                pointer-events:all;\r\n            }\r\n        }\r\n    }\r\n\r\n    @keyframes animate_note{\r\n        0%{\r\n            transform: scale(0.8);\r\n            animation-timing-function: ease;\r\n            /* background:var(--secondary-clr); */\r\n        }50%{\r\n            animation-timing-function: ease-in;\r\n            opacity: 1;\r\n            transform: scale(1.1);\r\n        }100%{\r\n            /* animation-timing-function: ease-out;\r\n            opacity: 1;\r\n            transform: scale(1); */\r\n        }\r\n}\r\n`","import { useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\n\r\nconst useNoteFetch = () =>{\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            try {\r\n                const data = await (await import('../../../modules/fetchNotes')).default('/api/v1/user/notes')\r\n                if(data?.notes) setUser(old=>({...old, notes:data.notes}))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoader(false)\r\n        })()\r\n    },[setUser])\r\n    return {loader}\r\n}\r\nexport default useNoteFetch","import { memo } from 'react'\r\nimport Input from '../../Components/HigherComponents/Input'\r\nimport SectionHeader from '../../Components/HigherComponents/Section.header'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\nimport Caption from '../../Components/PureComponents/Caption'\r\nimport H3 from '../../Components/PureComponents/H3'\r\nimport { useThemeStates, useUserCtx } from '../../Context/UserContext'\r\nimport { NoteInterface } from '../../types'\r\nimport Dummy from './Dummy'\r\nimport Note from './Note'\r\nimport useNoteFetch from \"./CustomHooks/useNoteFetch\";\r\nimport Loader from '../../Components/PureComponents/Loader'\r\n\r\n\r\n\r\nconst NoteOutput = memo(()=>{\r\n    const {loader} = useNoteFetch()     //fetching the notes of logged user\r\n    const {user, search} = useUserCtx()\r\n    const {dark_theme} = useThemeStates()\r\n    const search_key = search?.trim().toLowerCase()\r\n    const matched = (note : NoteInterface) => note.title.trim().toLowerCase().includes(search_key)  || note.content.trim().toLowerCase().includes(search_key)\r\n\r\n\r\n    return(\r\n        <Wrapper mode='notes_container_wrapper'>\r\n            {/* for searching notes */}\r\n            {\r\n                user.notes?.length !== 0  ? (<SectionHeader>\r\n                                                <H3 text='Your notes'/>\r\n                                                <Input type='search' name='search' placeholder='search your notes...'/>\r\n                                            </SectionHeader>)\r\n                                        :\r\n                                        <Dummy>\r\n                                            <H3 text=\"Haven't created any notes?\" />\r\n                                            <Caption text=\"Then let's get started. \"/>\r\n                                        </Dummy>\r\n                }\r\n\r\n            {/* displaying the notes in container */}\r\n           {user.notes?.length !== 0 && <Wrapper mode='notes_container' styles={{minHeight:'calc(100vh - 2 * var(--header-height))'}}>\r\n                {\r\n                    loader ?\r\n                        <Loader size='big' />\r\n                        :\r\n                        user.notes?.map((note, index)=><Note key={note._id} note={note}  styles={{'--note-order':index+1, background:dark_theme ? note.bg[1] : note.bg[0], display:matched(note) ? 'block' : 'none'}}/>) }\r\n            </Wrapper>}\r\n        </Wrapper>\r\n    )\r\n})\r\nexport default NoteOutput","import { useEffect, useRef } from \"react\"\r\n\r\nconst useClickListener = ({eventType, handler, element = window}:{eventType:any, handler:any, element?:any}) =>{\r\n    const handleRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n    // adding event to the Overlay for closing the opened nav\r\n    // useEffect(()=>{\r\n    //     const overlay = document.querySelector('.overlay') as HTMLDivElement\r\n    //     overlay.classList.toggle('show_overlay', show_nav && show)\r\n    //     if(show_nav && show){\r\n    //         overlay.addEventListener('click',enableResNav)\r\n    //     }\r\n    //     return () =>overlay.removeEventListener('click', enableResNav)\r\n    // }, [show_nav, show])\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n            if(e.target.classList.contains('edit_modal_wrapper') && document.body.classList.contains('edit_mode')){\r\n                handleRef.current()\r\n            }\r\n        }\r\n       element?.addEventListener(eventType, eventListener, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n        }\r\n    }, [eventType])\r\n}\r\nexport default useClickListener","import { useEffect, useRef } from \"react\"\r\n\r\n\r\nconst useEventListener = ({eventType, handler, element}:{eventType:any, handler:any, element?:any}) =>{\r\n    const hanlderRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        hanlderRef.current = handler\r\n    },[handler])\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => e.key === 'Escape' && hanlderRef.current()\r\n        element?.addEventListener(eventType, eventListener)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener)\r\n        }\r\n    }, [eventType, element])\r\n}\r\nexport default useEventListener","import { MouseEvent, useCallback, useEffect, useState, useRef, KeyboardEvent } from 'react'\r\nimport { NoteInterface } from '../../../types'\r\n\r\nconst useEnableMenu = ({element, element2=window, handler, eventType, eventType2 = 'keyup'}:{element:any, element2?:any, handler:any, eventType:string, eventType2?:string}) =>{\r\n\r\n    const [menu, setMenu] = useState<{enable:boolean, item:NoteInterface, position:{top:string, left:string}}>({enable:false, item:{\r\n        title:'',content:'',bg:[],_id:''\r\n    }, position:{\r\n        top : '',\r\n        left: ''\r\n    }})\r\n\r\n\r\n    const setMenuDetails = useCallback((e:MouseEvent<HTMLDivElement, MouseEvent>, item:NoteInterface)=>{\r\n        const {top, left} = e.currentTarget.getBoundingClientRect()\r\n        setMenu(v=>({enable:true, position:{top:top+20+'px', left:left+20+'px'}, item}))\r\n        element.classList.add('show_overlay')\r\n    },[])\r\n\r\n    const handleRef = useRef(handler)\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n                if(e.target.classList.contains('overlay')){\r\n                    handleRef.current()\r\n                    element.classList.remove('show_overlay')\r\n                }\r\n        }\r\n        const eventListener2 = (e:KeyboardEvent) => {\r\n                if(e.key === 'Escape'){\r\n                    handleRef.current()\r\n                    element.classList.remove('show_overlay')\r\n                }\r\n        }\r\n        // menu.enable && addEventListener()  old code\r\n        element?.addEventListener(eventType, eventListener, false)\r\n        element2?.addEventListener(eventType2, eventListener2, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n            element2?.removeEventListener(eventType2, eventListener2, false)\r\n        }\r\n    }, [eventType])\r\n\r\n    return {setMenu, menu, setMenuDetails}\r\n}\r\nexport default useEnableMenu","const ColorsArr:any = [\r\n   {white:['#fff', '#000']},\r\n   {green:['hsl(146, 85%, 75%)','hsl(146, 85%, 15%)']},\r\n   {yellow:['hsl(58, 85%, 75%)','hsl(58, 85%, 15%)']},\r\n   {purple:['hsl(276, 85%, 75%)','hsl(276, 85%, 15%)']},\r\n   {red:['hsl(348, 85%, 75%)','hsl(348, 85%, 15%)']}\r\n]\r\n\r\nexport default ColorsArr","import { CSSProperties, memo, useCallback } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ColorsArr from \"../../utils/ColorArr\"\r\nimport { useThemeStates, useUserCtx } from \"../../Context/UserContext\"\r\nimport updateNote from \"../../modules/updateNote\"\r\nimport fetchNotes from \"../../modules/fetchNotes\"\r\nimport { useEditNoteCtx } from \"../../Pages/Note/Note.page\"\r\n\r\n\r\nconst ColorList = memo(({ styles }:{ styles?:CSSProperties})=>{\r\n   const {setUser} = useUserCtx()\r\n   const {menu, setEditNote, setMenu} = useEditNoteCtx()\r\n\r\n   const handleClick = useCallback(async(e, color:string, clr) =>{\r\n      e.stopPropagation()\r\n      if(!menu?.item) return         //if note edit mode enabled then return\r\n      if(menu.item.bg.includes(color)) return      //if user sets the color which is already setted then return\r\n\r\n      updateNote(`/api/v1/user/notes/${menu?.item._id}`, {...menu.item, bg:clr[Object.keys(clr)[0]]})\r\n      const data = await fetchNotes('/api/v1/user/notes')\r\n      if(!data?.notes) return\r\n\r\n      setUser(v=>({...v, notes:data.notes}))    //setting the updated notes from the server to the client\r\n      setEditNote((v) => ({...v, bg:clr[Object.keys(clr)[0]]}))     //setting the updated color to the edit modal as well on live\r\n      setMenu && setMenu(v=>({...v, item:{...v.item, bg:clr[Object.keys(clr)[0]]}}))       //also updating the menu state\r\n\r\n   }, [menu, setUser, setEditNote, setMenu])\r\n\r\n\r\n   return(\r\n      <StyledColorList className=\"clr-list\" style={styles}>\r\n         { ColorsArr.map((clr:any, index:any)=><ColorBox key={index}  clr={clr} handleClick={handleClick}/>) }\r\n      </StyledColorList>\r\n   )\r\n})\r\nexport default ColorList\r\n\r\n\r\nconst ColorBox = memo(({clr, handleClick}:{clr:any, handleClick: (e: any, color:string, clr:any) => Promise<void>})=>{\r\n   // const clr_name = Object.keys(clr)\r\n   const {dark_theme} = useThemeStates()\r\n   const color = clr[Object.keys(clr)[0]][dark_theme ? 1 : 0]\r\n   const handleColorSubmit = useCallback((e:any) => handleClick(e, color, clr), [clr, color, handleClick])\r\n\r\n\r\n   return <div style={{background:color,width:'3rem',height:'3rem',borderRadius:'50%'}}  onClick={handleColorSubmit}></div>\r\n})\r\n\r\n\r\n\r\nconst StyledColorList = styled.div`\r\n   display:flex;\r\n   position:fixed;\r\n   flex-direction:row;\r\n   align-items:center;\r\n   justify-content:space-between;\r\n   gap:1rem;\r\n   z-index:3;\r\n   >div{\r\n      cursor:pointer;\r\n   }\r\n`","import { ChangeEvent, createContext, memo, useCallback, useContext, useState } from \"react\";\r\nimport LeftRightWrapper from \"../../Components/HigherComponents/LeftRightWrapper\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport { EditNoteType, NoteInterface } from \"../../types\";\r\nimport useFetchUser from \"../Home/hooks/useFetchUser\";\r\nimport useEnableEditModal from \"../Login/useEnableEditModal\";\r\nimport NoteInput from \"./Note.input.section\";\r\nimport NoteModal from \"./Note.modal\";\r\nimport NoteOutput from \"./Note.output.section\";\r\nimport useClickListener from \"./useClickListener\";\r\nimport useEventListener from \"./useEvent\";\r\nimport useHandleChange from \"./CustomHooks/useHandleChange\";\r\nimport useNoteOperations from \"./CustomHooks/useNoteOperations\";\r\nimport useEnableMenu from \"./CustomHooks/useEnableMenu\";\r\nimport ColorList from \"../../Components/HigherComponents/ColorList\";\r\n\r\nconst EditNoteCtx = createContext({} as EditNoteType)\r\nexport const useEditNoteCtx = () => useContext(EditNoteCtx)\r\n\r\n\r\nconst NotePage = memo(()=>{\r\n    useFetchUser({auth:true})    //first checking if the user is loggedin or not\r\n    const [edit_note, setEditNote] = useState<NoteInterface>({_id:'', title:'', content:'', bg:[]})\r\n    useEnableEditModal({_id:edit_note._id})        //this is for enabling note modal for editing the note\r\n\r\n\r\n    //custom hooks for saving notes with escape key\r\n    const {handleUpdateNote} = useNoteOperations()\r\n    useEventListener({eventType:'keyup', handler:()=>handleUpdateNote(edit_note, setEditNote), element:window})\r\n    // saving the note when user clicks outside of the edit modal or on body(edit_modal_wrapper)\r\n    useClickListener({eventType:'click', handler:()=>handleUpdateNote(edit_note, setEditNote), element:document.body})\r\n\r\n\r\n    const {handleChange} = useHandleChange()\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setEditNote)\r\n    }, [handleChange])\r\n\r\n\r\n    const {menu, setMenuDetails, setMenu} = useEnableMenu({element: document.querySelector('.overlay') as HTMLDivElement, handler:()=>setMenu(v=>({...v,enable:false})), eventType:'click'})\r\n\r\n\r\n    return(\r\n        <LeftRightWrapper styles={{height:'calc(100% - 5rem)', minHeight:'unset'}}>\r\n            <Wrapper  mode='create_note_container'>\r\n                <NoteInput />\r\n            </Wrapper>\r\n\r\n            <EditNoteCtx.Provider value={{note:edit_note, setEditNote, handleNoteChange, menu, setMenuDetails, setMenu}}>\r\n                <NoteOutput />\r\n                <NoteModal mode=\"edit_note\" >\r\n                    { menu.enable && <ColorList styles={menu.position} /> }\r\n                </NoteModal>\r\n                { menu.enable && <ColorList styles={menu.position} /> }\r\n            </EditNoteCtx.Provider>\r\n        </LeftRightWrapper>\r\n    )\r\n})\r\nexport default NotePage","import { NoteInterface } from \"../types\"\r\n\r\nconst fetchNotes = async(url:string) =>{\r\n    try {\r\n        const res = await fetch(url)\r\n        const data:{notes?:NoteInterface[]} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default fetchNotes","const updateNote = async (url:string, note:{\r\n    title:string,\r\n    content:string,\r\n    _id:string,\r\n    bg:string[]\r\n}) =>{\r\n    try {\r\n        const res = await fetch(url,{\r\n            method:'PATCH',\r\n            body:JSON.stringify(note),\r\n            headers:{'Content-Type':'application/json'}\r\n        })\r\n        const data:{success:boolean} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default updateNote"],"names":["LeftRightWrapper","memo","children","styles","before_obj","StyledLeftRightWrapper","style","styled","Wrapper","page","mode","StyledEditModalWrapper","className","StyledNoteOutWrapper","StyledWrapper","props","css","Caption","text","StyledCaption","error","Styled","Form","no_bg","handleSubmit","animate","StyledForm","onSubmit","e","preventDefault","H3","handleClick","StyledH3","onClick","auth","setUser","useUserCtx","history","useHistory","useEffect","default","res","_id","v","email","push","handleChange","handler","old","target","name","value","ref_id","useRef","current","enableEditModal","useCallback","modal","document","getElementById","p","parentElement","getBoundingClientRect","top","left","width","height","display","setTimeout","body","classList","add","placeholder","type","setSearch","StyledInput","onChange","hover_bg","StyledTextArea","useState","loader","setLoader","err","setError","refetch","setRefetch","fetchNotes","then","notes","handleDeleteNote","setEditNote","deleteNote","data","success","remove","title","content","bg","handleUpdateNote","note","updateNotes","handleNoteSubmit","setNote","createNote","useDeleteNote","useHandleChange","handleNoteChange","Button","Error","StyledMenu","tooltip_text","StyledLink","dark_theme","useThemeStates","xmlns","viewBox","fill","d","cx","cy","r","useEditNoteCtx","edit_note","useContext","ThemeCtx","setMenuDetails","StyledEditModal","id","background","StyledSectionHeader","alignItems","justifyContent","flexDirection","cls","Math","random","toString","slice","useNoteOperations","opacity","setOpacity","StyledNote","animation","overflow","console","log","useNoteFetch","user","search","search_key","trim","toLowerCase","matched","includes","length","minHeight","Loader","size","map","index","eventType","element","window","handleRef","eventListener","contains","addEventListener","removeEventListener","hanlderRef","key","element2","eventType2","enable","item","position","menu","setMenu","currentTarget","eventListener2","white","green","yellow","purple","red","ColorList","color","clr","stopPropagation","updateNote","Object","keys","StyledColorList","ColorsArr","ColorBox","handleColorSubmit","borderRadius","EditNoteCtx","createContext","useFetchUser","useEnableEditModal","useEventListener","useClickListener","useEnableMenu","querySelector","Provider","url","fetch","json","method","JSON","stringify","headers"],"sourceRoot":""}