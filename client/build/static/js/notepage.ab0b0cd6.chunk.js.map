{"version":3,"file":"static/js/notepage.ab0b0cd6.chunk.js","mappings":"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","sources":["Components/HigherComponents/LeftRightWrapper.tsx","Components/HigherComponents/OverlayMenu.tsx","Components/HigherComponents/Wrapper.tsx","Components/PureComponents/ActionLink.tsx","Components/PureComponents/Caption.tsx","Components/PureComponents/Error.tsx","Components/PureComponents/Form.tsx","Components/PureComponents/H3.tsx","Components/Svg/Clr.tsx","Hooks/useFetchUser.tsx","Hooks/useEnableEditModal.tsx","Components/HigherComponents/Input.tsx","Components/PureComponents/Textarea.tsx","Pages/Note/Note.input.section.tsx","Pages/Note/Note.modal.tsx","Components/HigherComponents/Section.header.tsx","Pages/Note/Dummy.tsx","Pages/Note/NotesHooks/useNoteClickEvents.tsx","Pages/Note/Note.output.section.tsx","Pages/Note/useClickListener.tsx","Pages/Note/useEvent.tsx","Pages/Note/NotesHooks/useEnableNoteMenu.tsx","utils/ColorArr.tsx","Components/HigherComponents/ColorList.tsx","Pages/Note/Note.page.tsx","Components/PureComponents/RandomSpan.tsx","Pages/Note/Note.tsx","Pages/Note/NotesHooks/useNoteFetch.tsx","Pages/Note/NotesHooks/useNoteOperations.tsx","modules/fetchNotes.ts","modules/updateNote.ts"],"sourcesContent":["import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\nconst LeftRightWrapper = memo(({children, styles, before_obj}:{children:ReactNode, styles?:CSSProperties, before_obj?:boolean})=>{\r\n    return(\r\n        <StyledLeftRightWrapper style={styles} before_obj={before_obj}>\r\n            {children}\r\n        </StyledLeftRightWrapper>\r\n    )\r\n})\r\nexport default LeftRightWrapper\r\n\r\nconst StyledLeftRightWrapper = styled.section<{before_obj?:boolean}>`\r\n    display:flex;\r\n    flex-direction:column;\r\n    flex-wrap:wrap;\r\n\r\n    @media (min-width:700px){\r\n        flex-direction:unset;\r\n    }\r\n`","import { ReactNode } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst OverlayMenu = ({children, cls}:{children:ReactNode, cls?:string})=> {\r\n    return(\r\n        <StyledMenu className={\"overlay-menu \"+cls}>\r\n            {children}\r\n        </StyledMenu>\r\n    )\r\n}\r\nexport default OverlayMenu\r\n\r\n\r\n\r\nconst StyledMenu = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    flex-direction:row;\r\n`","import { memo, ReactNode, CSSProperties } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\ntype ModeTypes =\r\n    | 'edit_note' | 'note_output' | 'hero'\r\n    | 'create_note_container' | 'notes_container_wrapper' | 'notes_container'\r\n\r\n\r\ntype WrapperProps = {\r\n    children:ReactNode,\r\n    styles?:CSSProperties,\r\n    mode?: ModeTypes,\r\n    cls?:string\r\n}\r\n\r\n\r\nconst Wrapper = memo(({children, styles, mode, cls} : WrapperProps)=>{\r\n    return (\r\n        <StyledWrapper mode={mode} style={styles} className={(mode ? mode : '')+\" \"+(cls ? cls : '')}>\r\n            {children}\r\n        </StyledWrapper>\r\n    )\r\n})\r\nexport default Wrapper\r\n\r\n\r\n\r\nconst StyledWrapper = styled.section<{mode?:ModeTypes}>`\r\n    display:flex;\r\n    overflow:hidden;\r\n    position:relative;\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case 'hero': return css`\r\n                width:100%;\r\n                align-items:center;\r\n                justify-content:center;\r\n                transform-origin:center;\r\n                flex-direction:column;\r\n                text-align:center;\r\n                padding:2rem;\r\n                /* animation the every children in hero section */\r\n                @keyframes animateLoad {\r\n                    0%{\r\n                        transform: rotate(15deg) translateY(300%) scale(0.9);\r\n                        opacity: 0;\r\n                    }\r\n                    70%{\r\n                        transform: rotate(0) translateY(-50%) scale(1.1);\r\n                    }\r\n                    100%{ }\r\n                }\r\n                @media (min-width:700px){\r\n                    width:50%;\r\n                }\r\n            `\r\n\r\n            case \"create_note_container\": return css`\r\n                padding:2rem;\r\n                justify-content:center;\r\n                margin-bottom:3rem;\r\n                button{\r\n                    width:100%;\r\n                }\r\n\r\n                @media (min-width:700px){\r\n                    margin-bottom:0rem;\r\n                        border-right:var(--border);\r\n                        height:100%;\r\n                        position:fixed;\r\n                        width:var(--width);\r\n                    }\r\n            `\r\n\r\n            case 'notes_container_wrapper': return css`\r\n                flex-direction:column;\r\n                @media (min-width:700px){\r\n                    position:relative;\r\n                    left:var(--width);\r\n                    width:calc(100% - var(--width));\r\n                }\r\n            `\r\n\r\n            case 'notes_container': return css`\r\n                justify-content:center;\r\n                gap:3rem;\r\n                padding:2rem;\r\n                flex-wrap:wrap;\r\n                @media (min-width:700px){\r\n                    justify-content:space-around;\r\n                }\r\n            `\r\n            case 'edit_note': return css`\r\n                width:100%;\r\n                height:100%;\r\n                top:0 !important;\r\n                inset:0;\r\n                position:fixed;\r\n                align-items:center;\r\n                justify-content:center;\r\n                background:var(--edit-modal-bg);\r\n                display:none;\r\n                border-radius:0.5rem;\r\n            `\r\n            default: return css`\r\n            `\r\n        }\r\n    }}\r\n\r\n    img{\r\n        display:flex;\r\n        width:clamp(23rem, 28rem, 28vw);\r\n        height:clamp(28rem, 32rem, 32vw);\r\n        transform:rotate(-20deg) scale(0.8);\r\n        transform-origin:center;\r\n    }\r\n`","import styled from \"styled-components\"\r\n\r\n\r\nconst ActionLink = ({children, handleClick}:{children:JSX.Element | JSX.Element[], handleClick?:any}) =>{\r\n    return(\r\n        <StyledLink onClick={handleClick}>\r\n            {children}\r\n        </StyledLink>\r\n    )\r\n}\r\nexport default ActionLink\r\n\r\n\r\nconst StyledLink = styled.div<{tooltip_text?:string}>`\r\n    position:relative;\r\n    overflow:none;\r\n    cursor: pointer;\r\n\r\n    >p{\r\n        position:absolute;\r\n        top:100%;\r\n        pointer-events:none;\r\n        opacity:0;\r\n        pointer-events:none;\r\n        font-size:clamp(1.3rem, 1.4rem, 1.4vw);\r\n    }\r\n\r\n    &:hover{\r\n        >p{        //displaying tooltip text on hover\r\n            animation:show 3s ease both;\r\n        }\r\n    }\r\n    .clr-list{\r\n        opacity:0;\r\n        pointer-events:none;\r\n    }\r\n\r\n    &:focus-within, &:focus{\r\n        .clr-list{\r\n            opacity:1;\r\n            pointer-events:all;\r\n        }\r\n    }\r\n\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst Caption = memo(({text, styles}:{text?:string, styles?:CSSProperties | any})=>{\r\n    return(\r\n        <StyledCaption style={styles}>{text}</StyledCaption>\r\n    )\r\n})\r\nexport default Caption\r\n\r\nconst StyledCaption = styled.p`\r\n    font-size:clamp(1.8rem, 2rem ,2vw);\r\n    opacity:0.9;\r\n    white-space:pre-line;\r\n    word-break:break-all;\r\n    margin-top:1rem;\r\n    /* width:max-content; */\r\n`","import styled from \"styled-components\"\r\n\r\nconst ErrorDisplayer = (({error}:{error:string})=>{\r\n    return(\r\n        <Styled>{error}</Styled>\r\n    )\r\n})\r\nexport default ErrorDisplayer\r\n\r\nconst Styled = styled.p`\r\n    color:red;\r\n    font-size:clamp(1.5rem,1.6rem,1.6vw);\r\n`","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo(({children, no_bg, mode, handleSubmit, styles, animate}:{\r\n    children:ReactNode, no_bg?:boolean, mode?:string, handleSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?:boolean\r\n})=>{\r\n\r\n    return(\r\n        <StyledForm onSubmit={(e)=>{\r\n                e.preventDefault()\r\n                handleSubmit && handleSubmit(e)\r\n            }}\r\n            style={styles}\r\n            no_bg={no_bg}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default Form\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?:boolean, mode?:string, animate?:boolean}>`\r\n    height:45rem;\r\n    width:90%;\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    max-width:35rem;\r\n    background:var(--form-bg);\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                margin: auto;\r\n                max-width:40rem;\r\n                margin-top:5rem;\r\n                border-radius:0.5rem;\r\n                box-shadow:0 0.3rem 0.3rem rgba(0,0,0,0.3);\r\n                padding:0 2rem 2rem 2rem;\r\n                //heading of the form\r\n                >h3{\r\n                    padding:1rem 0 2rem 0;\r\n                }\r\n                //containers of input and label\r\n                .div{\r\n                    padding:0 2rem;\r\n                    margin-top:2rem;\r\n                    width:100%;\r\n                    display:flex;\r\n                    justify-content:space-between;\r\n                    align-items:center;\r\n                }\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top:auto   //button will be at the bottom of the form\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            opacity:0;\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H3 = memo(({text, styles, handleClick, cls}:{text:string, styles?:CSSProperties, handleClick?:() =>void, cls?:string})=>{\r\n    return(\r\n        <StyledH3 style={styles} onClick={handleClick} className={cls}>{text}</StyledH3>\r\n    )\r\n})\r\nexport default H3\r\n\r\nconst StyledH3 = styled.h3<{styles?:CSSProperties}>`\r\n    font-size:2.2rem;\r\n    font-weight:500;\r\n`","import { useThemeStates } from \"../../Context/UserContext\"\r\n\r\nconst Clr = () =>{\r\n    const {dark_theme} = useThemeStates()\r\n\r\n    return (\r\n        <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill={dark_theme ? 'hsl(0, 0%, 80%)' : 'hsl(0, 0%, 10%)'}>\r\n                <path d=\"M12 22C6.49 22 2 17.51 2 12S6.49 2 12 2s10 4.04 10 9c0 3.31-2.69 6-6 6h-1.77c-.28 0-.5.22-.5.5 0 .12.05.23.13.33.41.47.64 1.06.64 1.67A2.5 2.5 0 0 1 12 22zm0-18c-4.41 0-8 3.59-8 8s3.59 8 8 8c.28 0 .5-.22.5-.5a.54.54 0 0 0-.14-.35c-.41-.46-.63-1.05-.63-1.65a2.5 2.5 0 0 1 2.5-2.5H16c2.21 0 4-1.79 4-4 0-3.86-3.59-7-8-7z\"/>\r\n                <circle cx=\"6.5\" cy=\"11.5\" r=\"1.5\"/>\r\n                <circle cx=\"9.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"14.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"17.5\" cy=\"11.5\" r=\"1.5\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\nexport default Clr","import { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useUserCtx } from \"../Context/UserContext\"\r\n\r\nconst useFetchUser = ({auth = false} : {auth?:boolean}) =>{\r\n    const {setUser} = useUserCtx()\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const res = await (await import(\"../modules/fetchUser\")).default()\r\n            if(auth && res?._id){\r\n                //for protecting the note page being accessed by logging in\r\n                setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            }else{\r\n                // for home page\r\n                res?._id && setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            }\r\n            auth && !res?._id && history.push('/login')\r\n        })()\r\n    },[setUser, history, auth])\r\n}\r\nexport default useFetchUser","import { useCallback, useEffect, useRef } from \"react\"\r\n\r\nconst useEnableEditModal = ({_id}:{_id:string}) => {\r\n    const ref_id = useRef(_id)\r\n    useEffect(()=>{\r\n        ref_id.current = _id\r\n    }, [_id])\r\n\r\n    const enableEditModal = useCallback((_id:string) =>{\r\n            const modal = document.getElementById('modal') as HTMLDivElement\r\n            const p = modal.parentElement as any\r\n            const element = document.getElementById(_id) as HTMLDivElement\r\n            const {top, left, width, height} = element.getBoundingClientRect()\r\n            modal.style.top = top+'px'\r\n            modal.style.left = left+'px'\r\n            modal.style.width = width+'px'\r\n            modal.style.height = height+'px'\r\n            p.style.display='flex'\r\n            modal.style.display='flex'\r\n            setTimeout(()=> document.body.classList.add('edit_mode'),10)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        //when the id changes then if it has value then enable editModal\r\n        _id && enableEditModal(ref_id.current)\r\n    },[_id, enableEditModal])\r\n\r\n    return {enableEditModal}\r\n}\r\nexport default useEnableEditModal","import { ChangeEvent, memo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport  { useUserCtx } from \"../../Context/UserContext\";\r\n\r\n\r\n\r\nconst Input = memo(({ placeholder, name, value, handleChange, mode, type}: InputProps)=>{\r\n    const {setSearch} = useUserCtx()\r\n\r\n    return <StyledInput\r\n        type={type === 'search' ? 'search' : 'text'} name={name} value={value}\r\n        mode={mode}\r\n        onChange={(e)=>{\r\n            if(name === 'search'){\r\n                setSearch(e.target.value)\r\n            }else{\r\n                handleChange && handleChange(e,)\r\n            }\r\n        }}\r\n        placeholder={placeholder}\r\n    />\r\n})\r\nexport default Input\r\n\r\n\r\ntype InputProps = {\r\n    type?:string\r\n    mode?:string\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name:string\r\n}\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?:string}>`\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0 1rem;\r\n    height:3.5rem;\r\n    background:var(--input-bg);\r\n    outline:none;\r\n\r\n    ${({mode})=>{\r\n        switch (mode){\r\n            case 'edit_note': return css`\r\n                background:inherit;\r\n                `\r\n            case 'note_title': return css`\r\n                width:100%;\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n                `\r\n            default : return css`\r\n            &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n    }}}\r\n    border-radius:0.3rem;\r\n    outline:var(--border);\r\n`\r\n\r\n","import { ChangeEvent, CSSProperties } from \"react\"\r\nimport styled, { css } from \"styled-components\"\r\n\r\nconst Textarea = ({value, handleChange, placeholder, name, styles, hover_bg}:TextareaProps)=>{\r\n    return(\r\n        <StyledTextArea\r\n            name={name}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            style={styles}\r\n            hover_bg={hover_bg}\r\n            onChange={(e)=>handleChange && handleChange(e)}\r\n        />\r\n    )\r\n}\r\nexport default Textarea\r\n\r\nconst StyledTextArea = styled.textarea<{hover_bg?:boolean}>`\r\n    width:100%;\r\n    height:15rem;\r\n    @media (min-width:700px){\r\n        flex:1;\r\n    }\r\n    margin-bottom:2rem;\r\n    resize:none;\r\n    margin-top:1rem;\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--input-bg);\r\n    outline:var(--border);\r\n    border-radius:0.3rem;\r\n    ${({hover_bg})=>{\r\n        if(hover_bg){\r\n            return css`\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n        }\r\n    }}\r\n\r\n`\r\n\r\n\r\n\r\ntype TextareaProps = {\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name?:string,\r\n    styles?:CSSProperties,\r\n    hover_bg?:boolean\r\n}","import { memo } from \"react\"\r\nimport Input from \"../../Components/HigherComponents/Input\"\r\nimport Button from \"../../Components/PureComponents/Button\"\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\"\r\nimport Form from \"../../Components/PureComponents/Form\"\r\nimport Textarea from \"../../Components/PureComponents/Textarea\"\r\nimport If from \"../../UtilComponents/If\"\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\"\r\n\r\n\r\n\r\nconst NoteInput = memo(()=>{\r\n    const {loader, error, handleNoteSubmit, handleNoteChange, note} = useNoteOperations()\r\n\r\n\r\n    return(\r\n        <Form no_bg={true} handleSubmit={handleNoteSubmit} mode='create_note'>\r\n            <Input  type='title' name='title' value={note.title} handleChange={handleNoteChange} placeholder='note title...' mode='note_title'/>\r\n\r\n            <Textarea  name='content' value={note.content} handleChange={handleNoteChange} placeholder=\"type your notes....\"  hover_bg={true}/>\r\n\r\n            {/* { error.err &&  <ErrorDisplayer error={error.err}/>} */}\r\n            <If condition={!!error.err}>\r\n                <ErrorDisplayer error={error.err}/>\r\n            </If>\r\n            <Button text='create note' mode='create_note_btn' loader={loader}/>\r\n        </Form>\r\n    )\r\n})\r\nexport default NoteInput\r\n","import {  memo, MouseEvent, ReactNode, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/HigherComponents/Input\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport Textarea from \"../../Components/PureComponents/Textarea\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport { ThemeCtx } from \"../../Context/UserContext\";\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\";\r\nimport { useEditNoteCtx } from \"./Note.page\";\r\n\r\ntype NoteModalProps = {\r\n    children?: ReactNode,\r\n    mode?: | 'edit_note'\r\n}\r\n\r\nconst NoteModal = memo(({ mode } : NoteModalProps)=>{\r\n    const {note:edit_note, handleNoteChange} = useEditNoteCtx()\r\n    const {dark_theme} = useContext(ThemeCtx)\r\n    const {loader, handleDeleteNote} = useNoteOperations()\r\n    const {setMenuDetails} = useEditNoteCtx()\r\n\r\n\r\n    if(mode === 'edit_note'){\r\n      return (\r\n        <Wrapper mode={mode} cls='edit_modal_wrapper'>\r\n\r\n            <StyledEditModal  id='modal' className='edit_modal' style={{background:dark_theme ? edit_note.bg[1] : edit_note.bg[0], border:'var(--border)'}} >\r\n\r\n                <Input  name='title' value={edit_note.title} handleChange={handleNoteChange} mode=\"edit_note\" />\r\n                <Textarea  name='content' value={edit_note.content} handleChange={handleNoteChange} styles={{background:'inherit'}}/>\r\n\r\n                <OverlayMenu>\r\n                    <ActionLink handleClick={(e:MouseEvent<HTMLDivElement>)=>{setMenuDetails!(e, edit_note)}}><Clr/></ActionLink>\r\n                    <Button  mode='delete_note_btn' handleClick={()=>handleDeleteNote({_id : edit_note._id})} loader={loader}/>\r\n                </OverlayMenu>\r\n            </StyledEditModal>\r\n\r\n        </Wrapper>\r\n      )\r\n    }\r\n    return(\r\n        <></>\r\n    )\r\n})\r\nexport default NoteModal\r\n\r\nconst StyledEditModal = styled.div`\r\n    height:40rem;\r\n    width:100%;\r\n    max-width:60%;\r\n    border-radius:0.5rem;\r\n    background:var(--modal-bg);\r\n    position:fixed;\r\n    overflow:hidden;\r\n    box-shadow:0 0.3rem 1rem rgba(0, 0, 0, 0.4);\r\n    flex-direction:column;\r\n    border:var(--border);\r\n    transition:all 0.2s linear;\r\n\r\n    input{\r\n        border-bottom:var(--border);\r\n    }\r\n\r\n    textarea{\r\n        flex:1;\r\n        border:none;\r\n        outline:none;\r\n    }\r\n\r\n    input,textarea{\r\n        margin-top:0;\r\n        &:focus{\r\n            background:inherit;\r\n        }\r\n    }\r\n    input{\r\n        text-align:center;\r\n    }\r\n\r\n    .btns{\r\n        margin-top:auto;\r\n        display:flex;\r\n        justify-content:space-between;\r\n        flex-direction:row;\r\n        padding:2rem;\r\n    }\r\n    .save_btn{\r\n        background:var(--save-btn-bg);\r\n    }\r\n    .delete_btn{\r\n        background:var(--delete-btn-bg);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionHeader = memo(({children})=>{\r\n    return(\r\n        <StyledSectionHeader>\r\n            {children}\r\n        </StyledSectionHeader>\r\n    )\r\n})\r\nexport default SectionHeader\r\n\r\nconst StyledSectionHeader = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    padding:1rem;\r\n    border-bottom:var(--border);\r\n`","import {ReactNode} from 'react'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\n\r\nconst Dummy = ({children}:{children:ReactNode}) =>{\r\n    return(\r\n       <Wrapper styles={{height:'90vh',display:'flex', alignItems:'center',justifyContent:'center', flexDirection:'column'}}>\r\n        { children }\r\n       </Wrapper>\r\n    )\r\n}\r\nexport default Dummy","import { useCallback, useEffect } from \"react\"\r\nimport { useUserCtx } from \"../../../Context/UserContext\"\r\n// import { NoteInterface } from \"../../../types\"\r\nimport { useEditNoteCtx } from \"../Note.page\"\r\n\r\nconst useNoteClickEvents = () => {\r\n    const {user} = useUserCtx()\r\n    const { setEditNote } = useEditNoteCtx()\r\n\r\n    // function for checking the if the clicked element is note-title or note-content\r\n    // if true then set the edit_note for edit.modal\r\n    const listenClickEnv = useCallback((e:any) =>{\r\n        const matched = e.target.classList.contains('note-title') || e.target.classList.contains('note-content')\r\n        if(matched){\r\n            const parentElement = e.target.parentElement.parentElement\r\n            parentElement.style.opacity = '0';       //making the note disappear again after opening the note.edit.modal\r\n            const id = parentElement.id   //getting the id of the note\r\n            const note = user.notes?.filter(each_note=> each_note._id === id)       //getting the exact note from user.note and setting it the edit.modal for editing\r\n            note && setEditNote(note[0])\r\n        }\r\n    }, [user.notes, setEditNote])\r\n\r\n\r\n    useEffect(()=>{\r\n        const timer = setTimeout(()=> document.body.addEventListener('click', listenClickEnv, false), 1000)\r\n        return () => {\r\n            clearTimeout(timer)\r\n            document.body.removeEventListener('click', listenClickEnv, false)\r\n        }\r\n    }, [user.notes, listenClickEnv])\r\n    return {listenClickEnv}\r\n}\r\nexport default useNoteClickEvents","import { memo } from 'react'\r\nimport Input from '../../Components/HigherComponents/Input'\r\nimport SectionHeader from '../../Components/HigherComponents/Section.header'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\nimport Caption from '../../Components/PureComponents/Caption'\r\nimport H3 from '../../Components/PureComponents/H3'\r\nimport { useThemeStates, useUserCtx } from '../../Context/UserContext'\r\nimport { NoteInterface } from '../../types'\r\nimport Dummy from './Dummy'\r\nimport Note from './Note'\r\nimport useNoteFetch from \"./NotesHooks/useNoteFetch\";\r\nimport Loader from '../../Components/PureComponents/Loader'\r\nimport { useCallback } from 'react'\r\nimport useNoteClickEvents from './NotesHooks/useNoteClickEvents'\r\nimport If from '../../UtilComponents/If'\r\n\r\n\r\n\r\nconst NoteOutput = memo(()=>{\r\n    const {loader} = useNoteFetch()     //fetching the notes of logged user\r\n    const {user, search} = useUserCtx()\r\n    const {dark_theme} = useThemeStates()\r\n    const search_key = search?.trim().toLowerCase()\r\n    const matched = useCallback((note : NoteInterface) => note.title.trim().toLowerCase().includes(search_key)  || note.content.trim().toLowerCase().includes(search_key),[search_key])\r\n\r\n\r\n    // using event delegation for clicking event for each note\r\n    // if we add events in every note then it will take more resource\r\n    // so add events to the parent element of the each note\r\n    useNoteClickEvents()\r\n\r\n\r\n    return(\r\n        <Wrapper mode='notes_container_wrapper'>\r\n            <If condition={user.notes?.length !== 0}>\r\n                <SectionHeader>\r\n                    <H3 text='Your notes'/>\r\n                    <Input type='search' name='search' placeholder='search your notes...'/>\r\n                </SectionHeader>\r\n            </If>\r\n            <If condition={ user.notes?.length === 0 }>\r\n                <Dummy>\r\n                    <H3 text=\"Haven't created any notes?\" />\r\n                    <Caption text=\"Then let's get started. \"/>\r\n                </Dummy>\r\n            </If>\r\n\r\n            {/* displaying the notes in container */}\r\n            <If condition={ user.notes?.length !== 0 }>\r\n                <Wrapper mode='notes_container' styles={{minHeight:'calc(100vh - 2 * var(--header-height))'}}>\r\n                    <If condition={loader}>\r\n                        <Loader size='big'/>\r\n                    </If>\r\n                    <If condition={!loader}>\r\n                    {\r\n                        user.notes?.map((note, i)=>{\r\n                            return <If condition={!note.delete} key={i}>\r\n                                <Note key={note._id} note={note}  styles={{'--note-order':i+1, background:dark_theme ? note.bg[1] : note.bg[0], display:matched(note) ? 'flex' : 'none'}}/>\r\n                            </If>\r\n                        })\r\n                    }\r\n                    </If>\r\n                </Wrapper>\r\n            </If>\r\n        </Wrapper>\r\n    )\r\n})\r\nexport default NoteOutput","import { useEffect, useRef } from \"react\"\r\n\r\nconst useClickListener = ({eventType, handler, element = window}: ClickHookProps) =>{\r\n    const handleRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n            if(e.target.classList.contains('edit_modal_wrapper') && document.body.classList.contains('edit_mode')){\r\n                handleRef.current()\r\n            }\r\n        }\r\n       element?.addEventListener(eventType, eventListener, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n        }\r\n    }, [eventType, element])\r\n}\r\nexport default useClickListener\r\n\r\ntype ClickHookProps = {\r\n    eventType:any, handler:any, element?:any\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\n//this is escape key event\r\nconst useEventListener = ({eventType, handler, element}: EventProps) =>{\r\n    const hanlderRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        hanlderRef.current = handler\r\n    },[handler])\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => e.key === 'Escape' && hanlderRef.current()\r\n        element?.addEventListener(eventType, eventListener)\r\n        return () => element?.removeEventListener(eventType, eventListener)\r\n    }, [eventType, element])\r\n}\r\nexport default useEventListener\r\n\r\ntype EventProps = {eventType:any, handler:any, element?:any}","import { MouseEvent, useCallback, useEffect, useState, useRef, KeyboardEvent } from 'react'\r\nimport { NoteInterface } from '../../../types'\r\n\r\n\r\nconst useEnableMenu = ({element, element2=window, handler, eventType, eventType2 = 'keyup'} : HookProps) =>{\r\n\r\n    const [menu, setMenu] = useState<MenuState>({\r\n        enable:false,\r\n        item:{ title:'',content:'',bg:[],_id:'' },\r\n        position:{ top : '', left: '' }\r\n    })\r\n\r\n\r\n    const setMenuDetails = useCallback((e:MouseEvent<HTMLDivElement, MouseEvent>, item:NoteInterface)=>{\r\n        const {top, left} = e.currentTarget.getBoundingClientRect()\r\n        setMenu(({enable:true, position:{top:top+20+'px', left:left+20+'px'}, item}))\r\n        element.classList.add('show_overlay')\r\n    },[element])\r\n\r\n    const handleRef = useRef(handler)\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n                if(e.target.classList.contains('overlay')){\r\n                    handleRef.current()\r\n                    element.classList.remove('show_overlay')\r\n                }\r\n        }\r\n        const eventListener2 = (e:KeyboardEvent) => {\r\n                if(e.key === 'Escape'){\r\n                    handleRef.current()\r\n                    element.classList.remove('show_overlay')\r\n                }\r\n        }\r\n        // menu.enable && addEventListener()  old code\r\n        menu.enable && element?.addEventListener(eventType, eventListener, false)\r\n        menu.enable && element2?.addEventListener(eventType2, eventListener2, false)\r\n        !menu.enable && element?.removeEventListener(eventType, eventListener, false)\r\n        !menu.enable && element2?.removeEventListener(eventType2, eventListener2, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n            element2?.removeEventListener(eventType2, eventListener2, false)\r\n        }\r\n    }, [eventType, menu.enable, element, element2, eventType2])\r\n\r\n    return {setMenu, menu, setMenuDetails}\r\n}\r\nexport default useEnableMenu\r\n\r\n\r\ntype HookProps = {\r\n    element:any, element2?:any, handler:any, eventType:string, eventType2?:string\r\n}\r\ntype MenuState = {\r\n    enable:boolean, item:NoteInterface, position:{top:string, left:string}\r\n}","const ColorsArr:any = [\r\n   {white:['#fff', '#000']},\r\n   {green:['hsl(146, 85%, 75%)','hsl(146, 85%, 15%)']},\r\n   {yellow:['hsl(58, 85%, 75%)','hsl(58, 85%, 15%)']},\r\n   {purple:['hsl(276, 85%, 75%)','hsl(276, 85%, 15%)']},\r\n   {red:['hsl(348, 85%, 75%)','hsl(348, 85%, 15%)']}\r\n]\r\n\r\nexport default ColorsArr","import { CSSProperties, memo, useCallback } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ColorsArr from \"../../utils/ColorArr\"\r\nimport { useThemeStates, useUserCtx } from \"../../Context/UserContext\"\r\nimport updateNote from \"../../modules/updateNote\"\r\nimport fetchNotes from \"../../modules/fetchNotes\"\r\nimport { useEditNoteCtx } from \"../../Pages/Note/Note.page\"\r\n\r\n\r\nconst ColorList = memo(({ styles }:{ styles?:CSSProperties})=>{\r\n   const {setUser} = useUserCtx()\r\n   const {menu, setEditNote, setMenu} = useEditNoteCtx()\r\n\r\n   const handleClick = useCallback(async(e, color:string, clr) =>{\r\n      e.stopPropagation()\r\n      if(!menu?.item) return         //if note edit mode enabled then return\r\n      if(menu.item.bg.includes(color)) return      //if user sets the color which is already setted then return\r\n\r\n      updateNote(`/api/v1/user/notes/${menu?.item._id}`, {...menu.item, bg:clr[Object.keys(clr)[0]]})\r\n      const data = await fetchNotes('/api/v1/user/notes')\r\n      if(!data?.notes) return\r\n\r\n      setUser(v=>({...v, notes:data.notes}))    //setting the updated notes from the server to the client\r\n      setEditNote((v) => ({...v, bg:clr[Object.keys(clr)[0]]}))     //setting the updated color to the edit modal as well on live\r\n      setMenu && setMenu(v=>({...v, item:{...v.item, bg:clr[Object.keys(clr)[0]]}}))       //also updating the menu state\r\n   }, [menu, setUser, setEditNote, setMenu])\r\n\r\n\r\n   return(\r\n      <StyledColorList className=\"clr-list\" style={styles}>\r\n         { ColorsArr.map((clr:any, index:any)=><ColorBox key={index}  clr={clr} handleClick={handleClick}/>) }\r\n      </StyledColorList>\r\n   )\r\n})\r\nexport default ColorList\r\n\r\n\r\nconst ColorBox = memo(({clr, handleClick}:{clr:any, handleClick: (e: any, color:string, clr:any) => Promise<void>})=>{\r\n   // const clr_name = Object.keys(clr)\r\n   const {dark_theme} = useThemeStates()\r\n   const color = clr[Object.keys(clr)[0]][dark_theme ? 1 : 0]\r\n   const handleColorSubmit = useCallback((e:any) => handleClick(e, color, clr), [clr, color, handleClick])\r\n\r\n\r\n   return <div style={{background:color,width:'3rem',height:'3rem',borderRadius:'50%'}}  onClick={handleColorSubmit}></div>\r\n})\r\n\r\n\r\n\r\nconst StyledColorList = styled.div`\r\n   display:flex;\r\n   position:fixed;\r\n   flex-direction:row;\r\n   align-items:center;\r\n   justify-content:space-between;\r\n   gap:1rem;\r\n   z-index:3;\r\n   >div{\r\n      cursor:pointer;\r\n   }\r\n`","import { ChangeEvent, createContext, memo, useCallback, useContext, useState } from \"react\"\r\nimport LeftRightWrapper from \"../../Components/HigherComponents/LeftRightWrapper\"\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\"\r\nimport { EditNoteType, NoteInterface } from \"../../types\"\r\nimport useFetchUser from \"../../Hooks/useFetchUser\"\r\nimport useEnableEditModal from \"../../Hooks/useEnableEditModal\"\r\nimport NoteInput from \"./Note.input.section\"\r\nimport NoteModal from \"./Note.modal\"\r\nimport NoteOutput from \"./Note.output.section\"\r\nimport useClickListener from \"./useClickListener\"\r\nimport useEventListener from \"./useEvent\"\r\nimport useHandleChange from \"../../Hooks/useHandleChange\"\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\"\r\nimport useEnableMenu from \"./NotesHooks/useEnableNoteMenu\"\r\nimport ColorList from \"../../Components/HigherComponents/ColorList\"\r\nimport If from \"../../UtilComponents/If\"\r\n\r\nconst EditNoteCtx = createContext({} as EditNoteType)\r\nexport const useEditNoteCtx = () => useContext(EditNoteCtx)\r\n\r\n\r\nconst NotePage = memo(()=>{\r\n    useFetchUser({auth:true})    //first checking if the user is loggedin or not\r\n    const [edit_note, setEditNote] = useState<NoteInterface>({_id:'', title:'', content:'', bg:[]})\r\n    useEnableEditModal({_id:edit_note._id})        //this is for enabling note modal for editing the note\r\n\r\n\r\n    //custom hooks for saving notes with escape key\r\n    const {handleUpdateNote} = useNoteOperations()\r\n    useEventListener({eventType:'keyup', handler:()=>handleUpdateNote(edit_note, setEditNote), element:window})\r\n    // saving the note when user clicks outside of the edit modal or on body(edit_modal_wrapper)\r\n    useClickListener({eventType:'click', handler:()=>handleUpdateNote(edit_note, setEditNote), element:document.body})\r\n\r\n\r\n    const {handleChange} = useHandleChange()\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setEditNote)\r\n    }, [handleChange])\r\n\r\n\r\n    const {menu, setMenuDetails, setMenu} = useEnableMenu({element: document.querySelector('.overlay') as HTMLDivElement, handler:()=>setMenu(v=>({...v,enable:false})), eventType:'click'})\r\n\r\n\r\n    return(\r\n        <LeftRightWrapper styles={{height:'calc(100% - 5rem)', minHeight:'unset'}}>\r\n            <Wrapper  mode='create_note_container'>\r\n                <NoteInput />\r\n            </Wrapper>\r\n\r\n            <EditNoteCtx.Provider value={{note:edit_note, setEditNote, handleNoteChange, menu, setMenuDetails, setMenu}}>\r\n                <NoteOutput />\r\n                <NoteModal mode=\"edit_note\">\r\n                    <If condition={menu.enable}>\r\n                        <ColorList styles={menu.position} />\r\n                    </If>\r\n                </NoteModal>\r\n                <If condition={menu.enable}>\r\n                    <ColorList styles={menu.position} />\r\n                </If>\r\n            </EditNoteCtx.Provider>\r\n        </LeftRightWrapper>\r\n    )\r\n})\r\nexport default NotePage","import {memo} from 'react'\r\n\r\n\r\nconst RandomSpan = memo(({cls}:{cls?:string})=>{\r\n    const background = `#${Math.random().toString(16).slice(2,8)}`\r\n    return(\r\n        <span className={cls} style={{background}}></span>\r\n    )\r\n})\r\nexport default RandomSpan","import { CSSProperties, memo, MouseEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport H3 from \"../../Components/PureComponents/H3\";\r\nimport RandomSpan from \"../../Components/PureComponents/RandomSpan\";\r\nimport { NoteInterface } from \"../../types\";\r\nimport {  useEditNoteCtx } from \"./Note.page\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\";\r\nimport If from \"../../UtilComponents/If\";\r\n\r\nexport type NoteProps = {\r\n    note:NoteInterface,\r\n    styles?: CSSProperties | any,\r\n    mode?: | 'note.page' | 'recycle.page'\r\n}\r\n\r\nconst Note = memo(({note, styles, mode = 'note.page'}:NoteProps)=>{\r\n    const {setMenuDetails} = useEditNoteCtx()\r\n    const {loader, handleDeleteNote} = useNoteOperations()\r\n\r\n\r\n    return(\r\n        <StyledNote id={note._id} style={{...styles }} className=\"note\">\r\n\r\n            <Wrapper styles={{padding:'0.5rem 1rem',borderBottom:'var(--border)'}} >\r\n                <RandomSpan cls='random_span'/>\r\n                <H3 text={note.title} styles={{width:'100%'}} cls='note-title'/>\r\n            </Wrapper>\r\n\r\n            <Wrapper styles={{overflow:'hidden',flex:'1', padding:'0.5rem 1rem'}}>\r\n                <p className='note-content'>{note.content}</p>\r\n            </Wrapper>\r\n\r\n            {/* if want to reuse then define note and recycle pages behaviour  */}\r\n            <OverlayMenu>\r\n                <If condition={mode === 'note.page'}>\r\n                    <ActionLink handleClick={(e:MouseEvent<HTMLDivElement>)=>{setMenuDetails!(e, note)}}>\r\n                        <Clr/>\r\n                    </ActionLink>\r\n                    <Button  mode='delete_note_btn' handleClick={()=>handleDeleteNote({_id:note._id})} loader={loader}/>\r\n                 </If>\r\n                 <If condition={mode === 'recycle.page'}>\r\n                    <Button  mode='restore_btn' handleClick={()=>handleDeleteNote({_id : note._id, MOVE_TO_BIN:false, RESTORE:true})} loader={loader} text={'restore'}/>\r\n                    <Button  mode='delete_note_btn' handleClick={()=>handleDeleteNote({_id:note._id, MOVE_TO_BIN:false, RESTORE:false})} loader={loader}/>\r\n                 </If>\r\n            </OverlayMenu>\r\n        </StyledNote>\r\n    )\r\n})\r\nexport default Note\r\n\r\n\r\n\r\nconst StyledNote = styled.div`\r\n    position:relative;\r\n    width:100%;\r\n    max-width:40rem;\r\n    height:20rem;\r\n\r\n    box-shadow:0 0.3rem 0.5rem rgba(0,0,0,0.1);\r\n\r\n    border-radius:1rem;\r\n    border:var(--note-border);\r\n\r\n    display:flex;\r\n    flex-direction:column;\r\n    animation:animate_note calc(0.4s  * var(--note-order)) ease-in;\r\n\r\n\r\n    /* title and content */\r\n    h3,p{\r\n        font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    }\r\n    h3{\r\n        text-align:center;\r\n    }\r\n    p{\r\n        opacity:0.8;\r\n        white-space:pre-line;\r\n        word-break:break-all;\r\n        width:100%;\r\n    }\r\n\r\n    /* random span at the left top of the note */\r\n    span.random_span{\r\n        position:absolute;\r\n        top:0;left:0;\r\n        width:5rem;\r\n        height:5rem;\r\n        border-radius:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n\r\n    @media (max-width:700px){\r\n        .overlay-menu{\r\n            display:none;\r\n        }\r\n    }\r\n\r\n    /* making the permanent delete and restore btn visible in bin page for every note */\r\n    .bin-menu{\r\n        display:flex;\r\n    }\r\n    @media (min-width:700px){\r\n        div.overlay-menu {\r\n            height:4rem;\r\n            width:100%;\r\n            display:flex;\r\n            opacity:0;\r\n            pointer-events:none;\r\n        }\r\n        &:hover{\r\n            div.overlay-menu{\r\n                opacity:1;\r\n                pointer-events:all;\r\n            }\r\n        }\r\n    }\r\n\r\n    @keyframes animate_note{\r\n        0%{\r\n            transform: scale(0.8);\r\n            animation-timing-function: ease;\r\n            /* background:var(--secondary-clr); */\r\n        }50%{\r\n            animation-timing-function: ease-in;\r\n            opacity: 1;\r\n            transform: scale(1.1);\r\n        }100%{\r\n            /* animation-timing-function: ease-out;\r\n            opacity: 1;\r\n            transform: scale(1); */\r\n        }\r\n}\r\n`","import { useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\n\r\nconst useNoteFetch = () =>{\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            try {\r\n                const data = await (await import('../../../modules/fetchNotes')).default('/api/v1/user/notes')\r\n                if(data?.notes) setUser(old=>({...old, notes:data.notes}))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoader(false)\r\n        })()\r\n    },[setUser])\r\n    return {loader}\r\n}\r\nexport default useNoteFetch","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\nimport fetchNotes from '../../../modules/fetchNotes'\r\nimport { NoteInterface } from '../../../types'\r\nimport useHandleChange from '../../../Hooks/useHandleChange'\r\n\r\n\r\nconst useNoteOperations = () => {\r\n    const [note, setNote] = useState({title:'', content:''})\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(false)\r\n    const [error, setError] = useState({err:''})\r\n    const [refetch, setRefetch] = useState(false)\r\n\r\n    const {handleChange} = useHandleChange()\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setNote)\r\n    }, [handleChange])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(refetch){\r\n            fetchNotes('/api/v1/user/notes').then(res=>{\r\n                res?.notes && setUser(old=>({...old, notes:res.notes}))\r\n            })\r\n            setRefetch(false)\r\n        }\r\n    }, [refetch, setUser])\r\n\r\n    useEffect(()=>{\r\n        let clear:any\r\n        error.err && (clear =  setTimeout(()=>setError({err:''}), 3000))\r\n        return(()=>clearInterval(clear))\r\n    },[error])\r\n\r\n    // deleting note\r\n    type DeleteProps = {\r\n        _id:string,\r\n        setEditNote?:Dispatch<SetStateAction<{title:'', content:'', _id:'', bg:[]}>>,\r\n        MOVE_TO_BIN?:boolean,\r\n        RESTORE?:boolean\r\n    }\r\n    const handleDeleteNote = useCallback(async({_id, setEditNote, MOVE_TO_BIN = true, RESTORE=false} : DeleteProps) =>{\r\n        setLoader(true)     //displaying the loader while deleting the note\r\n        const {default: deleteNote} = await import('../../../modules/deleteNote')\r\n        const data = await deleteNote(`/api/v1/user/notes/${_id}`, MOVE_TO_BIN, RESTORE)\r\n        if(data?.success){\r\n            setRefetch(true)\r\n        }\r\n        // if note is in note page then disable the modal\r\n        if(setEditNote || MOVE_TO_BIN){\r\n            const modal = document.getElementById('modal') as HTMLDivElement\r\n            const p = modal.parentElement as any\r\n            document.body.classList.remove('edit_mode')\r\n            setTimeout(()=>{\r\n                p.style.display='none'\r\n                modal.style.display='none'\r\n                setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n            },310)\r\n        }\r\n\r\n        setLoader(false)\r\n    }, [])\r\n\r\n    // updating note\r\n    const handleUpdateNote = useCallback(async(note:NoteInterface, setEditNote?:Dispatch<SetStateAction<NoteInterface>>)=>{\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            const div_element = document.getElementById(note._id) as  HTMLDivElement\r\n            // console.log(div_element, note._id)\r\n            if(div_element){\r\n                div_element.style.opacity = '1' //making the note appear again after updatiing\r\n            }\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n        const {default:updateNotes} = await import('../../../modules/updateNote')\r\n        const data = await updateNotes(`/api/v1/user/notes/${note._id}`,note)\r\n        data?.success && setRefetch(true)\r\n    }, [])\r\n\r\n    // creating note\r\n    const handleNoteSubmit = useCallback(async(e:FormEvent<HTMLFormElement>)=>{\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setLoader(true)\r\n        const {default:createNote} = await import('../../../modules/createNote')\r\n        const data = await createNote(note)\r\n        if(data?.error) setError({err:data.error})\r\n        if(data?.success){\r\n            setRefetch(true)\r\n            setNote({title:'', content:''})\r\n        }\r\n        setLoader(false)\r\n    },[note])\r\n\r\n    return {loader, setLoader, handleDeleteNote, handleUpdateNote, handleNoteSubmit, error, handleNoteChange, note}\r\n}\r\nexport default useNoteOperations","import { NoteInterface } from \"../types\"\r\n\r\nconst fetchNotes = async(url:string) =>{\r\n    try {\r\n        const res = await fetch(url)\r\n        const data:{notes?:NoteInterface[]} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default fetchNotes","const updateNote = async (url:string, note:{\r\n    title:string,\r\n    content:string,\r\n    _id:string,\r\n    bg:string[]\r\n}) =>{\r\n    try {\r\n        const res = await fetch(url,{\r\n            method:'PATCH',\r\n            body:JSON.stringify(note),\r\n            headers:{'Content-Type':'application/json'}\r\n        })\r\n        const data:{success:boolean} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default updateNote"],"names":["LeftRightWrapper","memo","children","styles","before_obj","StyledLeftRightWrapper","style","styled","cls","StyledMenu","className","Wrapper","mode","StyledWrapper","props","css","handleClick","StyledLink","onClick","Caption","text","StyledCaption","error","Styled","Form","no_bg","handleSubmit","animate","StyledForm","onSubmit","e","preventDefault","H3","StyledH3","dark_theme","useThemeStates","xmlns","width","height","viewBox","fill","d","cx","cy","r","auth","setUser","useUserCtx","history","useHistory","useEffect","default","res","_id","v","email","push","ref_id","useRef","current","enableEditModal","useCallback","modal","document","getElementById","p","parentElement","getBoundingClientRect","top","left","display","setTimeout","body","classList","add","placeholder","name","value","handleChange","type","setSearch","StyledInput","onChange","target","hover_bg","StyledTextArea","useNoteOperations","loader","handleNoteSubmit","handleNoteChange","note","title","content","If","condition","err","Error","Button","useEditNoteCtx","edit_note","useContext","ThemeCtx","handleDeleteNote","setMenuDetails","StyledEditModal","id","background","bg","border","OverlayMenu","ActionLink","Clr","StyledSectionHeader","alignItems","justifyContent","flexDirection","user","setEditNote","listenClickEnv","contains","opacity","notes","filter","each_note","timer","addEventListener","clearTimeout","removeEventListener","useNoteFetch","search","search_key","trim","toLowerCase","matched","includes","useNoteClickEvents","length","minHeight","Loader","size","map","i","delete","Note","eventType","handler","element","window","handleRef","eventListener","hanlderRef","key","element2","eventType2","useState","enable","item","position","menu","setMenu","currentTarget","remove","eventListener2","white","green","yellow","purple","red","ColorList","color","clr","stopPropagation","updateNote","Object","keys","fetchNotes","data","StyledColorList","ColorsArr","index","ColorBox","handleColorSubmit","borderRadius","EditNoteCtx","createContext","useFetchUser","useEnableEditModal","handleUpdateNote","useEventListener","useClickListener","useHandleChange","useEnableMenu","querySelector","Provider","Math","random","toString","slice","StyledNote","padding","borderBottom","overflow","flex","MOVE_TO_BIN","RESTORE","setLoader","old","console","log","setNote","setError","refetch","setRefetch","then","clear","clearInterval","deleteNote","success","div_element","updateNotes","createNote","url","fetch","json","method","JSON","stringify","headers"],"sourceRoot":""}