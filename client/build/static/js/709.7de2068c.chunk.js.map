{"version":3,"file":"static/js/709.7de2068c.chunk.js","mappings":"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","sources":["Components/HigherComponents/FormFields/FormField.tsx","Components/HigherComponents/FormFields/InputField.tsx","Components/HigherComponents/FormFields/LabelField.tsx","Components/PureComponents/Error.tsx","Components/PureComponents/Form.tsx","Components/PureComponents/H3.tsx","Pages/LoginRegister/Hooks/useRegister.tsx","Pages/Login/Login.modal.tsx","Pages/Login/Login.page.tsx","Pages/Note/CustomHooks/useHandleChange.tsx"],"sourcesContent":["import { Children, cloneElement, memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormField = memo(({children}:{children:JSX.Element[]})=>{\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    return(\r\n        <StyledFormField>\r\n            {\r\n                Children.map(children, (child:JSX.Element)=>{\r\n                    if(typeof child.type === 'string') return child\r\n                    return cloneElement(child, {focus, setFocus})\r\n                })\r\n            }\r\n        </StyledFormField>\r\n    )\r\n})\r\nexport default FormField\r\n\r\n\r\nconst StyledFormField = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    width:100%;\r\n    position:relative;\r\n    margin-top:5rem;\r\n    /* box-shadow:0 0.1rem 0.3rem rgba(0, 0, 0, 0.5); */\r\n\r\n    /* giving margin on email form field */\r\n    &:nth-of-type(1){\r\n        margin-top:3rem;\r\n    }\r\n\r\n    label{\r\n        position:absolute;\r\n        top:50%;\r\n        left:0;\r\n        transform:translate(4rem, -50%);\r\n        pointer-events:none;\r\n        transition:all 0.25s;\r\n    }\r\n    .transform{\r\n        color:var(--transform-label-clr);\r\n        transform:translate(1rem, -230%);\r\n        font-size:clamp(1.4rem, 1.5rem, 1.5vw);\r\n    }\r\n\r\n    >img{\r\n        height:2.5rem;\r\n        position:absolute;\r\n        top:50%;\r\n        left: 0.5rem;\r\n        transform:translateY(-50%);\r\n    }\r\n\r\n    >input{\r\n        width:100%;\r\n        padding:1rem 0.5rem 1rem 4rem;\r\n    }\r\n`","import { ChangeEvent, Dispatch, SetStateAction } from 'react'\r\nimport styled from 'styled-components'\r\nimport Img from '../../PureComponents/Img'\r\n\r\nconst InputField = (({props, setFocus}:{props:InputProps, setFocus?:Dispatch<SetStateAction<boolean>>})=>{\r\n    const {state, name, handleChanges} = props\r\n    return(\r\n        <>\r\n        <Img src={`./imgs/${name}.avif`} alt={name}/>\r\n        <StyledInput type=\"text\" value={state} name={name} onChange={(e)=>handleChanges(e)} onFocus={()=>setFocus && setFocus(true)}\r\n            onBlur={(e)=>{\r\n                setFocus && setFocus(e.target.value.length>0 )\r\n            }}\r\n            />\r\n        </>\r\n    )\r\n})\r\nexport default InputField\r\n\r\nconst StyledInput = styled.input`\r\n    border:none;\r\n    outline:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--focused) !important;\r\n    font-size:clamp(1.5rem, 1.6rem, 1.6vw);\r\n`\r\n\r\n\r\n\r\ntype InputProps = {\r\n    name:string,\r\n    state:string,\r\n    // handleChange: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    handleChanges: (e: ChangeEvent<HTMLInputElement>) => void\r\n}","import styled from \"styled-components\"\r\n\r\ntype LabelProps = { text:string, focus?:string  }\r\n\r\n\r\nconst LabelField = (props:LabelProps)=>{\r\n    return(\r\n        <StyledLabel className={props.focus && 'transform'}>{props.text}</StyledLabel>\r\n    )\r\n}\r\nexport default LabelField\r\n\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size:clamp(1.5rem, 1.6rem, 1.6vw);\r\n`","import styled from \"styled-components\"\r\n\r\nconst ErrorDisplayer = (({error}:{error:string})=>{\r\n    return(\r\n        <Styled>{error}</Styled>\r\n    )\r\n})\r\nexport default ErrorDisplayer\r\n\r\nconst Styled = styled.p`\r\n    color:red;\r\n    font-size:clamp(1.5rem,1.6rem,1.6vw);\r\n`","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo(({children, no_bg, mode, handleSubmit, styles}:{\r\n    children:ReactNode, no_bg?:boolean, mode?:string, handleSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties\r\n})=>{\r\n\r\n    return(\r\n        <StyledForm onSubmit={(e)=>{\r\n                e.preventDefault()\r\n                handleSubmit && handleSubmit(e)\r\n            }}\r\n            style={styles}\r\n            no_bg={no_bg}\r\n            mode={mode}   //for margin-top\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default Form\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?:boolean, mode?:string}>`\r\n    height:45rem;\r\n    width:90%;\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    max-width:35rem;\r\n    background:var(--form-bg);\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                margin: auto;\r\n                max-width:40rem;\r\n                margin-top:5rem;\r\n                border-radius:0.5rem;\r\n                box-shadow:0 0.5rem 0.5rem rgba(0,0,0,0.4);\r\n                padding:0 2rem 2rem 2rem;\r\n                >h3{\r\n                    padding:1rem 0 2rem 0;\r\n                }\r\n                .div{\r\n                    padding:0 2rem;\r\n                    margin-top:2rem;\r\n                    width:100%;\r\n                    display:flex;\r\n                    justify-content:space-between;\r\n                    align-items:center;\r\n\r\n                    input{\r\n                        background:var(--focused);\r\n                    }\r\n                }\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:20rem;\r\n                @media (min-width:700px){\r\n                    height:45rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top:auto\r\n    }\r\n\r\n    input,textarea{\r\n        background:var(--input-bg);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H3 = memo(({text, styles, handleClick}:{text:string, styles?:CSSProperties, handleClick?:() =>void})=>{\r\n    return(\r\n        <StyledH3 style={styles} onClick={handleClick}>{text}</StyledH3>\r\n    )\r\n})\r\nexport default H3\r\n\r\nconst StyledH3 = styled.h3<{styles?:CSSProperties}>`\r\n    font-size:2.2rem;\r\n    font-weight:500;\r\n`","import { ChangeEvent, FormEvent, useCallback, useEffect, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport UserStates from \"../../../Context/UserContext\"\r\nimport useHandleChange from \"../../Note/CustomHooks/useHandleChange\"\r\n\r\nconst useRegister = () => {\r\n    const [state, setState] = useState({email:'', password:\"\"})\r\n    const [errors, setErrors] = useState<{email?:string, password?:string, err?:string}>({email:'', password:'', err:\"\"})\r\n    const [loader, setLoader] = useState(false)\r\n    const history = useHistory()\r\n    const {handleChange} = useHandleChange()\r\n    const {setUser} = UserStates()\r\n\r\n    const handleChanges = useCallback((e:ChangeEvent<HTMLInputElement>) =>{\r\n        handleChange(e, setState)\r\n    },[])\r\n\r\n    const loginUser = useCallback(async(email:string, password:string) =>{\r\n        try{\r\n            const res = await fetch('/api/v1/user/login',{\r\n                method:'POST',\r\n                body:JSON.stringify({email,password}),\r\n                headers:{ 'Content-Type':\"application/json\"},\r\n            })\r\n            const data:{errors:{email?:string, password?:string, err?:string}, _id:string, email:string} = await res.json()\r\n            const {errors, _id, email:email_id} =  data\r\n            return {errors, _id, email_id}\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }, [])\r\n\r\n    const registerUser = useCallback(async(email:string, password:string)=>{\r\n        try{\r\n            const res = await fetch('/api/v1/user',{\r\n                method:'POST',\r\n                body:JSON.stringify({email,password}),\r\n                headers:{ 'Content-Type':\"application/json\"}\r\n            })\r\n            const data:{errors:{email:string, password:string,err:string}, _id:string} = await res.json()\r\n            return {...data}\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = useCallback(async(e:FormEvent<HTMLFormElement>, mode:string = 'login')=>{\r\n        e.preventDefault()\r\n        setLoader(true)\r\n        let data;\r\n        if(mode === 'login'){\r\n            data = await loginUser(state.email, state.password)\r\n            if(data?._id){\r\n                setUser({_id:data._id,email:data.email_id})\r\n                history.push('/')\r\n            }\r\n        }else{\r\n            data = await registerUser(state.email, state.password)\r\n            if(data?._id){\r\n                return history.push('/login')\r\n            }\r\n        }\r\n        setLoader(false)\r\n        data?.errors && setErrors(data.errors)\r\n    },[state, history, registerUser])\r\n\r\n    useEffect(()=>{\r\n        const clr = errors &&  setTimeout(()=>setErrors({email:'', password:'', err:''}), 3000)\r\n        return(()=>{\r\n            clearInterval(clr)\r\n        })\r\n    },[errors])      //resetting the errors or removig or cleanin\r\n\r\n    return {handleSubmit, loader, errors, state, setState, handleChanges}\r\n}\r\nexport default useRegister","import { useMemo } from \"react\"\r\nimport FormField from \"../../Components/HigherComponents/FormFields/FormField\"\r\nimport InputField from \"../../Components/HigherComponents/FormFields/InputField\"\r\nimport LabelField from \"../../Components/HigherComponents/FormFields/LabelField\"\r\nimport Button from \"../../Components/PureComponents/Button\"\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\"\r\nimport Form from \"../../Components/PureComponents/Form\"\r\nimport H3 from \"../../Components/PureComponents/H3\"\r\nimport useRegister from \"../LoginRegister/Hooks/useRegister\"\r\n\r\n\r\n\r\nconst LoginModal = ()=>{\r\n    const {handleSubmit, loader, errors, state, handleChanges} = useRegister()\r\n\r\n\r\n    const EmailProps = useMemo(()=>({\r\n        state:state.email, handleChanges, name:'email'\r\n    }),[state.email, handleChanges])\r\n    const PasswordProps = useMemo(()=>({\r\n        state:state.password, handleChanges, name:'password'\r\n    }),[state.password, handleChanges])\r\n\r\n    return(\r\n        <>\r\n            <Form mode='login' handleSubmit={handleSubmit}>\r\n                <H3  text='Login'  styles={{color:'var(--secondary-clr)'}}  />\r\n                <FormField>\r\n                    <LabelField text='email'/>\r\n                    <InputField props={EmailProps}/>\r\n                </FormField>\r\n                <FormField>\r\n                    <LabelField text='password'/>\r\n                    <InputField props={PasswordProps}/>\r\n                </FormField>\r\n                { errors.email &&  <ErrorDisplayer  error={errors.email}/> }\r\n                { errors.password &&  <ErrorDisplayer  error={errors.password}/> }\r\n                { errors.err &&  <ErrorDisplayer  error={errors.err}/> }\r\n                <Button  text='submit'  mode='login_btn' loader={loader} />\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\nexport default LoginModal","import LoginModal from \"./Login.modal\";\r\n\r\nconst LoginPage = ()=>{\r\n    return(\r\n        <>\r\n        <LoginModal />\r\n        </>\r\n    )\r\n}\r\nexport default LoginPage","import { ChangeEvent } from \"react\"\r\n\r\nconst useHandleChange = () =>{\r\n    const handleChange = (e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, handler:any)=>{\r\n        handler((old:any)=>({\r\n            ...old,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    }\r\n    return {handleChange}\r\n}\r\nexport default useHandleChange"],"names":["FormField","memo","children","useState","focus","setFocus","StyledFormField","Children","child","type","cloneElement","styled","props","state","name","handleChanges","src","alt","StyledInput","value","onChange","e","onFocus","onBlur","target","length","StyledLabel","className","text","error","Styled","Form","no_bg","mode","handleSubmit","styles","StyledForm","onSubmit","preventDefault","style","css","H3","handleClick","StyledH3","onClick","email","password","setState","err","errors","setErrors","loader","setLoader","history","useHistory","handleChange","useHandleChange","setUser","UserStates","useCallback","loginUser","fetch","method","body","JSON","stringify","headers","res","json","data","_id","email_id","console","log","registerUser","push","useEffect","clr","setTimeout","clearInterval","useRegister","EmailProps","useMemo","PasswordProps","color","LabelField","InputField","Error","Button","handler","old"],"sourceRoot":""}