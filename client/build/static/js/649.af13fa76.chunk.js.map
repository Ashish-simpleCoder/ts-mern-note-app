{"version":3,"file":"static/js/649.af13fa76.chunk.js","mappings":"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","sources":["Components/HigherComponents/LeftRightWrapper.tsx","Components/HigherComponents/Wrapper.tsx","Components/PureComponents/Caption.tsx","Components/PureComponents/Error.tsx","Components/PureComponents/Form.tsx","Components/PureComponents/H3.tsx","Pages/Home/hooks/useFetchUser.tsx","Pages/Note/CustomHooks/useHandleChange.tsx","Pages/Login/useEnableEditModal.tsx","Components/HigherComponents/Input.tsx","Components/PureComponents/Textarea.tsx","Pages/Note/CustomHooks/useNoteOperations.tsx","Pages/Note/Note.input.section.tsx","Pages/Note/Note.modal.tsx","Components/HigherComponents/Section.header.tsx","Pages/Note/Dummy.tsx","Components/PureComponents/RandomSpan.tsx","Pages/Note/Note.tsx","Pages/Note/CustomHooks/useNoteFetch.tsx","Pages/Note/Note.output.section.tsx","Pages/Note/useClickListener.tsx","Pages/Note/useEvent.tsx","Pages/Note/Note.page.tsx","modules/fetchNotes.ts"],"sourcesContent":["import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\nconst LeftRightWrapper = memo(({children, styles, before_obj}:{children:ReactNode, styles?:CSSProperties, before_obj?:boolean})=>{\r\n    return(\r\n        <StyledLeftRightWrapper style={styles} before_obj={before_obj}>\r\n            {children}\r\n        </StyledLeftRightWrapper>\r\n    )\r\n})\r\nexport default LeftRightWrapper\r\n\r\nconst StyledLeftRightWrapper = styled.section<{before_obj?:boolean}>`\r\n    display:flex;\r\n    flex-direction:column;\r\n    flex-wrap:wrap;\r\n\r\n    @media (min-width:700px){\r\n        flex-direction:unset;\r\n    }\r\n`","import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\n\r\n\r\nconst Wrapper = memo(({children, styles, page, mode}:{\r\n    children:ReactNode, styles?:CSSProperties, page?:string\r\n    mode?:string\r\n})=>{\r\n    if(mode === 'edit_note'){\r\n        return (\r\n            <StyledEditModalWrapper className='edit_modal_wrapper'>\r\n                {children}\r\n            </StyledEditModalWrapper>\r\n        )\r\n    }\r\n    if(page === 'note_output'){\r\n        return(\r\n            <StyledNoteOutWrapper style={styles}>\r\n                {children}\r\n            </StyledNoteOutWrapper>\r\n        )\r\n    }\r\n    return (\r\n        <StyledWrapper mode={mode} style={styles} className={mode}>\r\n            {children}\r\n        </StyledWrapper>\r\n    )\r\n})\r\nexport default Wrapper\r\n\r\nconst StyledWrapper = styled.section<{mode?:string}>`\r\n    display:flex;\r\n    overflow:hidden;\r\n    position:relative;\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case 'hero': return css`\r\n                width:100%;\r\n                align-items:center;\r\n                justify-content:center;\r\n                transform-origin:center;\r\n                flex-direction:column;\r\n                text-align:center;\r\n                padding:2rem;\r\n\r\n                @media (min-width:700px){\r\n                    width:50%;\r\n                }\r\n            `\r\n\r\n            case \"create_note_container\": return css`\r\n                padding:2rem;\r\n                justify-content:center;\r\n                margin-bottom:3rem;\r\n                button{\r\n                    width:100%;\r\n                }\r\n\r\n                @media (min-width:700px){\r\n                    margin-bottom:0rem;\r\n                        border-right:var(--border);\r\n                        height:100%;\r\n                        position:fixed;\r\n                        width:var(--width);\r\n                    }\r\n            `\r\n\r\n            case 'notes_container_wrapper': return css`\r\n                flex-direction:column;\r\n                @media (min-width:700px){\r\n                    position:relative;\r\n                    left:var(--width);\r\n                    width:calc(100% - var(--width));\r\n                }\r\n            `\r\n\r\n            case 'notes_container': return css`\r\n                justify-content:center;\r\n                gap:3rem;\r\n                padding:2rem;\r\n                flex-wrap:wrap;\r\n                @media (min-width:700px){\r\n                    justify-content:space-around;\r\n                }\r\n            `\r\n            default: return css`\r\n            `\r\n        }\r\n    }}\r\n\r\n    img{\r\n        display:flex;\r\n        /* width:32rem; */\r\n        /* height:35rem; */\r\n        width:clamp(23rem, 28rem, 28vw);\r\n        height:clamp(28rem, 32rem, 32vw);\r\n        transform:rotate(-20deg) scale(0.8);\r\n        transform-origin:center;\r\n    }\r\n`\r\n\r\n\r\nconst StyledNoteOutWrapper = styled.section`\r\n    display:flex;\r\n    justify-content:center;\r\n    gap:2rem;\r\n    flex-wrap:wrap;\r\n    padding:2rem;\r\n\r\n\r\n    @media (min-width:700px){\r\n        position:relative;\r\n        left:var(--width);\r\n        width:calc(100% - var(--width));\r\n        justify-content:space-around;\r\n    }\r\n`\r\n\r\nconst StyledEditModalWrapper = styled.section`\r\n    width:100%;\r\n    height:100%;\r\n    top:0 !important;\r\n    inset:0;\r\n    position:fixed;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    background:var(--edit-modal-bg);\r\n    display:none;\r\n    border-radius:0.5rem;\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst Caption = memo(({text, styles}:{text?:string, styles?:CSSProperties | any})=>{\r\n    return(\r\n        <StyledCaption style={styles}>{text}</StyledCaption>\r\n    )\r\n})\r\nexport default Caption\r\n\r\nconst StyledCaption = styled.p`\r\n    font-size:clamp(1.8rem, 2rem ,2vw);\r\n    opacity:0.9;\r\n    white-space:pre-line;\r\n    word-break:break-all;\r\n    margin-top:1rem;\r\n    /* width:max-content; */\r\n`","import styled from \"styled-components\"\r\n\r\nconst ErrorDisplayer = (({error}:{error:string})=>{\r\n    return(\r\n        <Styled>{error}</Styled>\r\n    )\r\n})\r\nexport default ErrorDisplayer\r\n\r\nconst Styled = styled.p`\r\n    color:red;\r\n    font-size:clamp(1.5rem,1.6rem,1.6vw);\r\n`","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo(({children, no_bg, mode, handleSubmit, styles, animate}:{\r\n    children:ReactNode, no_bg?:boolean, mode?:string, handleSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?:boolean\r\n})=>{\r\n\r\n    return(\r\n        <StyledForm onSubmit={(e)=>{\r\n                e.preventDefault()\r\n                handleSubmit && handleSubmit(e)\r\n            }}\r\n            style={styles}\r\n            no_bg={no_bg}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default Form\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?:boolean, mode?:string, animate?:boolean}>`\r\n    height:45rem;\r\n    width:90%;\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    max-width:35rem;\r\n    background:var(--form-bg);\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                margin: auto;\r\n                max-width:40rem;\r\n                margin-top:5rem;\r\n                border-radius:0.5rem;\r\n                box-shadow:0 0.3rem 0.3rem rgba(0,0,0,0.3);\r\n                padding:0 2rem 2rem 2rem;\r\n                >h3{\r\n                    padding:1rem 0 2rem 0;\r\n                }\r\n                .div{\r\n                    padding:0 2rem;\r\n                    margin-top:2rem;\r\n                    width:100%;\r\n                    display:flex;\r\n                    justify-content:space-between;\r\n                    align-items:center;\r\n                }\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top:auto   //button will be at the bottom of the form\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H3 = memo(({text, styles, handleClick}:{text:string, styles?:CSSProperties, handleClick?:() =>void})=>{\r\n    return(\r\n        <StyledH3 style={styles} onClick={handleClick}>{text}</StyledH3>\r\n    )\r\n})\r\nexport default H3\r\n\r\nconst StyledH3 = styled.h3<{styles?:CSSProperties}>`\r\n    font-size:2.2rem;\r\n    font-weight:500;\r\n`","import { useLayoutEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useUserCtx } from \"../../../Context/UserContext\"\r\n\r\nconst useFetchUser = ({auth = false} : {auth?:boolean}) =>{\r\n    const {setUser} = useUserCtx()\r\n    const history = useHistory()\r\n\r\n    useLayoutEffect(()=>{\r\n        (async () =>{\r\n            const res = await (await import(\"../../../utils/fetchUser\")).default()\r\n            res?._id && setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            auth && !res?._id && history.push('/login')\r\n        })()\r\n    },[setUser, history, auth])\r\n}\r\nexport default useFetchUser","import { ChangeEvent } from \"react\"\r\n\r\nconst useHandleChange = () =>{\r\n    const handleChange = (e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, handler:any)=>{\r\n        handler((old:any)=>({\r\n            ...old,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    }\r\n    return {handleChange}\r\n}\r\nexport default useHandleChange","import { useCallback, useEffect, useRef } from \"react\"\r\n\r\nconst useEnableEditModal = ({_id}:{_id:string}) => {\r\n    const ref_id = useRef(_id)\r\n    useEffect(()=>{\r\n        ref_id.current = _id\r\n    }, [_id])\r\n\r\n    const enableEditModal = useCallback((_id:string) =>{\r\n        if(_id){\r\n            const modal = document.getElementById('modal') as HTMLDivElement\r\n            const p = modal.parentElement as any\r\n            const element = document.getElementById(_id) as HTMLDivElement\r\n            const {top, left, width, height} = element.getBoundingClientRect()\r\n            modal.style.top = top+'px'\r\n            modal.style.left = left+'px'\r\n            modal.style.width = width+'px'\r\n            modal.style.height = height+'px'\r\n            p.style.display='flex'\r\n            modal.style.display='flex'\r\n            setTimeout(()=> document.body.classList.add('edit_mode'),20)\r\n        }\r\n    }, [ref_id])\r\n\r\n    useEffect(()=>{\r\n        enableEditModal(ref_id.current)\r\n    },[_id])\r\n\r\n    return {enableEditModal}\r\n}\r\nexport default useEnableEditModal","import { ChangeEvent, memo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport  { useUserCtx } from \"../../Context/UserContext\";\r\n\r\n\r\n\r\nconst Input = memo(({ placeholder, name, value, handleChange, mode, type}: InputProps)=>{\r\n    const {setSearch} = useUserCtx()\r\n\r\n    return <StyledInput\r\n        type={type === 'search' ? 'search' : 'text'} name={name} value={value}\r\n        mode={mode}\r\n        onChange={(e)=>{\r\n            if(name === 'search'){\r\n                setSearch(e.target.value)\r\n            }else{\r\n                handleChange && handleChange(e,)\r\n            }\r\n        }}\r\n        placeholder={placeholder}\r\n    />\r\n})\r\nexport default Input\r\n\r\n\r\ntype InputProps = {\r\n    type?:string\r\n    mode?:string\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name:string\r\n}\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?:string}>`\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0 1rem;\r\n    height:3.5rem;\r\n    background:var(--input-bg);\r\n    outline:none;\r\n\r\n    ${({mode})=>{\r\n        switch (mode){\r\n            case 'edit_note': return css`\r\n                background:inherit;\r\n                `\r\n            case 'note_title': return css`\r\n                width:100%;\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n                `\r\n            default : return css`\r\n            &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n    }}}\r\n    border-radius:0.3rem;\r\n    outline:var(--border);\r\n`\r\n\r\n","import { ChangeEvent } from \"react\"\r\nimport styled, { css, CSSProperties } from \"styled-components\"\r\n\r\nconst Textarea = ({value, handleChange, placeholder, name, styles, hover_bg}:TextareaProps)=>{\r\n    return(\r\n        <StyledTextArea\r\n            name={name}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            style={styles}\r\n            hover_bg={hover_bg}\r\n            onChange={(e)=>handleChange && handleChange(e)}\r\n        />\r\n    )\r\n}\r\nexport default Textarea\r\n\r\nconst StyledTextArea = styled.textarea<{hover_bg?:boolean}>`\r\n    width:100%;\r\n    height:15rem;\r\n    @media (min-width:700px){\r\n        flex:1;\r\n    }\r\n    margin-bottom:2rem;\r\n    resize:none;\r\n    margin-top:1rem;\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--input-bg);\r\n    outline:var(--border);\r\n    border-radius:0.3rem;\r\n    ${({hover_bg})=>{\r\n        if(hover_bg){\r\n            return css`\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n        }\r\n    }}\r\n\r\n`\r\n\r\n\r\n\r\ntype TextareaProps = {\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name?:string,\r\n    styles?:CSSProperties,\r\n    hover_bg?:boolean\r\n}","import { Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\nimport fetchNotes from '../../../modules/fetchNotes'\r\nimport { NoteInterface } from '../../../types'\r\n\r\nconst useNoteOperations = () => {\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(false)\r\n    const [error, setError] = useState({err:''})\r\n    const [refetch, setRefetch] = useState(false)\r\n\r\n    // console.log('note operations')\r\n    // useEffect(()=>{\r\n    //     console.log('note operations')\r\n    // }, [])\r\n\r\n    useEffect(()=>{\r\n        if(refetch){\r\n            fetchNotes('/api/v1/user/notes').then(res=>{\r\n                res?.notes && setUser(old=>({...old, notes:res.notes}))\r\n            })\r\n            setRefetch(false)\r\n        }\r\n    }, [refetch])\r\n\r\n    // useEffect(()=>{\r\n    //     if(error.err){\r\n    //         setTimeout(()=>setError({err:''}), 3000)\r\n    //     }\r\n    //     // const clr = error.err && setTimeout(()=>setError({err:''}), 3000)\r\n    //     // return(()=>{\r\n    //     //     clearInterval(clr)\r\n    //     // })\r\n    // },[error])\r\n\r\n    const handleDeleteNote = useCallback(async(_id:string, setEditNote?:Dispatch<SetStateAction<{title:'', content:'', _id:'', bg:[]}>>) =>{\r\n        setLoader(true)     //displaying the loader while deleting the note\r\n        const {default: deleteNote} = await import('../../../modules/deleteNote')\r\n        const data = await deleteNote(`/api/v1/user/notes/${_id}`)\r\n        if(data?.success){\r\n            // setLoader(false)\r\n            setRefetch(true)\r\n        }\r\n\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n    }, [])\r\n\r\n\r\n    const handleUpdateNote = useCallback(async(note:NoteInterface, setEditNote?:Dispatch<SetStateAction<NoteInterface>>)=>{\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n        const {default:updateNotes} = await import('../../../modules/updateNote')\r\n        const data = await updateNotes(`/api/v1/user/notes/${note._id}`,note)\r\n        data?.success && setRefetch(true)\r\n    }, [])\r\n\r\n    const handleNoteSubmit = useCallback(async(e:FormEvent<HTMLFormElement>, note:{title:string, content:string}, setNote:Dispatch<SetStateAction<{title:string, content:string}>>)=>{\r\n        e.preventDefault()\r\n        setLoader(true)\r\n        const {default:createNote} = await import('../../../modules/createNote')\r\n        const data = await createNote(note)\r\n        if(data?.error) setError({err:data.error})\r\n        if(data?.success){\r\n            setRefetch(true)\r\n            setNote({title:'', content:''})\r\n        }\r\n        setLoader(false)\r\n    },[])\r\n\r\n    return {loader, setLoader, handleDeleteNote, handleUpdateNote, handleNoteSubmit, error}\r\n}\r\nexport default useNoteOperations","import { useCallback} from \"react\";\r\nimport { ChangeEvent, memo, useState } from \"react\";\r\nimport Input from \"../../Components/HigherComponents/Input\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\";\r\nimport Form from \"../../Components/PureComponents/Form\";\r\nimport Textarea from \"../../Components/PureComponents/Textarea\";\r\nimport useDeleteNote from \"./CustomHooks/useNoteOperations\";\r\nimport useHandleChange from \"./CustomHooks/useHandleChange\";\r\n\r\n\r\nconst NoteInput = memo(()=>{\r\n    const [note, setNote] = useState({title:'', content:''})\r\n    const {loader, error, handleNoteSubmit} = useDeleteNote()\r\n    const {handleChange} = useHandleChange()\r\n\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setNote)\r\n    }, [])\r\n\r\n\r\n    return(\r\n        <Form no_bg={true} handleSubmit={(e)=>handleNoteSubmit(e, note, setNote)} mode='create_note'>\r\n            <Input type='title' placeholder='note title...' name='title' value={note.title} handleChange={handleNoteChange} mode='note_title'/>\r\n\r\n            <Textarea name='content'  value={note.content} handleChange={handleNoteChange} placeholder=\"type your notes....\"   hover_bg={true}/>\r\n\r\n            <Button text='create a new note' mode='create_note_btn' loader={loader}/>\r\n\r\n            { error.err &&  <ErrorDisplayer error={error.err}/>}\r\n        </Form>\r\n    )\r\n})\r\nexport default NoteInput\r\n","import { ChangeEvent, memo, ReactNode, useCallback, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/HigherComponents/Input\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport Textarea from \"../../Components/PureComponents/Textarea\";\r\nimport { ThemeCtx } from \"../../Context/UserContext\";\r\nimport useHandleChange from \"./CustomHooks/useHandleChange\";\r\nimport useDeleteNote from \"./CustomHooks/useNoteOperations\";\r\nimport { useEditNoteCtx } from \"./Note.page\";\r\n\r\n\r\n\r\nconst NoteModal = memo(({children, mode}:{\r\n    children?:ReactNode\r\n    mode:string\r\n})=>{\r\n    const {note:edit_note , setEditNote} = useEditNoteCtx()\r\n    const {dark_theme} = useContext(ThemeCtx)\r\n    const {loader, handleDeleteNote, handleUpdateNote} = useDeleteNote()\r\n    const {handleChange} = useHandleChange()\r\n\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setEditNote)\r\n    }, [handleChange, setEditNote])\r\n\r\n\r\n\r\n    if(mode === 'edit_note'){\r\n      return (\r\n        <Wrapper mode={mode}>\r\n\r\n            <StyledEditModal  id='modal' className='edit_modal' style={{background:dark_theme ? edit_note.bg[1] : edit_note.bg[0]}} >\r\n                <Input  name='title' value={edit_note.title} handleChange={handleNoteChange} mode=\"edit_note\"/>\r\n                <Textarea  name='content' value={edit_note.content} handleChange={handleNoteChange} styles={{background:'inherit'}}/>\r\n                <div className=\"btns\">\r\n                    <Button text='save' loader={loader}  handleClick={()=>handleUpdateNote(edit_note)} />\r\n                    <Button text='delete' loader={loader} handleClick={()=>handleDeleteNote(edit_note._id)}  />\r\n                </div>\r\n                {children}       {/* if any childens are send then they will be also rendered.*/}\r\n            </StyledEditModal>\r\n\r\n        </Wrapper>\r\n      )\r\n    }\r\n    return(\r\n        <></>\r\n    )\r\n})\r\nexport default NoteModal\r\n\r\nconst StyledEditModal = styled.div`\r\n    height:40rem;\r\n    width:100%;\r\n    max-width:60%;\r\n    border-radius:0.5rem;\r\n    transition:all 0.3s linear;\r\n    background:var(--modal-bg);\r\n    position:fixed;\r\n    overflow:hidden;\r\n    box-shadow:0 0.3rem 1rem rgba(0, 0, 0, 0.4);\r\n    flex-direction:column;\r\n\r\n    textarea{\r\n        flex:1;\r\n    }\r\n\r\n    input,textarea{\r\n        margin-top:0;\r\n        border:none !important;\r\n        outline:none;\r\n        border-radius:0;\r\n        font-size:clamp(1.6rem,1.7rem, 1.7vw);\r\n        /* background:white; */\r\n        &:focus{\r\n            background:inherit;\r\n        }\r\n    }\r\n    input{\r\n        text-align:center ;\r\n        font-weight:500;\r\n    }\r\n\r\n    .btns{\r\n        margin-top:auto;\r\n        display:flex;\r\n        justify-content:space-between;\r\n        flex-direction:row;\r\n        padding:2rem;\r\n    }\r\n    .save_btn{\r\n        background:var(--save-btn-bg);\r\n    }\r\n    .delete_btn{\r\n        background:var(--delete-btn-bg);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionHeader = memo(({children})=>{\r\n    return(\r\n        <StyledSectionHeader>\r\n            {children}\r\n        </StyledSectionHeader>\r\n    )\r\n})\r\nexport default SectionHeader\r\n\r\nconst StyledSectionHeader = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    padding:1rem;\r\n    border-bottom:var(--border);\r\n`","import {ReactNode} from 'react'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\n\r\nconst Dummy = ({children}:{children:ReactNode}) =>{\r\n    return(\r\n       <Wrapper styles={{height:'90vh',display:'flex', alignItems:'center',justifyContent:'center', flexDirection:'column'}}>\r\n        { children }\r\n       </Wrapper>\r\n    )\r\n}\r\nexport default Dummy","import {memo} from 'react'\r\n\r\n\r\nconst RandomSpan = memo(({cls}:{cls?:string})=>{\r\n    const background = `#${Math.random().toString(16).slice(2,8)}`\r\n    return(\r\n        <span className={cls} style={{background}}></span>\r\n    )\r\n})\r\nexport default RandomSpan","import { CSSProperties, memo, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport H3 from \"../../Components/PureComponents/H3\";\r\nimport RandomSpan from \"../../Components/PureComponents/RandomSpan\";\r\nimport { NoteInterface } from \"../../types\";\r\nimport { EditNoteCtx } from \"./Note.page\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport ColorList from \"../../Components/HigherComponents/ColorList\";\r\nimport useDeleteNote from \"./CustomHooks/useNoteOperations\";\r\n\r\n\r\nconst Note = memo(({note, styles}:{note:NoteInterface, styles?:CSSProperties | any})=>{\r\n    const {setEditNote} = useContext(EditNoteCtx)\r\n    const {loader, handleDeleteNote} = useDeleteNote()\r\n\r\n    const handleClick = () => setEditNote(note)\r\n\r\n\r\n    return(\r\n        <StyledNote id={note._id} style={styles}\r\n            className=\"note\"\r\n        >\r\n            <Wrapper>\r\n                <RandomSpan cls='random_span'/>\r\n                <H3 text={note.title} styles={{width:'100%'}} handleClick={handleClick}/>\r\n            </Wrapper>\r\n\r\n            <Wrapper styles={{overflow:'hidden',height:'60%'}}>\r\n                <p onClick={handleClick}>{note.content}</p>\r\n            </Wrapper>\r\n\r\n            <Button  text='d' mode='delete_note_btn' handleClick={()=>handleDeleteNote(note._id)} loader={loader}/>\r\n            {/* <OverlayMenu> */}\r\n                {/* <ActionLink tooltip_text=\"change color of note\"> */}\r\n                    {/* <a href=\"#/notes\"><Clr/></a> */}\r\n                    {/* <summary><Clr/></summary> */}\r\n                    {/* <details> */}\r\n                    {/* <ColorList note={note} /> */}\r\n                    {/* </details> */}\r\n                {/* </ActionLink> */}\r\n                {/* <ActionLink><Clr/></ActionLink>\r\n                <ActionLink><Clr/></ActionLink> */}\r\n            {/* </OverlayMenu> */}\r\n        </StyledNote>\r\n    )\r\n})\r\nexport default Note\r\n\r\n\r\n\r\nconst StyledNote = styled.div`\r\n    width:100%;\r\n    max-width:40rem;\r\n    height:20rem;\r\n    border-radius:1rem;\r\n    box-shadow:0 0.3rem 0.5rem rgba(0,0,0,0.1);\r\n    position:relative;\r\n    border:var(--note-border);\r\n   animation:animate_note calc(0.4s  * var(--note-order)) ease-in forwards;\r\n\r\n\r\n    h3,p{\r\n        font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n        padding:0.5rem;\r\n    }\r\n    h3{\r\n        border-bottom:var(--border);\r\n        font-weight:400;\r\n        text-align:center;\r\n        width:100%;\r\n    }\r\n    p{\r\n        opacity:0.8;\r\n        white-space:pre-line;\r\n        word-break:break-all;\r\n        text-overflow:ellipsis;\r\n        height:100%;\r\n        width:100%;\r\n    }\r\n\r\n    span.random_span{\r\n        position:absolute;\r\n        top:0;left:0;\r\n        width:5rem;\r\n        height:5rem;\r\n        border-radius:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n\r\n    div.overlay_menu{\r\n        height:4rem;\r\n        width:100%;\r\n        display:flex;\r\n        opacity:0;\r\n        pointer-events:none;\r\n    }\r\n    &:hover, &:focus, &:focus-within{\r\n        div.overlay_menu{\r\n            opacity:1;\r\n            pointer-events:all;\r\n        }\r\n    }\r\n\r\n    @keyframes animate_note{\r\n        0%{\r\n            transform: scale(0.8);\r\n            animation-timing-function: ease;\r\n            /* background:var(--secondary-clr); */\r\n        }50%{\r\n            animation-timing-function: ease-in;\r\n            opacity: 1;\r\n            transform: scale(1.1);\r\n        }100%{\r\n            animation-timing-function: ease-out;\r\n            opacity: 1;\r\n            transform: scale(1);\r\n        }\r\n}\r\n`","import { useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\n\r\nconst useNoteFetch = () =>{\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            try {\r\n                const data = await (await import('../../../modules/fetchNotes')).default('/api/v1/user/notes')\r\n                if(data?.notes) setUser(old=>({...old, notes:data.notes}))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoader(false)\r\n        })()\r\n    },[setUser])\r\n    return {loader}\r\n}\r\nexport default useNoteFetch","import { memo} from 'react'\r\nimport Input from '../../Components/HigherComponents/Input'\r\nimport SectionHeader from '../../Components/HigherComponents/Section.header'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\nimport Caption from '../../Components/PureComponents/Caption'\r\nimport H3 from '../../Components/PureComponents/H3'\r\nimport { useThemeStates, useUserCtx } from '../../Context/UserContext'\r\nimport { NoteInterface } from '../../types'\r\nimport Dummy from './Dummy'\r\nimport Note from './Note'\r\nimport useNoteFetch from \"./CustomHooks/useNoteFetch\";\r\nimport Loader from '../../Components/PureComponents/Loader'\r\n\r\n\r\n\r\nconst NoteOutput = memo(()=>{\r\n    const {loader} = useNoteFetch()     //fetching the notes of logged user\r\n    const {user, search} = useUserCtx()\r\n    const {dark_theme} = useThemeStates()\r\n    const search_key = search?.trim().toLowerCase()\r\n    const matched = (note : NoteInterface) => note.title.trim().toLowerCase().includes(search_key)  || note.content.trim().toLowerCase().includes(search_key)\r\n\r\n    return(\r\n        <Wrapper mode='notes_container_wrapper'>\r\n            {/* for searching notes */}\r\n            {\r\n                user.notes?.length !== 0  ? (<SectionHeader>\r\n                                                <H3 text='Your notes'/>\r\n                                                <Input type='search' name='search' placeholder='search your notes...'/>\r\n                                            </SectionHeader>)\r\n                                        :\r\n                                        <Dummy>\r\n                                            <H3 text=\"Haven't created any notes?\" />\r\n                                            <Caption text=\"Then let's get started. \"/>\r\n                                        </Dummy>\r\n                }\r\n\r\n            {/* displaying the notes in container */}\r\n           {user.notes?.length !== 0 && <Wrapper mode='notes_container' styles={{minHeight:'calc(100vh - 2 * var(--header-height))'}}>\r\n                {\r\n                    loader ?\r\n                        <Loader size='big' />\r\n                        :\r\n                        user.notes?.map((note, index)=><Note key={note._id} note={note}  styles={{'--note-order':index+1, background:dark_theme ? note.bg[1] : note.bg[0], display:matched(note) ? 'block' : 'none'}}/>) }\r\n            </Wrapper>}\r\n        </Wrapper>\r\n    )\r\n})\r\nexport default NoteOutput","import { useEffect, useRef } from \"react\"\r\n\r\nconst useClickListener = ({eventType, handler, element = window}:{eventType:any, handler:any, element?:any}) =>{\r\n    const handleRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n    // adding event to the Overlay for closing the opened nav\r\n    // useEffect(()=>{\r\n    //     const overlay = document.querySelector('.overlay') as HTMLDivElement\r\n    //     overlay.classList.toggle('show_overlay', show_nav && show)\r\n    //     if(show_nav && show){\r\n    //         overlay.addEventListener('click',enableResNav)\r\n    //     }\r\n    //     return () =>overlay.removeEventListener('click', enableResNav)\r\n    // }, [show_nav, show])\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n            if(e.target.classList.contains('edit_modal_wrapper') && document.body.classList.contains('edit_mode')){\r\n                handleRef.current()\r\n            }\r\n        }\r\n       element?.addEventListener(eventType, eventListener, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n        }\r\n    }, [eventType])\r\n}\r\nexport default useClickListener","import { useEffect, useRef } from \"react\"\r\n\r\n\r\nconst useEventListener = ({eventType, handler, element}:{eventType:any, handler:any, element?:any}) =>{\r\n    const hanlderRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        hanlderRef.current = handler\r\n    },[handler])\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => e.key === 'Escape' && hanlderRef.current()\r\n        element?.addEventListener(eventType, eventListener)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener)\r\n        }\r\n    }, [eventType, element])\r\n}\r\nexport default useEventListener","import { ChangeEvent, createContext, memo, useCallback, useContext, useState } from \"react\";\r\nimport LeftRightWrapper from \"../../Components/HigherComponents/LeftRightWrapper\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport { EditNoteType, NoteInterface } from \"../../types\";\r\nimport useFetchUser from \"../Home/hooks/useFetchUser\";\r\nimport useEnableEditModal from \"../Login/useEnableEditModal\";\r\nimport NoteInput from \"./Note.input.section\";\r\nimport NoteModal from \"./Note.modal\";\r\nimport NoteOutput from \"./Note.output.section\";\r\nimport useClickListener from \"./useClickListener\";\r\nimport useEventListener from \"./useEvent\";\r\nimport useHandleChange from \"./CustomHooks/useHandleChange\";\r\nimport useNoteOperations from \"./CustomHooks/useNoteOperations\";\r\n\r\nexport const EditNoteCtx = createContext({} as EditNoteType)\r\nexport const useEditNoteCtx = () => useContext(EditNoteCtx)\r\n\r\n\r\nconst NotePage = memo(()=>{\r\n    useFetchUser({auth:true})    //first checking if the user is loggedin or not\r\n    const [edit_note, setEditNote] = useState<NoteInterface>({_id:'', title:'', content:'', bg:[]})\r\n    useEnableEditModal({_id:edit_note._id})\r\n\r\n\r\n    //custom hooks for saving notes with escape key\r\n    const {handleUpdateNote} = useNoteOperations()\r\n    useEventListener({eventType:'keyup', handler:()=>handleUpdateNote(edit_note, setEditNote), element:window})\r\n    // saving the note when user clicks outside of the edit modal or on body(edit_modal_wrapper)\r\n    useClickListener({eventType:'click', handler:()=>handleUpdateNote(edit_note, setEditNote), element:document.body})\r\n\r\n\r\n    const {handleChange} = useHandleChange()\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setEditNote)\r\n    }, [handleChange])\r\n\r\n\r\n    return(\r\n        <LeftRightWrapper styles={{height:'calc(100% - 5rem)', minHeight:'unset'}}>\r\n            <Wrapper  mode='create_note_container'>\r\n                <NoteInput />\r\n            </Wrapper>\r\n\r\n            <EditNoteCtx.Provider value={{note:edit_note, setEditNote, handleNoteChange}}>\r\n                <NoteOutput />\r\n                <NoteModal mode=\"edit_note\" />\r\n            </EditNoteCtx.Provider>\r\n        </LeftRightWrapper>\r\n    )\r\n})\r\nexport default NotePage","import { NoteInterface } from \"../types\"\r\n\r\nconst fetchNotes = async(url:string) =>{\r\n    try {\r\n        const res = await fetch(url)\r\n        const data:{notes?:NoteInterface[]} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default fetchNotes"],"names":["LeftRightWrapper","memo","children","styles","before_obj","StyledLeftRightWrapper","style","styled","Wrapper","page","mode","StyledEditModalWrapper","className","StyledNoteOutWrapper","StyledWrapper","props","css","Caption","text","StyledCaption","error","Styled","Form","no_bg","handleSubmit","animate","StyledForm","onSubmit","e","preventDefault","H3","handleClick","StyledH3","onClick","auth","setUser","useUserCtx","history","useHistory","useLayoutEffect","default","res","_id","v","email","push","handleChange","handler","old","target","name","value","ref_id","useRef","useEffect","current","enableEditModal","useCallback","modal","document","getElementById","p","parentElement","getBoundingClientRect","top","left","width","height","display","setTimeout","body","classList","add","placeholder","type","setSearch","StyledInput","onChange","hover_bg","StyledTextArea","useState","loader","setLoader","err","setError","refetch","setRefetch","fetchNotes","then","notes","handleDeleteNote","setEditNote","deleteNote","data","success","remove","title","content","bg","handleUpdateNote","note","updateNotes","handleNoteSubmit","setNote","createNote","useDeleteNote","useHandleChange","handleNoteChange","Button","Error","useEditNoteCtx","edit_note","dark_theme","useContext","ThemeCtx","StyledEditModal","id","background","StyledSectionHeader","alignItems","justifyContent","flexDirection","cls","Math","random","toString","slice","EditNoteCtx","StyledNote","overflow","console","log","useNoteFetch","user","search","useThemeStates","search_key","trim","toLowerCase","matched","includes","length","minHeight","Loader","size","map","index","eventType","element","window","handleRef","eventListener","contains","addEventListener","removeEventListener","hanlderRef","key","createContext","useFetchUser","useEnableEditModal","useNoteOperations","useEventListener","useClickListener","Provider","url","fetch","json"],"sourceRoot":""}