{"version":3,"file":"static/js/notepage.3c1a54a9.chunk.js","mappings":"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","sources":["Components/HigherComponents/LeftRightWrapper.tsx","Components/HigherComponents/Wrapper.tsx","Components/PureComponents/Caption.tsx","Components/PureComponents/Error.tsx","Components/PureComponents/Form.tsx","Components/PureComponents/H3.tsx","Hooks/useFetchUser.tsx","Hooks/useHandleChange.tsx","Hooks/useEnableEditModal.tsx","Components/HigherComponents/Input.tsx","Components/PureComponents/Textarea.tsx","Pages/Note/NotesHooks/useNoteOperations.tsx","Pages/Note/Note.input.section.tsx","Components/HigherComponents/OverlayMenu.tsx","Components/PureComponents/ActionLink.tsx","Components/Svg/Clr.tsx","Pages/Note/Note.modal.tsx","Components/HigherComponents/Section.header.tsx","Pages/Note/Dummy.tsx","Components/PureComponents/RandomSpan.tsx","Pages/Note/Note.tsx","Pages/Note/NotesHooks/useNoteFetch.tsx","Pages/Note/NotesHooks/useNoteClickEvents.tsx","Pages/Note/Note.output.section.tsx","Pages/Note/useClickListener.tsx","Pages/Note/useEvent.tsx","Pages/Note/NotesHooks/useEnableNoteMenu.tsx","utils/ColorArr.tsx","Components/HigherComponents/ColorList.tsx","Pages/Note/Note.page.tsx","modules/fetchNotes.ts","modules/updateNote.ts"],"sourcesContent":["import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\nconst LeftRightWrapper = memo(({children, styles, before_obj}:{children:ReactNode, styles?:CSSProperties, before_obj?:boolean})=>{\r\n    return(\r\n        <StyledLeftRightWrapper style={styles} before_obj={before_obj}>\r\n            {children}\r\n        </StyledLeftRightWrapper>\r\n    )\r\n})\r\nexport default LeftRightWrapper\r\n\r\nconst StyledLeftRightWrapper = styled.section<{before_obj?:boolean}>`\r\n    display:flex;\r\n    flex-direction:column;\r\n    flex-wrap:wrap;\r\n\r\n    @media (min-width:700px){\r\n        flex-direction:unset;\r\n    }\r\n`","import { memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from \"styled-components\";\r\n\r\n\r\n\r\nconst Wrapper = memo(({children, styles, page, mode, cls}:{\r\n    children:ReactNode, styles?:CSSProperties, page?:string\r\n    mode?:string,\r\n    cls?:string\r\n})=>{\r\n    if(mode === 'edit_note'){\r\n        return (\r\n            <StyledEditModalWrapper className={'edit_modal_wrapper '}>\r\n                {children}\r\n            </StyledEditModalWrapper>\r\n        )\r\n    }\r\n    if(page === 'note_output'){\r\n        return(\r\n            <StyledNoteOutWrapper style={styles}>\r\n                {children}\r\n            </StyledNoteOutWrapper>\r\n        )\r\n    }\r\n    return (\r\n        <StyledWrapper mode={mode} style={styles} className={(mode && mode)+\" \"+cls}>\r\n            {children}\r\n        </StyledWrapper>\r\n    )\r\n})\r\nexport default Wrapper\r\n\r\nconst StyledWrapper = styled.section<{mode?:string}>`\r\n    display:flex;\r\n    overflow:hidden;\r\n    position:relative;\r\n\r\n    ${(props)=>{\r\n        switch(props.mode){\r\n            case 'hero': return css`\r\n                width:100%;\r\n                align-items:center;\r\n                justify-content:center;\r\n                transform-origin:center;\r\n                flex-direction:column;\r\n                text-align:center;\r\n                padding:2rem;\r\n                /* animation the every children in hero section */\r\n                @keyframes animateLoad {\r\n                    0%{\r\n                        transform: rotate(15deg) translateY(300%) scale(0.9);\r\n                        opacity: 0;\r\n                    }\r\n                    70%{\r\n                        transform: rotate(0) translateY(-50%) scale(1.1);\r\n                    }\r\n                    100%{ }\r\n                }\r\n                @media (min-width:700px){\r\n                    width:50%;\r\n                }\r\n            `\r\n\r\n            case \"create_note_container\": return css`\r\n                padding:2rem;\r\n                justify-content:center;\r\n                margin-bottom:3rem;\r\n                button{\r\n                    width:100%;\r\n                }\r\n\r\n                @media (min-width:700px){\r\n                    margin-bottom:0rem;\r\n                        border-right:var(--border);\r\n                        height:100%;\r\n                        position:fixed;\r\n                        width:var(--width);\r\n                    }\r\n            `\r\n\r\n            case 'notes_container_wrapper': return css`\r\n                flex-direction:column;\r\n                @media (min-width:700px){\r\n                    position:relative;\r\n                    left:var(--width);\r\n                    width:calc(100% - var(--width));\r\n                }\r\n            `\r\n\r\n            case 'notes_container': return css`\r\n                justify-content:center;\r\n                gap:3rem;\r\n                padding:2rem;\r\n                flex-wrap:wrap;\r\n                @media (min-width:700px){\r\n                    justify-content:space-around;\r\n                }\r\n            `\r\n            default: return css`\r\n            `\r\n        }\r\n    }}\r\n\r\n    img{\r\n        display:flex;\r\n        /* width:32rem; */\r\n        /* height:35rem; */\r\n        width:clamp(23rem, 28rem, 28vw);\r\n        height:clamp(28rem, 32rem, 32vw);\r\n        transform:rotate(-20deg) scale(0.8);\r\n        transform-origin:center;\r\n    }\r\n`\r\n\r\n\r\nconst StyledNoteOutWrapper = styled.section`\r\n    display:flex;\r\n    justify-content:center;\r\n    gap:2rem;\r\n    flex-wrap:wrap;\r\n    padding:2rem;\r\n\r\n\r\n    @media (min-width:700px){\r\n        position:relative;\r\n        left:var(--width);\r\n        width:calc(100% - var(--width));\r\n        justify-content:space-around;\r\n    }\r\n`\r\n\r\nconst StyledEditModalWrapper = styled.section`\r\n    width:100%;\r\n    height:100%;\r\n    top:0 !important;\r\n    inset:0;\r\n    position:fixed;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n    background:var(--edit-modal-bg);\r\n    display:none;\r\n    border-radius:0.5rem;\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst Caption = memo(({text, styles}:{text?:string, styles?:CSSProperties | any})=>{\r\n    return(\r\n        <StyledCaption style={styles}>{text}</StyledCaption>\r\n    )\r\n})\r\nexport default Caption\r\n\r\nconst StyledCaption = styled.p`\r\n    font-size:clamp(1.8rem, 2rem ,2vw);\r\n    opacity:0.9;\r\n    white-space:pre-line;\r\n    word-break:break-all;\r\n    margin-top:1rem;\r\n    /* width:max-content; */\r\n`","import styled from \"styled-components\"\r\n\r\nconst ErrorDisplayer = (({error}:{error:string})=>{\r\n    return(\r\n        <Styled>{error}</Styled>\r\n    )\r\n})\r\nexport default ErrorDisplayer\r\n\r\nconst Styled = styled.p`\r\n    color:red;\r\n    font-size:clamp(1.5rem,1.6rem,1.6vw);\r\n`","import { FormEvent, memo, ReactNode } from \"react\";\r\nimport styled, { css, CSSProperties } from 'styled-components'\r\n\r\n\r\n\r\nconst Form = memo(({children, no_bg, mode, handleSubmit, styles, animate}:{\r\n    children:ReactNode, no_bg?:boolean, mode?:string, handleSubmit?: ((e: FormEvent<HTMLFormElement>) => Promise<void>) | undefined\r\n    styles?:CSSProperties,\r\n    animate?:boolean\r\n})=>{\r\n\r\n    return(\r\n        <StyledForm onSubmit={(e)=>{\r\n                e.preventDefault()\r\n                handleSubmit && handleSubmit(e)\r\n            }}\r\n            style={styles}\r\n            no_bg={no_bg}\r\n            mode={mode}   //for margin-top\r\n            animate={animate}\r\n        >\r\n            {children}\r\n        </StyledForm>\r\n    )\r\n})\r\nexport default Form\r\n\r\n\r\n\r\nconst StyledForm = styled.form<{no_bg?:boolean, mode?:string, animate?:boolean}>`\r\n    height:45rem;\r\n    width:90%;\r\n    display:flex;\r\n    align-items:center;\r\n    flex-direction:column;\r\n    max-width:35rem;\r\n    background:var(--form-bg);\r\n\r\n    ${({mode})=>{\r\n        if(mode === 'login' || mode === 'register'){\r\n            return css`\r\n                margin: auto;\r\n                max-width:40rem;\r\n                margin-top:5rem;\r\n                border-radius:0.5rem;\r\n                box-shadow:0 0.3rem 0.3rem rgba(0,0,0,0.3);\r\n                padding:0 2rem 2rem 2rem;\r\n                //heading of the form\r\n                >h3{\r\n                    padding:1rem 0 2rem 0;\r\n                }\r\n                //containers of input and label\r\n                .div{\r\n                    padding:0 2rem;\r\n                    margin-top:2rem;\r\n                    width:100%;\r\n                    display:flex;\r\n                    justify-content:space-between;\r\n                    align-items:center;\r\n                }\r\n            `\r\n        }\r\n        if(mode === 'create_note'){\r\n            return css`\r\n                height:25rem;\r\n                @media (min-width:700px){\r\n                    height:50rem;\r\n                }\r\n            `\r\n        }\r\n    }}\r\n    ${({no_bg})=>{\r\n       if(no_bg === true) {\r\n           return css`\r\n            background:inherit;\r\n        `\r\n        }\r\n    }}\r\n    button{\r\n        margin-top:auto   //button will be at the bottom of the form\r\n    }\r\n\r\n    /* animate flag */\r\n    ${({animate})=>{\r\n        if(animate){\r\n            return css`\r\n                animation:animate_form 0.4s ease-in forwards;\r\n            `\r\n        }\r\n    }}\r\n\r\n    @keyframes animate_form{\r\n        0%{\r\n            opacity:0;\r\n            transform:translateX(-100%);\r\n        }\r\n        50%{\r\n            transform:translateX(50%);\r\n        }\r\n    }\r\n\r\n`","import { memo } from \"react\";\r\nimport styled, { CSSProperties } from \"styled-components\";\r\n\r\nconst H3 = memo(({text, styles, handleClick, cls}:{text:string, styles?:CSSProperties, handleClick?:() =>void, cls?:string})=>{\r\n    return(\r\n        <StyledH3 style={styles} onClick={handleClick} className={cls}>{text}</StyledH3>\r\n    )\r\n})\r\nexport default H3\r\n\r\nconst StyledH3 = styled.h3<{styles?:CSSProperties}>`\r\n    font-size:2.2rem;\r\n    font-weight:500;\r\n`","import { useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useUserCtx } from \"../Context/UserContext\"\r\n\r\nconst useFetchUser = ({auth = false} : {auth?:boolean}) =>{\r\n    const {setUser} = useUserCtx()\r\n    const history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const res = await (await import(\"../modules/fetchUser\")).default()\r\n            if(auth && res?._id){\r\n                //for protecting the note page being accessed by logging in\r\n                setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            }else{\r\n                // for home page\r\n                res?._id && setUser(v=>({...v,_id:res._id,email:res?.email}))\r\n            }\r\n            auth && !res?._id && history.push('/login')\r\n        })()\r\n    },[setUser, history, auth])\r\n}\r\nexport default useFetchUser","import { ChangeEvent } from \"react\"\r\n\r\nconst useHandleChange = () =>{\r\n    const handleChange = (e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>, handler:any)=>{\r\n        handler((old:any)=>({\r\n            ...old,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    }\r\n    return {handleChange}\r\n}\r\nexport default useHandleChange","import { useCallback, useEffect, useRef } from \"react\"\r\n\r\nconst useEnableEditModal = ({_id}:{_id:string}) => {\r\n    const ref_id = useRef(_id)\r\n    useEffect(()=>{\r\n        ref_id.current = _id\r\n    }, [_id])\r\n\r\n    const enableEditModal = useCallback((_id:string) =>{\r\n            const modal = document.getElementById('modal') as HTMLDivElement\r\n            const p = modal.parentElement as any\r\n            const element = document.getElementById(_id) as HTMLDivElement\r\n            const {top, left, width, height} = element.getBoundingClientRect()\r\n            modal.style.top = top+'px'\r\n            modal.style.left = left+'px'\r\n            modal.style.width = width+'px'\r\n            modal.style.height = height+'px'\r\n            p.style.display='flex'\r\n            modal.style.display='flex'\r\n            setTimeout(()=> document.body.classList.add('edit_mode'),10)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        //when the id changes then if it has value then enable editModal\r\n        _id && enableEditModal(ref_id.current)\r\n    },[_id, enableEditModal])\r\n\r\n    return {enableEditModal}\r\n}\r\nexport default useEnableEditModal","import { ChangeEvent, memo } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport  { useUserCtx } from \"../../Context/UserContext\";\r\n\r\n\r\n\r\nconst Input = memo(({ placeholder, name, value, handleChange, mode, type}: InputProps)=>{\r\n    const {setSearch} = useUserCtx()\r\n\r\n    return <StyledInput\r\n        type={type === 'search' ? 'search' : 'text'} name={name} value={value}\r\n        mode={mode}\r\n        onChange={(e)=>{\r\n            if(name === 'search'){\r\n                setSearch(e.target.value)\r\n            }else{\r\n                handleChange && handleChange(e,)\r\n            }\r\n        }}\r\n        placeholder={placeholder}\r\n    />\r\n})\r\nexport default Input\r\n\r\n\r\ntype InputProps = {\r\n    type?:string\r\n    mode?:string\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name:string\r\n}\r\n\r\n\r\n\r\nconst StyledInput = styled.input<{mode?:string}>`\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0 1rem;\r\n    height:3.5rem;\r\n    background:var(--input-bg);\r\n    outline:none;\r\n\r\n    ${({mode})=>{\r\n        switch (mode){\r\n            case 'edit_note': return css`\r\n                background:inherit;\r\n                `\r\n            case 'note_title': return css`\r\n                width:100%;\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n                `\r\n            default : return css`\r\n            &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n    }}}\r\n    border-radius:0.3rem;\r\n    outline:var(--border);\r\n`\r\n\r\n","import { ChangeEvent } from \"react\"\r\nimport styled, { css, CSSProperties } from \"styled-components\"\r\n\r\nconst Textarea = ({value, handleChange, placeholder, name, styles, hover_bg}:TextareaProps)=>{\r\n    return(\r\n        <StyledTextArea\r\n            name={name}\r\n            value={value}\r\n            placeholder={placeholder}\r\n            style={styles}\r\n            hover_bg={hover_bg}\r\n            onChange={(e)=>handleChange && handleChange(e)}\r\n        />\r\n    )\r\n}\r\nexport default Textarea\r\n\r\nconst StyledTextArea = styled.textarea<{hover_bg?:boolean}>`\r\n    width:100%;\r\n    height:15rem;\r\n    @media (min-width:700px){\r\n        flex:1;\r\n    }\r\n    margin-bottom:2rem;\r\n    resize:none;\r\n    margin-top:1rem;\r\n    font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n    border:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--input-bg);\r\n    outline:var(--border);\r\n    border-radius:0.3rem;\r\n    ${({hover_bg})=>{\r\n        if(hover_bg){\r\n            return css`\r\n                &:hover{  background: var(--input-hover-bg);  }\r\n            `\r\n        }\r\n    }}\r\n\r\n`\r\n\r\n\r\n\r\ntype TextareaProps = {\r\n    value?:string\r\n    handleChange?:(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder?:string\r\n    name?:string,\r\n    styles?:CSSProperties,\r\n    hover_bg?:boolean\r\n}","import { ChangeEvent, Dispatch, FormEvent, SetStateAction, useCallback, useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\nimport fetchNotes from '../../../modules/fetchNotes'\r\nimport { NoteInterface } from '../../../types'\r\nimport useHandleChange from '../../../Hooks/useHandleChange'\r\n\r\nconst useNoteOperations = () => {\r\n    const [note, setNote] = useState({title:'', content:''})\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(false)\r\n    const [error, setError] = useState({err:''})\r\n    const [refetch, setRefetch] = useState(false)\r\n\r\n    const {handleChange} = useHandleChange()\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setNote)\r\n    }, [handleChange])\r\n\r\n\r\n    useEffect(()=>{\r\n        if(refetch){\r\n            fetchNotes('/api/v1/user/notes').then(res=>{\r\n                res?.notes && setUser(old=>({...old, notes:res.notes}))\r\n            })\r\n            setRefetch(false)\r\n        }\r\n    }, [refetch, setUser])\r\n\r\n    useEffect(()=>{\r\n        let clear:any\r\n        error.err && (clear =  setTimeout(()=>setError({err:''}), 3000))\r\n        return(()=>clearInterval(clear))\r\n    },[error])\r\n\r\n    // deleting note\r\n    const handleDeleteNote = useCallback(async(_id:string, setEditNote?:Dispatch<SetStateAction<{title:'', content:'', _id:'', bg:[]}>>) =>{\r\n        setLoader(true)     //displaying the loader while deleting the note\r\n        const {default: deleteNote} = await import('../../../modules/deleteNote')\r\n        const data = await deleteNote(`/api/v1/user/notes/${_id}`)\r\n        if(data?.success){\r\n            setRefetch(true)\r\n        }\r\n\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n        setLoader(false)\r\n    }, [])\r\n\r\n    // updating note\r\n    const handleUpdateNote = useCallback(async(note:NoteInterface, setEditNote?:Dispatch<SetStateAction<NoteInterface>>)=>{\r\n        const modal = document.getElementById('modal') as HTMLDivElement\r\n        const p = modal.parentElement as any\r\n        document.body.classList.remove('edit_mode')\r\n        setTimeout(()=>{\r\n            p.style.display='none'\r\n            modal.style.display='none'\r\n            const div_element = document.getElementById(note._id) as  HTMLDivElement\r\n            div_element.style.opacity = '1' //making the note appear again after updatiing\r\n            setEditNote && setEditNote({title:'', content:'', _id:'',bg:[]})\r\n        },310)\r\n        const {default:updateNotes} = await import('../../../modules/updateNote')\r\n        const data = await updateNotes(`/api/v1/user/notes/${note._id}`,note)\r\n        data?.success && setRefetch(true)\r\n    }, [])\r\n\r\n    // creating note\r\n    const handleNoteSubmit = useCallback(async(e:FormEvent<HTMLFormElement>)=>{\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n        setLoader(true)\r\n        const {default:createNote} = await import('../../../modules/createNote')\r\n        const data = await createNote(note)\r\n        if(data?.error) setError({err:data.error})\r\n        if(data?.success){\r\n            setRefetch(true)\r\n            setNote({title:'', content:''})\r\n        }\r\n        setLoader(false)\r\n    },[note])\r\n\r\n    return {loader, setLoader, handleDeleteNote, handleUpdateNote, handleNoteSubmit, error, handleNoteChange, note}\r\n}\r\nexport default useNoteOperations","import { memo } from \"react\"\r\nimport Input from \"../../Components/HigherComponents/Input\"\r\nimport Button from \"../../Components/PureComponents/Button\"\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\"\r\nimport Form from \"../../Components/PureComponents/Form\"\r\nimport Textarea from \"../../Components/PureComponents/Textarea\"\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\"\r\n\r\n\r\n\r\nconst NoteInput = memo(()=>{\r\n    const {loader, error, handleNoteSubmit, handleNoteChange, note} = useNoteOperations()\r\n\r\n\r\n    return(\r\n        <Form no_bg={true} handleSubmit={handleNoteSubmit} mode='create_note'>\r\n            <Input type='title' placeholder='note title...' name='title' value={note.title} handleChange={handleNoteChange} mode='note_title'/>\r\n\r\n            <Textarea name='content'  value={note.content} handleChange={handleNoteChange} placeholder=\"type your notes....\"   hover_bg={true}/>\r\n\r\n            { error.err &&  <ErrorDisplayer error={error.err}/>}\r\n            <Button text='create a new note' mode='create_note_btn' loader={loader}/>\r\n        </Form>\r\n    )\r\n})\r\nexport default NoteInput\r\n","import { ReactNode } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst OverlayMenu = ({children}:{children:ReactNode})=> {\r\n    return(\r\n        <StyledMenu className=\"overlay-menu\">\r\n            {children}\r\n        </StyledMenu>\r\n    )\r\n}\r\nexport default OverlayMenu\r\n\r\n\r\n\r\nconst StyledMenu = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    flex-direction:row;\r\n`","import { Children, cloneElement, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Caption from \"./Caption\"\r\n\r\nconst ActionLink = ({children, tooltip_text, handleClick}:{children:JSX.Element | JSX.Element[], tooltip_text?:string, handleClick?:any}) =>{\r\n\r\n    return(\r\n        <StyledLink onClick={handleClick}>\r\n            {children}\r\n            {/* { tooltip_text && <Caption text={tooltip_text} styles={{background:'var(--tooltip-bg)', padding:'0.5rem', borderRadius:'0.3rem'}}/>  } */}\r\n        </StyledLink>\r\n    )\r\n}\r\nexport default ActionLink\r\n\r\n\r\nconst StyledLink = styled.div<{tooltip_text?:string}>`\r\n    position:relative;\r\n    overflow:none;\r\n    cursor: pointer;\r\n\r\n    >p{\r\n        /* display:none; */\r\n        position:absolute;\r\n        top:100%;\r\n        pointer-events:none;\r\n        opacity:0;\r\n        pointer-events:none;\r\n        font-size:clamp(1.3rem, 1.4rem, 1.4vw);\r\n    }\r\n\r\n    &:hover{\r\n        >p{        //displaying tooltip text on hover\r\n            animation:show 3s ease both;\r\n        }\r\n    }\r\n    .clr-list{\r\n        opacity:0;\r\n        pointer-events:none;\r\n    }\r\n\r\n    &:focus-within, &:focus{\r\n        .clr-list{\r\n            opacity:1;\r\n            pointer-events:all;\r\n        }\r\n    }\r\n\r\n`","import { useThemeStates } from \"../../Context/UserContext\"\r\n\r\nconst Clr = () =>{\r\n    const {dark_theme} = useThemeStates()\r\n\r\n    return (\r\n        <div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill={dark_theme ? 'hsl(0, 0%, 80%)' : 'hsl(0, 0%, 10%)'}>\r\n                <path d=\"M12 22C6.49 22 2 17.51 2 12S6.49 2 12 2s10 4.04 10 9c0 3.31-2.69 6-6 6h-1.77c-.28 0-.5.22-.5.5 0 .12.05.23.13.33.41.47.64 1.06.64 1.67A2.5 2.5 0 0 1 12 22zm0-18c-4.41 0-8 3.59-8 8s3.59 8 8 8c.28 0 .5-.22.5-.5a.54.54 0 0 0-.14-.35c-.41-.46-.63-1.05-.63-1.65a2.5 2.5 0 0 1 2.5-2.5H16c2.21 0 4-1.79 4-4 0-3.86-3.59-7-8-7z\"/>\r\n                <circle cx=\"6.5\" cy=\"11.5\" r=\"1.5\"/>\r\n                <circle cx=\"9.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"14.5\" cy=\"7.5\" r=\"1.5\"/>\r\n                <circle cx=\"17.5\" cy=\"11.5\" r=\"1.5\"/>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\nexport default Clr","import {  memo, MouseEvent, ReactNode, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/HigherComponents/Input\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport Textarea from \"../../Components/PureComponents/Textarea\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport { ThemeCtx } from \"../../Context/UserContext\";\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\";\r\nimport { useEditNoteCtx } from \"./Note.page\";\r\n\r\n\r\n\r\nconst NoteModal = memo(({ mode }:{\r\n    children?:ReactNode\r\n    mode:string\r\n})=>{\r\n    const {note:edit_note, handleNoteChange} = useEditNoteCtx()\r\n    const {dark_theme} = useContext(ThemeCtx)\r\n    const {loader, handleDeleteNote} = useNoteOperations()\r\n    const {setMenuDetails} = useEditNoteCtx()\r\n\r\n\r\n    if(mode === 'edit_note'){\r\n      return (\r\n        <Wrapper mode={mode}>\r\n\r\n            <StyledEditModal  id='modal' className='edit_modal' style={{background:dark_theme ? edit_note.bg[1] : edit_note.bg[0], border:'var(--border)'}} >\r\n                <Input  name='title' value={edit_note.title} handleChange={handleNoteChange} mode=\"edit_note\" />\r\n                <Textarea  name='content' value={edit_note.content} handleChange={handleNoteChange} styles={{background:'inherit'}}/>\r\n                <OverlayMenu>\r\n                        <ActionLink handleClick={(e:MouseEvent<HTMLDivElement , MouseEvent>)=>{setMenuDetails && setMenuDetails(e, edit_note)}}><Clr/></ActionLink>\r\n                        <Button   mode='delete_note_btn' handleClick={()=>handleDeleteNote(edit_note._id)} loader={loader}/>\r\n                    </OverlayMenu>\r\n            </StyledEditModal>\r\n\r\n        </Wrapper>\r\n      )\r\n    }\r\n    return(\r\n        <></>\r\n    )\r\n})\r\nexport default NoteModal\r\n\r\nconst StyledEditModal = styled.div`\r\n    height:40rem;\r\n    width:100%;\r\n    max-width:60%;\r\n    border-radius:0.5rem;\r\n    transition:all 0.3s linear;\r\n    background:var(--modal-bg);\r\n    position:fixed;\r\n    overflow:hidden;\r\n    box-shadow:0 0.3rem 1rem rgba(0, 0, 0, 0.4);\r\n    flex-direction:column;\r\n    border:var(--border);\r\n\r\n    input{\r\n        border-bottom:var(--border);\r\n    }\r\n\r\n    textarea{\r\n        flex:1;\r\n        border:none;\r\n        outline:none;\r\n    }\r\n\r\n    input,textarea{\r\n        margin-top:0;\r\n        /* border:none !important; */\r\n        /* outline:none; */\r\n        /* border-radius:0; */\r\n        /* font-size:clamp(1.6rem,1.7rem, 1.7vw); */\r\n        /* background:white; */\r\n        &:focus{\r\n            background:inherit;\r\n        }\r\n    }\r\n    input{\r\n        text-align:center;\r\n        /* font-weight:500; */\r\n    }\r\n\r\n    .btns{\r\n        margin-top:auto;\r\n        display:flex;\r\n        justify-content:space-between;\r\n        flex-direction:row;\r\n        padding:2rem;\r\n    }\r\n    .save_btn{\r\n        background:var(--save-btn-bg);\r\n    }\r\n    .delete_btn{\r\n        background:var(--delete-btn-bg);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SectionHeader = memo(({children})=>{\r\n    return(\r\n        <StyledSectionHeader>\r\n            {children}\r\n        </StyledSectionHeader>\r\n    )\r\n})\r\nexport default SectionHeader\r\n\r\nconst StyledSectionHeader = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    padding:1rem;\r\n    border-bottom:var(--border);\r\n`","import {ReactNode} from 'react'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\n\r\nconst Dummy = ({children}:{children:ReactNode}) =>{\r\n    return(\r\n       <Wrapper styles={{height:'90vh',display:'flex', alignItems:'center',justifyContent:'center', flexDirection:'column'}}>\r\n        { children }\r\n       </Wrapper>\r\n    )\r\n}\r\nexport default Dummy","import {memo} from 'react'\r\n\r\n\r\nconst RandomSpan = memo(({cls}:{cls?:string})=>{\r\n    const background = `#${Math.random().toString(16).slice(2,8)}`\r\n    return(\r\n        <span className={cls} style={{background}}></span>\r\n    )\r\n})\r\nexport default RandomSpan","import { CSSProperties, memo, MouseEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OverlayMenu from \"../../Components/HigherComponents/OverlayMenu\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport H3 from \"../../Components/PureComponents/H3\";\r\nimport RandomSpan from \"../../Components/PureComponents/RandomSpan\";\r\nimport { NoteInterface } from \"../../types\";\r\nimport {  useEditNoteCtx } from \"./Note.page\";\r\nimport Clr from \"../../Components/Svg/Clr\";\r\nimport ActionLink from \"../../Components/PureComponents/ActionLink\";\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\";\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\";\r\n\r\n\r\nconst Note = memo(({note, styles}:{note:NoteInterface, styles?:CSSProperties | any})=>{\r\n    const {setMenuDetails} = useEditNoteCtx()\r\n    const {loader, handleDeleteNote} = useNoteOperations()\r\n    // const [opacity, setOpacity] = useState(1)      //opacity for each note. when edit-modal is opened then set it to 0\r\n\r\n    // const handleClick = useCallback(() => {\r\n    //     setEditNote(note)\r\n    //     setOpacity(0)\r\n    // }, [setEditNote, note])\r\n\r\n    // when the edit_modal closed then show the note again\r\n    // useEffect(()=>{\r\n    //     !edit_note._id && setOpacity(1)\r\n    // }, [edit_note])\r\n\r\n\r\n\r\n    return(\r\n        <StyledNote id={note._id}\r\n            style={{...styles }}\r\n            className=\"note\"\r\n        >\r\n            <Wrapper styles={{padding:'0.5rem',borderBottom:'var(--border)'}} >\r\n                <RandomSpan cls='random_span'/>\r\n                {/* <H3 text={note.title} styles={{width:'100%'}} handleClick={handleClick} cls='note-title'/> */}\r\n                <H3 text={note.title} styles={{width:'100%'}} cls='note-title'/>\r\n            </Wrapper>\r\n\r\n            <Wrapper styles={{overflow:'hidden',flex:'1', padding:'0.5rem'}} cls='note-content'>\r\n                {/* <p onClick={handleClick} className='note-content'>{note.content}</p> */}\r\n                <p className='note-content'>{note.content}</p>\r\n            </Wrapper>\r\n\r\n            <OverlayMenu>\r\n                <ActionLink handleClick={(e:MouseEvent<HTMLDivElement | MouseEvent>)=>{setMenuDetails && setMenuDetails(e, note)}}><Clr/></ActionLink>\r\n                <Button  mode='delete_note_btn' handleClick={()=>handleDeleteNote(note._id)} loader={loader}/>\r\n            </OverlayMenu>\r\n        </StyledNote>\r\n    )\r\n})\r\nexport default Note\r\n\r\n\r\n\r\nconst StyledNote = styled.div`\r\n    width:100%;\r\n    max-width:40rem;\r\n    height:20rem;\r\n    border-radius:1rem;\r\n    box-shadow:0 0.3rem 0.5rem rgba(0,0,0,0.1);\r\n    position:relative;\r\n    border:var(--note-border);\r\n    animation:animate_note calc(0.4s  * var(--note-order)) ease-in;\r\n    display:flex;\r\n    flex-direction:column;\r\n\r\n\r\n    /* title and content */\r\n    h3,p{\r\n        font-size:clamp(1.6rem,1.7rem,1.7vw);\r\n        /* padding:0.5rem; */\r\n    }\r\n    h3{\r\n        /* border-bottom:var(--border); */\r\n        font-weight:400;\r\n        text-align:center;\r\n        width:100%;\r\n    }\r\n    p{\r\n        opacity:0.8;\r\n        white-space:pre-line;\r\n        word-break:break-all;\r\n        width:100%;\r\n    }\r\n\r\n    /* random span at the left top of the note */\r\n    span.random_span{\r\n        position:absolute;\r\n        top:0;left:0;\r\n        width:5rem;\r\n        height:5rem;\r\n        border-radius:50%;\r\n        transform:translate(-50%, -50%);\r\n    }\r\n\r\n    @media (max-width:700px){\r\n        .overlay-menu{\r\n            display:none;\r\n        }\r\n    }\r\n    @media (min-width:700px){\r\n        div.overlay-menu {\r\n            height:4rem;\r\n            width:100%;\r\n            display:flex;\r\n            opacity:0;\r\n            pointer-events:none;\r\n        }\r\n        &:hover{\r\n            div.overlay-menu{\r\n                opacity:1;\r\n                pointer-events:all;\r\n            }\r\n        }\r\n    }\r\n\r\n    @keyframes animate_note{\r\n        0%{\r\n            transform: scale(0.8);\r\n            animation-timing-function: ease;\r\n            /* background:var(--secondary-clr); */\r\n        }50%{\r\n            animation-timing-function: ease-in;\r\n            opacity: 1;\r\n            transform: scale(1.1);\r\n        }100%{\r\n            /* animation-timing-function: ease-out;\r\n            opacity: 1;\r\n            transform: scale(1); */\r\n        }\r\n}\r\n`","import { useEffect, useState } from 'react'\r\nimport { useUserCtx } from '../../../Context/UserContext'\r\n\r\nconst useNoteFetch = () =>{\r\n    const {setUser} = useUserCtx()\r\n    const [loader, setLoader] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        (async()=>{\r\n            try {\r\n                const data = await (await import('../../../modules/fetchNotes')).default('/api/v1/user/notes')\r\n                if(data?.notes) setUser(old=>({...old, notes:data.notes}))\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoader(false)\r\n        })()\r\n    },[setUser])\r\n    return {loader}\r\n}\r\nexport default useNoteFetch","import { useCallback, useEffect } from \"react\"\r\nimport { useUserCtx } from \"../../../Context/UserContext\"\r\n// import { NoteInterface } from \"../../../types\"\r\nimport { useEditNoteCtx } from \"../Note.page\"\r\n\r\nconst useNoteClickEvents = () => {\r\n    const {user} = useUserCtx()\r\n    const { setEditNote } = useEditNoteCtx()\r\n\r\n    // function for checking the if the clicked element is note-title or note-content\r\n    // if true then set the edit_note for edit.modal\r\n    const listenClickEnv = useCallback((e:any) =>{\r\n        const matched = e.target.classList.contains('note-title') || e.target.classList.contains('note-content')\r\n        if(matched){\r\n            const parentElement = e.target.parentElement.parentElement\r\n            parentElement.style.opacity = '0';       //making the note disappear again after opening the note.edit.modal\r\n            const id = parentElement.id   //getting the id of the note\r\n            const note = user.notes?.filter(each_note=> each_note._id === id)       //getting the exact note from user.note and setting it the edit.modal for editing\r\n            note && setEditNote(note[0])\r\n        }\r\n    }, [user.notes, setEditNote])\r\n\r\n\r\n    useEffect(()=>{\r\n        const timer = setTimeout(()=> document.body.addEventListener('click', listenClickEnv, false), 1000)\r\n        return () => {\r\n            clearTimeout(timer)\r\n            document.body.removeEventListener('click', listenClickEnv, false)\r\n        }\r\n    }, [user.notes, listenClickEnv])\r\n    return {listenClickEnv}\r\n}\r\nexport default useNoteClickEvents","import { memo } from 'react'\r\nimport Input from '../../Components/HigherComponents/Input'\r\nimport SectionHeader from '../../Components/HigherComponents/Section.header'\r\nimport Wrapper from '../../Components/HigherComponents/Wrapper'\r\nimport Caption from '../../Components/PureComponents/Caption'\r\nimport H3 from '../../Components/PureComponents/H3'\r\nimport { useThemeStates, useUserCtx } from '../../Context/UserContext'\r\nimport { NoteInterface } from '../../types'\r\nimport Dummy from './Dummy'\r\nimport Note from './Note'\r\nimport useNoteFetch from \"./NotesHooks/useNoteFetch\";\r\nimport Loader from '../../Components/PureComponents/Loader'\r\nimport { useCallback } from 'react'\r\nimport useNoteClickEvents from './NotesHooks/useNoteClickEvents'\r\n// import { useEditNoteCtx } from './Note.page'\r\n\r\n\r\n\r\nconst NoteOutput = memo(()=>{\r\n    const {loader} = useNoteFetch()     //fetching the notes of logged user\r\n    const {user, search} = useUserCtx()\r\n    const {dark_theme} = useThemeStates()\r\n    const search_key = search?.trim().toLowerCase()\r\n    const matched = useCallback((note : NoteInterface) => note.title.trim().toLowerCase().includes(search_key)  || note.content.trim().toLowerCase().includes(search_key),[search_key])\r\n\r\n\r\n    // using event delegation for clicking event for each note\r\n    // if we add events in every note then it will take more resource\r\n    // so add events to the parent element of the each note\r\n    useNoteClickEvents()\r\n\r\n\r\n    return(\r\n        <Wrapper mode='notes_container_wrapper'>\r\n            {/* for searching notes */}\r\n            {\r\n                user.notes?.length !== 0  ? (<SectionHeader>\r\n                                                <H3 text='Your notes'/>\r\n                                                <Input type='search' name='search' placeholder='search your notes...'/>\r\n                                            </SectionHeader>)\r\n                                        :\r\n                                        <Dummy>\r\n                                            <H3 text=\"Haven't created any notes?\" />\r\n                                            <Caption text=\"Then let's get started. \"/>\r\n                                        </Dummy>\r\n                }\r\n\r\n            {/* displaying the notes in container */}\r\n           {user.notes?.length !== 0 && <Wrapper mode='notes_container' styles={{minHeight:'calc(100vh - 2 * var(--header-height))'}}>\r\n                {\r\n                    loader ?\r\n                        <Loader size='big' />\r\n                        :\r\n                        user.notes?.map((note, index)=><Note key={note._id} note={note}  styles={{'--note-order':index+1, background:dark_theme ? note.bg[1] : note.bg[0], display:matched(note) ? 'flex' : 'none'}}/>) }\r\n            </Wrapper>}\r\n        </Wrapper>\r\n    )\r\n})\r\nexport default NoteOutput","import { useEffect, useRef } from \"react\"\r\n\r\nconst useClickListener = ({eventType, handler, element = window}: ClickHookProps) =>{\r\n    const handleRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n            if(e.target.classList.contains('edit_modal_wrapper') && document.body.classList.contains('edit_mode')){\r\n                handleRef.current()\r\n            }\r\n        }\r\n       element?.addEventListener(eventType, eventListener, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n        }\r\n    }, [eventType])\r\n}\r\nexport default useClickListener\r\n\r\ntype ClickHookProps = {\r\n    eventType:any, handler:any, element?:any\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\n//this is escape key event\r\nconst useEventListener = ({eventType, handler, element}: EventProps) =>{\r\n    const hanlderRef = useRef(handler)\r\n\r\n    useEffect(()=>{\r\n        hanlderRef.current = handler\r\n    },[handler])\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => e.key === 'Escape' && hanlderRef.current()\r\n        element?.addEventListener(eventType, eventListener)\r\n        return () => element?.removeEventListener(eventType, eventListener)\r\n    }, [eventType, element])\r\n}\r\nexport default useEventListener\r\n\r\ntype EventProps = {eventType:any, handler:any, element?:any}","import { MouseEvent, useCallback, useEffect, useState, useRef, KeyboardEvent } from 'react'\r\nimport { NoteInterface } from '../../../types'\r\n\r\n\r\nconst useEnableMenu = ({element, element2=window, handler, eventType, eventType2 = 'keyup'} : HookProps) =>{\r\n\r\n    const [menu, setMenu] = useState<MenuState>({\r\n        enable:false,\r\n        item:{ title:'',content:'',bg:[],_id:'' },\r\n        position:{ top : '', left: '' }\r\n    })\r\n\r\n\r\n    const setMenuDetails = useCallback((e:MouseEvent<HTMLDivElement, MouseEvent>, item:NoteInterface)=>{\r\n        const {top, left} = e.currentTarget.getBoundingClientRect()\r\n        setMenu(({enable:true, position:{top:top+20+'px', left:left+20+'px'}, item}))\r\n        element.classList.add('show_overlay')\r\n    },[])\r\n\r\n    const handleRef = useRef(handler)\r\n    useEffect(()=>{\r\n        handleRef.current = handler\r\n    }, [handler])\r\n\r\n\r\n    useEffect(()=>{\r\n        const eventListener = (e:any) => {\r\n                if(e.target.classList.contains('overlay')){\r\n                    handleRef.current()\r\n                    element.classList.remove('show_overlay')\r\n                }\r\n        }\r\n        const eventListener2 = (e:KeyboardEvent) => {\r\n                if(e.key === 'Escape'){\r\n                    handleRef.current()\r\n                    element.classList.remove('show_overlay')\r\n                }\r\n        }\r\n        // menu.enable && addEventListener()  old code\r\n        menu.enable && element?.addEventListener(eventType, eventListener, false)\r\n        menu.enable && element2?.addEventListener(eventType2, eventListener2, false)\r\n        !menu.enable && element?.removeEventListener(eventType, eventListener, false)\r\n        !menu.enable && element2?.removeEventListener(eventType2, eventListener2, false)\r\n        return () => {\r\n            element?.removeEventListener(eventType, eventListener, false)\r\n            element2?.removeEventListener(eventType2, eventListener2, false)\r\n        }\r\n    }, [eventType, menu.enable])\r\n\r\n    return {setMenu, menu, setMenuDetails}\r\n}\r\nexport default useEnableMenu\r\n\r\n\r\ntype HookProps = {\r\n    element:any, element2?:any, handler:any, eventType:string, eventType2?:string\r\n}\r\ntype MenuState = {\r\n    enable:boolean, item:NoteInterface, position:{top:string, left:string}\r\n}","const ColorsArr:any = [\r\n   {white:['#fff', '#000']},\r\n   {green:['hsl(146, 85%, 75%)','hsl(146, 85%, 15%)']},\r\n   {yellow:['hsl(58, 85%, 75%)','hsl(58, 85%, 15%)']},\r\n   {purple:['hsl(276, 85%, 75%)','hsl(276, 85%, 15%)']},\r\n   {red:['hsl(348, 85%, 75%)','hsl(348, 85%, 15%)']}\r\n]\r\n\r\nexport default ColorsArr","import { CSSProperties, memo, useCallback } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport ColorsArr from \"../../utils/ColorArr\"\r\nimport { useThemeStates, useUserCtx } from \"../../Context/UserContext\"\r\nimport updateNote from \"../../modules/updateNote\"\r\nimport fetchNotes from \"../../modules/fetchNotes\"\r\nimport { useEditNoteCtx } from \"../../Pages/Note/Note.page\"\r\n\r\n\r\nconst ColorList = memo(({ styles }:{ styles?:CSSProperties})=>{\r\n   const {setUser} = useUserCtx()\r\n   const {menu, setEditNote, setMenu} = useEditNoteCtx()\r\n\r\n   const handleClick = useCallback(async(e, color:string, clr) =>{\r\n      e.stopPropagation()\r\n      if(!menu?.item) return         //if note edit mode enabled then return\r\n      if(menu.item.bg.includes(color)) return      //if user sets the color which is already setted then return\r\n\r\n      updateNote(`/api/v1/user/notes/${menu?.item._id}`, {...menu.item, bg:clr[Object.keys(clr)[0]]})\r\n      const data = await fetchNotes('/api/v1/user/notes')\r\n      if(!data?.notes) return\r\n\r\n      setUser(v=>({...v, notes:data.notes}))    //setting the updated notes from the server to the client\r\n      setEditNote((v) => ({...v, bg:clr[Object.keys(clr)[0]]}))     //setting the updated color to the edit modal as well on live\r\n      setMenu && setMenu(v=>({...v, item:{...v.item, bg:clr[Object.keys(clr)[0]]}}))       //also updating the menu state\r\n   }, [menu, setUser, setEditNote, setMenu])\r\n\r\n\r\n   return(\r\n      <StyledColorList className=\"clr-list\" style={styles}>\r\n         { ColorsArr.map((clr:any, index:any)=><ColorBox key={index}  clr={clr} handleClick={handleClick}/>) }\r\n      </StyledColorList>\r\n   )\r\n})\r\nexport default ColorList\r\n\r\n\r\nconst ColorBox = memo(({clr, handleClick}:{clr:any, handleClick: (e: any, color:string, clr:any) => Promise<void>})=>{\r\n   // const clr_name = Object.keys(clr)\r\n   const {dark_theme} = useThemeStates()\r\n   const color = clr[Object.keys(clr)[0]][dark_theme ? 1 : 0]\r\n   const handleColorSubmit = useCallback((e:any) => handleClick(e, color, clr), [clr, color, handleClick])\r\n\r\n\r\n   return <div style={{background:color,width:'3rem',height:'3rem',borderRadius:'50%'}}  onClick={handleColorSubmit}></div>\r\n})\r\n\r\n\r\n\r\nconst StyledColorList = styled.div`\r\n   display:flex;\r\n   position:fixed;\r\n   flex-direction:row;\r\n   align-items:center;\r\n   justify-content:space-between;\r\n   gap:1rem;\r\n   z-index:3;\r\n   >div{\r\n      cursor:pointer;\r\n   }\r\n`","import { ChangeEvent, createContext, memo, useCallback, useContext, useState } from \"react\"\r\nimport LeftRightWrapper from \"../../Components/HigherComponents/LeftRightWrapper\"\r\nimport Wrapper from \"../../Components/HigherComponents/Wrapper\"\r\nimport { EditNoteType, NoteInterface } from \"../../types\"\r\nimport useFetchUser from \"../../Hooks/useFetchUser\"\r\nimport useEnableEditModal from \"../../Hooks/useEnableEditModal\"\r\nimport NoteInput from \"./Note.input.section\"\r\nimport NoteModal from \"./Note.modal\"\r\nimport NoteOutput from \"./Note.output.section\"\r\nimport useClickListener from \"./useClickListener\"\r\nimport useEventListener from \"./useEvent\"\r\nimport useHandleChange from \"../../Hooks/useHandleChange\"\r\nimport useNoteOperations from \"./NotesHooks/useNoteOperations\"\r\nimport useEnableMenu from \"./NotesHooks/useEnableNoteMenu\"\r\nimport ColorList from \"../../Components/HigherComponents/ColorList\"\r\n\r\n\r\n\r\nconst EditNoteCtx = createContext({} as EditNoteType)\r\nexport const useEditNoteCtx = () => useContext(EditNoteCtx)\r\n\r\n\r\nconst NotePage = memo(()=>{\r\n    useFetchUser({auth:true})    //first checking if the user is loggedin or not\r\n    const [edit_note, setEditNote] = useState<NoteInterface>({_id:'', title:'', content:'', bg:[]})\r\n    useEnableEditModal({_id:edit_note._id})        //this is for enabling note modal for editing the note\r\n\r\n\r\n    //custom hooks for saving notes with escape key\r\n    const {handleUpdateNote} = useNoteOperations()\r\n    useEventListener({eventType:'keyup', handler:()=>handleUpdateNote(edit_note, setEditNote), element:window})\r\n    // saving the note when user clicks outside of the edit modal or on body(edit_modal_wrapper)\r\n    useClickListener({eventType:'click', handler:()=>handleUpdateNote(edit_note, setEditNote), element:document.body})\r\n\r\n\r\n    const {handleChange} = useHandleChange()\r\n    const handleNoteChange = useCallback((e:ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=>{\r\n        handleChange(e, setEditNote)\r\n    }, [handleChange])\r\n\r\n\r\n    const {menu, setMenuDetails, setMenu} = useEnableMenu({element: document.querySelector('.overlay') as HTMLDivElement, handler:()=>setMenu(v=>({...v,enable:false})), eventType:'click'})\r\n\r\n\r\n    return(\r\n        <LeftRightWrapper styles={{height:'calc(100% - 5rem)', minHeight:'unset'}}>\r\n            <Wrapper  mode='create_note_container'>\r\n                <NoteInput />\r\n            </Wrapper>\r\n\r\n            <EditNoteCtx.Provider value={{note:edit_note, setEditNote, handleNoteChange, menu, setMenuDetails, setMenu}}>\r\n                <NoteOutput />\r\n                <NoteModal mode=\"edit_note\" >\r\n                    { menu.enable && <ColorList styles={menu.position} /> }\r\n                </NoteModal>\r\n                { menu.enable && <ColorList styles={menu.position} /> }\r\n            </EditNoteCtx.Provider>\r\n        </LeftRightWrapper>\r\n    )\r\n})\r\nexport default NotePage","import { NoteInterface } from \"../types\"\r\n\r\nconst fetchNotes = async(url:string) =>{\r\n    try {\r\n        const res = await fetch(url)\r\n        const data:{notes?:NoteInterface[]} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default fetchNotes","const updateNote = async (url:string, note:{\r\n    title:string,\r\n    content:string,\r\n    _id:string,\r\n    bg:string[]\r\n}) =>{\r\n    try {\r\n        const res = await fetch(url,{\r\n            method:'PATCH',\r\n            body:JSON.stringify(note),\r\n            headers:{'Content-Type':'application/json'}\r\n        })\r\n        const data:{success:boolean} = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\nexport default updateNote"],"names":["LeftRightWrapper","memo","children","styles","before_obj","StyledLeftRightWrapper","style","styled","Wrapper","page","mode","cls","StyledEditModalWrapper","className","StyledNoteOutWrapper","StyledWrapper","props","css","Caption","text","StyledCaption","error","Styled","Form","no_bg","handleSubmit","animate","StyledForm","onSubmit","e","preventDefault","H3","handleClick","StyledH3","onClick","auth","setUser","useUserCtx","history","useHistory","useEffect","default","res","_id","v","email","push","handleChange","handler","old","target","name","value","ref_id","useRef","current","enableEditModal","useCallback","modal","document","getElementById","p","parentElement","getBoundingClientRect","top","left","width","height","display","setTimeout","body","classList","add","placeholder","type","setSearch","StyledInput","onChange","hover_bg","StyledTextArea","useState","title","content","note","setNote","loader","setLoader","err","setError","refetch","setRefetch","useHandleChange","handleNoteChange","fetchNotes","then","notes","clear","clearInterval","handleDeleteNote","setEditNote","deleteNote","data","success","remove","bg","handleUpdateNote","opacity","updateNotes","handleNoteSubmit","stopPropagation","createNote","useNoteOperations","Error","Button","StyledMenu","tooltip_text","StyledLink","dark_theme","useThemeStates","xmlns","viewBox","fill","d","cx","cy","r","useEditNoteCtx","edit_note","useContext","ThemeCtx","setMenuDetails","StyledEditModal","id","background","border","StyledSectionHeader","alignItems","justifyContent","flexDirection","Math","random","toString","slice","StyledNote","padding","borderBottom","overflow","flex","console","log","user","listenClickEnv","contains","filter","each_note","timer","addEventListener","clearTimeout","removeEventListener","useNoteFetch","search","search_key","trim","toLowerCase","matched","includes","useNoteClickEvents","length","minHeight","Loader","size","map","index","eventType","element","window","handleRef","eventListener","hanlderRef","key","element2","eventType2","enable","item","position","menu","setMenu","currentTarget","eventListener2","white","green","yellow","purple","red","ColorList","color","clr","updateNote","Object","keys","StyledColorList","ColorsArr","ColorBox","handleColorSubmit","borderRadius","EditNoteCtx","createContext","useFetchUser","useEnableEditModal","useEventListener","useClickListener","useEnableMenu","querySelector","Provider","url","fetch","json","method","JSON","stringify","headers"],"sourceRoot":""}