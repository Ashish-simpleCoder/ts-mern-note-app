{"version":3,"file":"static/js/373.935ef672.chunk.js","mappings":"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","sources":["Components/HigherComponents/FormFields/FormField.tsx","Components/HigherComponents/FormFields/InputField.tsx","Components/HigherComponents/FormFields/LabelField.tsx","Pages/Register/Register.modal.tsx","Pages/Register/Register.page.tsx"],"sourcesContent":["import { Children, cloneElement, memo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormField = memo(({children}:{children:JSX.Element[]})=>{\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    return(\r\n        <StyledFormField>\r\n            {\r\n                Children.map(children, (child:JSX.Element)=>{\r\n                    if(typeof child.type === 'string') return child\r\n                    return cloneElement(child, {focus, setFocus})\r\n                })\r\n            }\r\n        </StyledFormField>\r\n    )\r\n})\r\nexport default FormField\r\n\r\n\r\nconst StyledFormField = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    width:100%;\r\n    position:relative;\r\n    margin-top:5rem;\r\n    /* box-shadow:0 0.1rem 0.3rem rgba(0, 0, 0, 0.5); */\r\n\r\n    /* giving margin on email form field */\r\n    &:nth-of-type(1){\r\n        margin-top:3rem;\r\n    }\r\n\r\n    label{\r\n        position:absolute;\r\n        top:50%;\r\n        left:0;\r\n        transform:translate(4rem, -50%);\r\n        pointer-events:none;\r\n        transition:all 0.25s;\r\n    }\r\n    .transform{\r\n        color:var(--transform-label-clr);\r\n        transform:translate(1rem, -230%);\r\n        font-size:clamp(1.4rem, 1.5rem, 1.5vw);\r\n    }\r\n\r\n    >img{\r\n        height:2.5rem;\r\n        position:absolute;\r\n        top:50%;\r\n        left: 0.5rem;\r\n        transform:translateY(-50%);\r\n    }\r\n\r\n    >input{\r\n        width:100%;\r\n        padding:1rem 0.5rem 1rem 4rem;\r\n    }\r\n`","import { ChangeEvent, Dispatch, SetStateAction } from 'react'\r\nimport styled from 'styled-components'\r\nimport Img from '../../PureComponents/Img'\r\n\r\nconst InputField = (({props, setFocus}:{props:InputProps, setFocus?:Dispatch<SetStateAction<boolean>>})=>{\r\n    const {state, name, handleChange} = props\r\n    return(\r\n        <>\r\n        <Img src={`./imgs/${name}.avif`} alt={name}/>\r\n        <StyledInput type=\"text\" value={state} name={name} onChange={(e)=>handleChange(e)} onFocus={()=>setFocus && setFocus(true)}\r\n            onBlur={(e)=>{\r\n                setFocus && setFocus(e.target.value.length>0 )\r\n            }}\r\n            />\r\n        </>\r\n    )\r\n})\r\nexport default InputField\r\n\r\nconst StyledInput = styled.input`\r\n    border:none;\r\n    outline:none;\r\n    padding:0.5rem 1rem;\r\n    background:var(--focused) !important;\r\n    font-size:clamp(1.5rem, 1.6rem, 1.6vw);\r\n`\r\n\r\n\r\n\r\ntype InputProps = {\r\n    name:string,\r\n    state:string,\r\n    handleChange: (e: ChangeEvent<HTMLInputElement>) => void,\r\n}","import styled from \"styled-components\"\r\n\r\ntype LabelProps = { text:string, focus?:string  }\r\n\r\n\r\nconst LabelField = (props:LabelProps)=>{\r\n    return(\r\n        <StyledLabel className={props.focus && 'transform'}>{props.text}</StyledLabel>\r\n    )\r\n}\r\nexport default LabelField\r\n\r\n\r\nconst StyledLabel = styled.label`\r\n    font-size:clamp(1.5rem, 1.6rem, 1.6vw);\r\n`","import { ChangeEvent,  FormEvent, memo, useCallback,  useMemo, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormField from \"../../Components/HigherComponents/FormFields/FormField\";\r\nimport InputField from \"../../Components/HigherComponents/FormFields/InputField\";\r\nimport LabelField from \"../../Components/HigherComponents/FormFields/LabelField\";\r\nimport Button from \"../../Components/PureComponents/Button\";\r\nimport ErrorDisplayer from \"../../Components/PureComponents/Error\";\r\nimport Form from \"../../Components/PureComponents/Form\";\r\nimport H3 from \"../../Components/PureComponents/H3\";\r\n\r\n\r\n\r\nconst RegisterModal = memo(()=>{\r\n    const [state, setState] = useState({email:'', password:\"\"})\r\n    const [errors, setErrors] = useState<{email:string, password:string}>()\r\n    const history = useHistory()\r\n    const [register_loader, setRegisterLoader] = useState(false)\r\n\r\n\r\n    const handleChange = useCallback((e:ChangeEvent<HTMLInputElement>) =>{\r\n        setState(old=>({\r\n            ...old,\r\n            [e.target.name]:e.target.value\r\n        }))\r\n    },[])\r\n\r\n    const registerUser = useCallback(async(email:string, password:string)=>{\r\n        try{\r\n            const res = await fetch('/api/v1/user',{\r\n                method:'POST',\r\n                body:JSON.stringify({email,password}),\r\n                headers:{ 'Content-Type':\"application/json\"}\r\n            })\r\n            const data:{errors:{email:string, password:string}, _id:string} = await res.json()\r\n            return {...data}\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = useCallback(async(e:FormEvent<HTMLFormElement>)=>{\r\n        e.preventDefault()\r\n        setRegisterLoader(true)\r\n        const data = await registerUser(state.email, state.password)\r\n        if(data?._id){\r\n            return history.push('/login')\r\n        }\r\n        setRegisterLoader(false)\r\n        data?.errors && setErrors(data.errors)\r\n    },[state, history, registerUser])\r\n\r\n    const EmailProps = useMemo(()=>({\r\n        state:state.email, handleChange, name:'email'\r\n    }),[state.email, handleChange])\r\n    const PasswordProps = useMemo(()=>({\r\n        state:state.password, handleChange, name:'password'\r\n    }),[state.password, handleChange])\r\n\r\n    return(\r\n        <>\r\n            <Form mode='register' handleSubmit={handleSubmit}>\r\n                <H3  text='Register'  styles={{color:'var(--secondary-clr)'}}  />\r\n                <FormField>\r\n                    <LabelField text='email'/>\r\n                    <InputField props={EmailProps}/>\r\n                </FormField>\r\n                <FormField>\r\n                    <LabelField text='password'/>\r\n                    <InputField props={PasswordProps}/>\r\n                </FormField>\r\n                {  errors?.email && <ErrorDisplayer error={errors.email}/> }\r\n                {  errors?.password && <ErrorDisplayer error={errors.password}/> }\r\n                <Button  text='submit'  mode='login_btn' loader={register_loader} />\r\n            </Form>\r\n        </>\r\n    )\r\n})\r\nexport default RegisterModal","import RegisterModal from \"./Register.modal\"\r\n\r\nconst RegisterPage = () =>{\r\n    return(\r\n        <>\r\n            <RegisterModal />\r\n        </>\r\n    )\r\n}\r\nexport default RegisterPage"],"names":["FormField","memo","children","useState","focus","setFocus","StyledFormField","Children","child","type","cloneElement","styled","props","state","name","handleChange","src","alt","StyledInput","value","onChange","e","onFocus","onBlur","target","length","StyledLabel","className","text","RegisterModal","email","password","setState","errors","setErrors","history","useHistory","register_loader","setRegisterLoader","useCallback","old","registerUser","fetch","method","body","JSON","stringify","headers","res","json","data","console","log","handleSubmit","preventDefault","_id","push","EmailProps","useMemo","PasswordProps","Form","mode","H3","styles","color","LabelField","InputField","Error","error","Button","loader"],"sourceRoot":""}